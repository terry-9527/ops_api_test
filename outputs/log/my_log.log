2022-04-22 15:02:02,378 ARS INFO handle_log.py [29行]: this is a test by terry
2022-04-22 17:37:27,430 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:37:27,430 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:37:27,430 ARS INFO handle_request.py [38行]: 请求头为：
 {'Content-Type': 'application/json'}
2022-04-22 17:37:27,430 ARS INFO handle_request.py [48行]: 请求的URL为："https://opstest.arsyun.com/api/v5/public"/base/login
2022-04-22 17:37:27,430 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:37:51,449 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:37:51,449 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:37:51,449 ARS INFO handle_request.py [38行]: 请求头为：
 {'Content-Type': 'application/json'}
2022-04-22 17:37:51,450 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-22 17:37:51,450 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:37:51,562 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:37:51,563 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '密码为必填字段', 'data': {}, 'time': '1.539391ms'}
2022-04-22 17:40:25,807 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:40:25,807 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:40:25,807 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:40:25,808 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:40:25,808 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:40:25,918 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:40:25,918 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '167027', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.492621ms'}
2022-04-22 17:41:54,862 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:41:54,862 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:41:54,863 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:41:54,863 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:41:54,863 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:41:54,947 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:41:54,947 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '996790', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.538596ms'}
2022-04-22 17:47:00,068 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:47:00,068 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:47:00,069 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:47:00,069 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:47:00,069 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:47:00,192 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:47:00,192 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '943584', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.59927ms'}
2022-04-22 17:48:16,006 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:48:16,006 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:48:16,006 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:48:16,007 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:48:16,007 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:48:16,121 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:48:16,121 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '968024', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.740309ms'}
2022-04-22 17:51:17,593 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:51:17,593 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:51:17,593 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:51:17,595 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:51:17,595 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:51:17,681 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:51:17,681 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '924974', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.804441ms'}
2022-04-22 17:52:40,652 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:52:40,652 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:52:40,654 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:52:40,654 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:52:40,654 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:52:40,744 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:52:40,745 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '012814', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.507003ms'}
2022-04-22 17:53:10,835 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:53:10,835 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:53:10,835 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:53:10,835 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:53:10,835 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:53:10,963 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:53:10,963 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '012814', 'send_rest_sec': 30, 'expire_sec': 870}, 'time': '2.059234ms'}
2022-04-22 17:55:34,464 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:55:34,464 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:55:34,464 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:55:34,465 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:55:34,465 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:55:34,564 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:55:34,566 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '595898', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.856508ms'}
2022-04-22 17:57:32,999 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 17:57:32,999 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 17:57:32,999 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 17:57:33,000 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 17:57:33,000 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 17:57:33,084 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 17:57:33,085 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '281745', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.816989ms'}
2022-04-22 18:09:03,608 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:09:03,608 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:09:03,608 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:09:03,609 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:09:03,609 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:09:03,720 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:09:03,721 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '844550', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '3.476921ms'}
2022-04-22 18:09:27,631 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:09:27,631 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:09:27,631 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:09:27,632 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:09:27,632 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:09:27,721 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:09:27,721 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '844550', 'send_rest_sec': 36, 'expire_sec': 876}, 'time': '1.820939ms'}
2022-04-22 18:09:43,033 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:09:43,033 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:09:43,033 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:09:43,033 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:09:43,035 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:09:43,091 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:09:43,092 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '844550', 'send_rest_sec': 21, 'expire_sec': 861}, 'time': '1.735152ms'}
2022-04-22 18:10:06,526 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:10:06,526 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:10:06,526 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:10:06,528 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:10:06,528 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:10:06,585 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:10:06,585 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '315090', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.017698ms'}
2022-04-22 18:12:52,347 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:12:52,347 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:12:52,347 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:12:52,348 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:12:52,348 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:12:52,457 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:12:52,457 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '958145', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.012763ms'}
2022-04-22 18:13:12,930 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:13:12,930 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:13:12,930 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:13:12,931 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:13:12,931 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:13:12,996 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:13:12,996 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '958145', 'send_rest_sec': 40, 'expire_sec': 879}, 'time': '1.716457ms'}
2022-04-22 18:14:21,319 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:14:21,319 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:14:21,319 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:14:21,319 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:14:21,319 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:14:21,415 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:14:21,416 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '957450', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.953688ms'}
2022-04-22 18:16:40,275 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:16:40,275 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:16:40,275 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:16:40,275 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:16:40,276 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:16:40,409 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:16:40,411 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '057084', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.570209ms'}
2022-04-22 18:16:56,174 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-22 18:16:56,174 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-22 18:16:56,174 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-22 18:16:56,176 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-22 18:16:56,176 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-22 18:16:56,276 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-22 18:16:56,276 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '057084', 'send_rest_sec': 45, 'expire_sec': 884}, 'time': '1.647236ms'}
2022-04-24 09:46:14,578 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 09:46:14,599 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 09:46:14,600 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 09:46:14,603 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 09:46:14,604 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 09:46:14,910 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 09:46:14,910 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '836835', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.761058ms'}
2022-04-24 11:21:10,287 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 11:21:10,289 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 11:21:10,289 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 11:21:10,289 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 11:21:10,289 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 11:21:10,430 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 11:21:10,432 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '密码为必填字段', 'data': {}, 'time': '1.412294ms'}
2022-04-24 11:21:44,753 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 11:21:44,753 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 11:21:44,755 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 11:21:44,756 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 11:21:44,756 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 11:21:44,831 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 11:21:44,831 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '987382', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.08441ms'}
2022-04-24 11:54:05,081 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 11:54:05,081 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 11:54:05,081 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 11:54:05,083 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 11:54:05,083 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 11:54:05,198 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 11:54:05,199 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '896825', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.092694ms'}
2022-04-24 11:55:16,486 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 11:55:16,486 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 11:55:16,486 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 11:55:16,487 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 11:55:16,488 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 11:55:16,587 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 11:55:16,587 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '979973', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.656902ms'}
2022-04-24 11:57:01,016 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 11:57:01,016 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 11:57:01,016 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 11:57:01,019 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 11:57:01,019 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 11:57:01,086 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 11:57:01,086 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '566684', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.625388ms'}
2022-04-24 14:11:40,640 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:11:40,651 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 14:11:40,651 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:11:40,651 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 14:11:40,652 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 14:11:41,134 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 14:11:41,134 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '验证码失效', 'data': {}, 'time': '2.033947ms'}
2022-04-24 14:36:54,776 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:36:54,776 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-24 14:36:54,776 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:36:54,776 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 14:36:54,776 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 14:36:54,891 ARS INFO handle_request.py [30行]: 响应状态码：404
2022-04-24 14:37:26,375 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:37:26,375 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-24 14:37:26,375 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:37:26,375 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 14:37:26,376 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 14:37:26,467 ARS INFO handle_request.py [30行]: 响应状态码：404
2022-04-24 14:40:15,692 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:40:15,692 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 14:40:15,692 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:40:15,694 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 14:40:15,694 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 14:40:15,799 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 14:40:15,799 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '450965', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.908924ms'}
2022-04-24 14:42:13,265 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:42:13,265 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 14:42:13,265 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:42:13,265 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 14:42:13,265 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 14:42:13,348 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 14:42:13,348 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '697409', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.624137ms'}
2022-04-24 14:42:44,448 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:42:44,449 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 14:42:44,449 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:42:44,449 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 14:42:44,450 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 14:42:44,539 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 14:42:44,539 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '697409', 'send_rest_sec': 29, 'expire_sec': 869}, 'time': '1.953852ms'}
2022-04-24 14:43:04,319 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 14:43:04,319 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 14:43:04,319 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 14:43:04,320 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 14:43:04,320 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 14:43:04,391 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 14:43:04,391 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '697409', 'send_rest_sec': 9, 'expire_sec': 849}, 'time': '1.848564ms'}
2022-04-24 15:02:47,348 ARS INFO test_002_login.py [25行]: ['#sms_code#']
2022-04-24 15:04:08,609 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:04:08,609 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:04:08,609 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:04:08,609 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:04:08,609 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:04:08,748 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:04:08,750 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '673441', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.153478ms'}
2022-04-24 15:04:21,017 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:04:21,019 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:04:21,019 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:04:21,019 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:04:21,019 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:04:21,088 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:04:21,088 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '673441', 'send_rest_sec': 47, 'expire_sec': 888}, 'time': '1.867343ms'}
2022-04-24 15:05:52,897 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:05:52,897 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:09:40,907 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:09:40,907 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:09:40,907 ARS INFO test_002_login.py [27行]: {"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:10:00,736 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:10:00,736 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:11:30,532 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:11:30,532 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:11:30,532 ARS INFO test_002_login.py [27行]: {"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:12:04,124 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:12:04,124 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:12:04,124 ARS INFO test_002_login.py [27行]: <class 'str'>
2022-04-24 15:13:32,449 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:13:32,450 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:13:32,450 ARS INFO test_002_login.py [27行]: <class 'str'>
2022-04-24 15:13:32,450 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:13:32,450 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:13:32,450 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:13:32,450 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:13:32,451 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:13:32,545 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:13:32,545 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '561646', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.675752ms'}
2022-04-24 15:13:32,549 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:13:32,549 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:13:32,550 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:13:32,552 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:13:32,552 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:13:32,625 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:13:32,625 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '验证码不对', 'data': {}, 'time': '1.770217ms'}
2022-04-24 15:14:42,433 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:14:42,433 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:14:42,435 ARS INFO test_002_login.py [27行]: <class 'str'>
2022-04-24 15:14:42,435 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:14:42,435 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:14:42,435 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:14:42,436 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:14:42,436 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:14:42,548 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:14:42,549 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '719209', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.019622ms'}
2022-04-24 15:14:42,552 ARS INFO test_002_login.py [30行]: 719209
2022-04-24 15:14:42,552 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:14:42,552 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:14:42,552 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:14:42,555 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:14:42,555 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:14:42,647 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:14:42,647 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '验证码不对', 'data': {}, 'time': '1.735094ms'}
2022-04-24 15:17:38,272 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:17:38,272 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:17:38,272 ARS INFO test_002_login.py [27行]: {"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:17:38,273 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:17:38,273 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:17:38,273 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:17:38,273 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:17:38,273 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:17:38,368 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:17:38,369 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '712283', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.781055ms'}
2022-04-24 15:17:38,371 ARS INFO test_002_login.py [30行]: 712283
2022-04-24 15:17:38,371 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:17:38,371 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:17:38,371 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:17:38,374 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:17:38,374 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:17:38,450 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:17:38,450 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '验证码不对', 'data': {}, 'time': '1.866103ms'}
2022-04-24 15:20:55,697 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:20:55,697 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:20:55,697 ARS INFO test_002_login.py [27行]: {"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:20:55,697 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:20:55,697 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:20:55,697 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:20:55,699 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:20:55,699 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:20:55,759 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:20:55,759 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '764252', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.622067ms'}
2022-04-24 15:20:55,761 ARS INFO test_002_login.py [30行]: 764252
2022-04-24 15:20:55,761 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:20:55,761 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:20:55,761 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:20:55,763 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:20:55,763 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '764252', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:20:55,832 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:20:55,833 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxMzg5NjU2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3ODM4NTZ9.TWdtjxxCqbY496tTDk0FRmHRut1eoORLnPlrTZi2oaE'}, 'time': '13.428017ms'}
2022-04-24 15:21:18,796 ARS INFO test_002_login.py [24行]: {'case_id': 'login-001', 'title': '正常账号登陆', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"sms_code":"$..sms_code"}', 'expected': None, 'check_sql': None, 'execute': 'True'}
2022-04-24 15:21:18,796 ARS INFO test_002_login.py [26行]: ['#sms_code#']
2022-04-24 15:21:18,798 ARS INFO test_002_login.py [27行]: {"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:21:18,798 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:21:18,798 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:21:18,798 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:21:18,799 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:21:18,799 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:21:18,870 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:21:18,871 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '063939', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.760592ms'}
2022-04-24 15:21:18,872 ARS INFO test_002_login.py [30行]: 063939
2022-04-24 15:21:18,872 ARS INFO test_002_login.py [32行]: {"sms_code":"063939","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:21:18,872 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:21:18,872 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:21:18,873 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:21:18,875 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:21:18,875 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '063939', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:21:18,975 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:21:18,975 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxMzg5Njc5LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3ODM4Nzl9.Hhp3ztKaCPrYWf-hPGuin0jrDcPy6u__jisqWvN2ISg'}, 'time': '13.582625ms'}
2022-04-24 15:32:48,526 ARS INFO test_002_login.py [24行]: =========== 登陆接口测试  ===============
2022-04-24 15:32:48,528 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:32:48,528 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:32:48,528 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:32:48,528 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:32:48,528 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:32:48,632 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:32:48,632 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '145089', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.148539ms'}
2022-04-24 15:32:48,633 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：145089
2022-04-24 15:32:48,634 ARS INFO test_002_login.py [28行]: 145089
2022-04-24 15:32:48,634 ARS INFO test_002_login.py [30行]: {"sms_code":"145089","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}
2022-04-24 15:32:48,634 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:32:48,634 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:32:48,634 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:32:48,635 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:32:48,635 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '145089', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:32:48,703 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:32:48,703 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxMzkwMzY5LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3ODQ1Njl9.EaQoEDPbmd4BQymdixcwd6QgM0Iq4BCI3XMXQZs_QFI'}, 'time': '14.778669ms'}
2022-04-24 15:35:26,296 ARS INFO test_002_login.py [24行]: =========== 登陆接口测试  ===============
2022-04-24 15:35:26,296 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:35:26,296 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:35:26,296 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:35:26,296 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:35:26,296 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:35:26,391 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:35:26,392 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '518002', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.927735ms'}
2022-04-24 15:35:26,394 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：518002
2022-04-24 15:35:26,394 ARS INFO test_002_login.py [28行]: 518002
2022-04-24 15:35:26,395 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:35:26,395 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:35:26,395 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:35:26,398 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:35:26,399 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '518002', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:35:26,489 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:35:26,489 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxMzkwNTI3LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3ODQ3Mjd9.ofU9KngIoAI3RFTj1MZWKUh88cZgr91O6K8SBtWwCVQ'}, 'time': '13.61295ms'}
2022-04-24 15:35:54,383 ARS INFO test_002_login.py [24行]: =========== 登陆接口测试  ===============
2022-04-24 15:35:54,384 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:35:54,384 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:35:54,384 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:35:54,384 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:35:54,384 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:35:54,459 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:35:54,459 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '497274', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.797647ms'}
2022-04-24 15:35:54,460 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：497274
2022-04-24 15:35:54,460 ARS INFO test_002_login.py [28行]: 497274
2022-04-24 15:35:54,460 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:35:54,460 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:35:54,460 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:35:54,460 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:35:54,460 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '497274', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:35:54,535 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:35:54,536 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxMzkwNTU1LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3ODQ3NTV9.64rU5mvCXUI843CxXLDxM8jvuFSb9H3aHFV9wZ_dX1Q'}, 'time': '13.588076ms'}
2022-04-24 15:39:15,019 ARS INFO test_002_login.py [24行]: =========== 登陆接口测试  ===============
2022-04-24 15:39:15,019 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:39:15,020 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:39:15,020 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:39:15,022 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 15:39:15,022 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 15:39:15,129 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:39:15,129 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '653686', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.988307ms'}
2022-04-24 15:39:15,131 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：653686
2022-04-24 15:39:15,131 ARS INFO test_002_login.py [28行]: 653686
2022-04-24 15:39:15,131 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 15:39:15,131 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 15:39:15,131 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 15:39:15,131 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 15:39:15,131 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '653686', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 15:39:15,196 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 15:39:15,196 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxMzkwNzU2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3ODQ5NTZ9.iYlggYRftEpcyFjPqW3MCCg7ZQbEa2h1JF5gFFLMqDg'}, 'time': '15.712865ms'}
2022-04-24 18:13:31,375 ARS INFO test_002_login.py [24行]: =========== 登陆接口测试  ===============
2022-04-24 18:13:31,380 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:13:31,380 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:13:31,381 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:13:31,381 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 18:13:31,381 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 18:13:31,524 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:13:31,526 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '327688', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.647851ms'}
2022-04-24 18:13:31,529 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：327688
2022-04-24 18:13:31,529 ARS INFO test_002_login.py [28行]: 327688
2022-04-24 18:13:31,529 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:13:31,529 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:13:31,529 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:13:31,532 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 18:13:31,532 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '327688', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 18:13:31,668 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:13:31,670 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAwMDEyLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTQyMTJ9.jVTeoVC6o216NFIuRgu9fFa1kF4x5h4lxYcTBJMkQXc'}, 'time': '14.905518ms'}
2022-04-24 18:13:31,670 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-24 18:13:31,670 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAwMDEyLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTQyMTJ9.jVTeoVC6o216NFIuRgu9fFa1kF4x5h4lxYcTBJMkQXc']
2022-04-24 18:13:31,670 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAwMDEyLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTQyMTJ9.jVTeoVC6o216NFIuRgu9fFa1kF4x5h4lxYcTBJMkQXc,并设置为Data类实例化对象的属性和值。
2022-04-24 18:39:13,680 ARS INFO test_003_machineroom.py [26行]: =========== 登陆接口测试  ===============
2022-04-24 18:39:13,680 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:39:13,680 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:39:13,680 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:39:13,681 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 18:39:13,681 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 18:39:13,795 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:39:13,796 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '328724', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.634053ms'}
2022-04-24 18:39:13,798 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：328724
2022-04-24 18:39:13,799 ARS INFO test_003_machineroom.py [30行]: 328724
2022-04-24 18:39:13,799 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:39:13,799 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:39:13,799 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:39:13,801 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 18:39:13,802 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '328724', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 18:39:13,888 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:39:13,888 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAxNTU0LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTU3NTR9.1cuDI3cc1o_vRDy9hMQbK6hRiiUSwooTBhO6tTfn9AE'}, 'time': '14.40944ms'}
2022-04-24 18:39:13,889 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-24 18:39:13,891 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAxNTU0LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTU3NTR9.1cuDI3cc1o_vRDy9hMQbK6hRiiUSwooTBhO6tTfn9AE']
2022-04-24 18:39:13,891 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAxNTU0LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTU3NTR9.1cuDI3cc1o_vRDy9hMQbK6hRiiUSwooTBhO6tTfn9AE,并设置为Data类实例化对象的属性和值。
2022-04-24 18:39:55,391 ARS INFO test_003_machineroom.py [26行]: =========== 登陆接口测试  ===============
2022-04-24 18:39:55,391 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:39:55,391 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:39:55,391 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:39:55,392 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-24 18:39:55,392 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-24 18:39:55,559 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:39:55,559 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '208408', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.987268ms'}
2022-04-24 18:39:55,559 ARS INFO hand_sms_code.py [27行]: 生成的验证码为：208408
2022-04-24 18:39:55,559 ARS INFO test_003_machineroom.py [30行]: 208408
2022-04-24 18:39:55,559 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:39:55,559 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:39:55,560 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:39:55,561 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-24 18:39:55,561 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '208408', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-24 18:39:55,639 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:39:55,639 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAxNTk2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTU3OTZ9.n-HYfg_dTj_P-3VfX3iPWq7L3E4TaDJpKF06xsTbzCQ'}, 'time': '14.381429ms'}
2022-04-24 18:39:55,639 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-24 18:39:55,639 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAxNTk2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTU3OTZ9.n-HYfg_dTj_P-3VfX3iPWq7L3E4TaDJpKF06xsTbzCQ']
2022-04-24 18:39:55,639 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDAxNTk2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA3OTU3OTZ9.n-HYfg_dTj_P-3VfX3iPWq7L3E4TaDJpKF06xsTbzCQ,并设置为Data类实例化对象的属性和值。
2022-04-24 18:39:55,641 ARS INFO test_003_machineroom.py [26行]: =========== 登陆接口测试  ===============
2022-04-24 18:39:55,641 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-24 18:39:55,641 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-24 18:39:55,643 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-24 18:39:55,643 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-24 18:39:55,643 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-24 18:39:55,737 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-24 18:39:55,739 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.373µs'}
2022-04-25 11:43:00,265 ARS INFO handle_replace.py [27行]: 查找到需要替换的标记符为：['phone', 'sms_code']
2022-04-25 11:43:00,294 ARS INFO handle_replace.py [33行]: 需要替换的phone为：18277777777
2022-04-25 11:43:00,295 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 11:43:00,295 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 11:43:00,295 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 11:43:00,295 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 11:43:00,295 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 11:43:00,654 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 11:43:00,654 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '152.679932ms'}
2022-04-25 11:44:38,867 ARS INFO handle_replace.py [25行]: {'token': '#phone#', 'machine_name': '#sms_code#', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 11:44:38,867 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['phone', 'sms_code']
2022-04-25 11:44:38,868 ARS INFO handle_replace.py [34行]: 需要替换的phone为：18277777777
2022-04-25 11:44:38,868 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 11:44:38,868 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 11:44:38,868 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 11:44:38,868 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 11:44:38,868 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 11:44:39,095 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 11:44:39,096 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '155.531052ms'}
2022-04-25 11:46:30,708 ARS INFO handle_replace.py [25行]: {'token': '#phone#', 'machine_name': '#sms_code#', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 11:46:30,708 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['phone', 'sms_code']
2022-04-25 11:46:30,710 ARS INFO handle_replace.py [34行]: 需要替换的phone为：18277777777
2022-04-25 11:46:30,710 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 11:46:30,710 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 11:46:30,710 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 11:46:30,710 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 11:46:30,710 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 11:46:30,782 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 11:46:30,782 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '100541', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.597721ms'}
2022-04-25 11:46:30,783 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：100541
2022-04-25 11:46:30,783 ARS INFO handle_replace.py [36行]: 需要替换的sms_code为：100541
2022-04-25 11:46:30,783 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'token': '#phone#', 'machine_name': '#sms_code#', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 15:46:09,891 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:46:09,891 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:46:09,892 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 15:46:09,896 ARS INFO handle_replace.py [34行]: 需要替换的phone为：18277777777
2022-04-25 15:46:09,896 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:46:09,896 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:46:09,896 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:46:09,897 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 15:46:09,897 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 15:46:10,404 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:46:10,404 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '463892', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.904195ms'}
2022-04-25 15:46:10,404 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：463892
2022-04-25 15:46:10,406 ARS INFO handle_replace.py [36行]: 需要替换的sms_code为：463892
2022-04-25 15:46:10,406 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:46:10,407 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:46:10,407 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:46:10,407 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:46:10,407 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 15:46:10,408 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '#phone#', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-25 15:46:10,483 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:46:11,190 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:46:11,190 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 15:46:11,190 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 15:48:25,447 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:48:25,447 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:48:25,447 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 15:48:25,448 ARS INFO handle_replace.py [34行]: 需要替换的phone为：18277777777
2022-04-25 15:48:25,448 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:48:25,448 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:48:25,448 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:48:25,449 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 15:48:25,449 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 15:48:25,529 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:48:25,529 ARS INFO handle_request.py [31行]: 响应数据为：{"code":0,"msg":"操作成功","data":{"is_already_send":false,"sms_code":"514330","send_rest_sec":60,"expire_sec":900},"time":"1.54874ms"}
2022-04-25 15:48:25,529 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：514330
2022-04-25 15:48:25,529 ARS INFO handle_replace.py [36行]: 需要替换的sms_code为：514330
2022-04-25 15:48:25,529 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:48:25,529 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:48:25,529 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:48:25,529 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:48:25,531 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 15:48:25,531 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '#phone#', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-25 15:48:25,595 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:48:25,595 ARS INFO handle_request.py [31行]: 响应数据为：
2022-04-25 15:48:26,235 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:48:26,235 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 15:48:26,235 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 15:48:51,099 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:48:51,099 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:48:51,099 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 15:48:51,100 ARS INFO handle_replace.py [34行]: 需要替换的phone为：18277777777
2022-04-25 15:48:51,100 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:48:51,100 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:48:51,100 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:48:51,102 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 15:48:51,102 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 15:48:51,169 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:48:51,169 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '514330', 'send_rest_sec': 34, 'expire_sec': 874}, 'time': '1.722402ms'}
2022-04-25 15:48:51,171 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：514330
2022-04-25 15:48:51,171 ARS INFO handle_replace.py [36行]: 需要替换的sms_code为：514330
2022-04-25 15:48:51,171 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:48:51,171 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:48:51,171 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:48:51,171 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:48:51,171 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 15:48:51,171 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '#phone#', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-25 15:48:51,223 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:48:51,802 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:48:51,802 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 15:48:51,802 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 15:52:00,415 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:52:00,415 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:52:00,416 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 15:52:00,416 ARS INFO handle_replace.py [34行]: 需要替换的phone为：18277777777
2022-04-25 15:52:00,416 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:52:00,416 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:52:00,417 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:52:00,417 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 15:52:00,417 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 15:52:00,479 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:52:00,479 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '924810', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.886791ms'}
2022-04-25 15:52:00,480 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：924810
2022-04-25 15:52:00,480 ARS INFO handle_replace.py [36行]: 需要替换的sms_code为：924810
2022-04-25 15:52:00,480 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:52:00,480 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:52:00,480 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:52:00,480 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:52:00,480 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 15:52:00,480 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '18277777777', 'password': 'RIZY4+85w5k+L54sGpnUbMyCWC+5hwPLSpzO7In9dupT5YsbjyKvbEcmNgz7XeXC1lcdpI2i0tXPli1waPbE4lpE1n+TlTabGeplZ1uJu4p7ESB/KafgmX5K7OFZV+bYqVodrOaPTbRtUwyU+hEVfhe/fHaiJTHj02+xmD+T7jB0sGBcEjo0tXdyiPkiERRbfpb9NctFc5PSAgKwas6rU2qHcr9wAtX89l2+Llh0QOJ6qe4KM3tCbvsEHZryuCPXVlB9/Esx9pBw0QCnUlLe3fy8tPBeWk1NAyEb4I7vys65AE9A/M87GKtPPNrjTq/XToyLp66p3w9IYTfIQaEen6VP3vV4c/izGlCiwhs9kOj63bXMgJs4zAWY4w1vqMHRzxUEh4GIFge+nuBjcoUj+M6wB5JxUEP/86x4JNK6qKnwqbkGwyF+L/GpC+cV0zPJ7gF9smlnjPIuu5e1apKv6YOyg0YO1m8NBcmRJd6o+Z5cPKmyrOAelrgt8sYSHuIn01XehlBzQg0AIvBJwKMyLPIA4dcFFpBbUNkjc1/T98OvYywwjVeNPrULujjjp81WX1Ek4LA7Jcr3L04MbHLIf1pKo0Qw7XHRQXmPLvMm5pG1dPt6VVikA2NfP75UfZATU1mKZ65vaIwFzrs1ACA5LbscptTV55q1WOi8JG+R5JU='}
2022-04-25 15:52:00,562 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:52:00,563 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '验证码不对', 'data': {}, 'time': '1.79076ms'}
2022-04-25 15:52:00,563 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 15:52:00,563 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：False
2022-04-25 15:52:00,569 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:52:00,569 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 15:52:00,569 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 15:56:32,303 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:56:32,304 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:56:32,304 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 15:56:32,304 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 15:56:32,305 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:56:32,305 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:56:32,305 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:56:32,305 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 15:56:32,305 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 15:56:32,408 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:56:32,408 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '212214', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.750545ms'}
2022-04-25 15:56:32,411 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：212214
2022-04-25 15:56:32,411 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：212214
2022-04-25 15:56:32,411 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:56:32,411 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:56:32,412 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:56:32,412 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:56:32,414 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 15:56:32,414 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '#sms_code#', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 15:56:32,496 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:56:32,496 ARS INFO handle_request.py [31行]: 响应数据为：{'code': -1, 'msg': '验证码不对', 'data': {}, 'time': '1.725819ms'}
2022-04-25 15:56:32,496 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 15:56:32,496 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：False
2022-04-25 15:56:32,503 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:56:32,503 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 15:56:32,503 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 15:58:06,147 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:58:06,148 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:58:06,148 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 15:58:06,148 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 15:58:06,148 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:58:06,148 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:58:06,148 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:58:06,148 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 15:58:06,148 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 15:58:06,238 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:58:06,239 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '249483', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.760957ms'}
2022-04-25 15:58:06,241 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：249483
2022-04-25 15:58:06,241 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：249483
2022-04-25 15:58:06,243 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"249483","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 15:58:06,243 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 15:58:06,243 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 15:58:06,243 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 15:58:06,246 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 15:58:06,246 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '249483', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 15:58:06,337 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 15:58:06,337 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4Mjg2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI0ODZ9.MQiBxzyLJK5_WRuKqup9Rj_Xmt1DJjevcg6V1x5255o'}, 'time': '14.345829ms'}
2022-04-25 15:58:06,337 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 15:58:06,338 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4Mjg2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI0ODZ9.MQiBxzyLJK5_WRuKqup9Rj_Xmt1DJjevcg6V1x5255o']
2022-04-25 15:58:06,338 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4Mjg2LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI0ODZ9.MQiBxzyLJK5_WRuKqup9Rj_Xmt1DJjevcg6V1x5255o,并设置为Data类实例化对象的属性和值。
2022-04-25 15:58:06,347 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 15:58:06,347 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 15:58:06,347 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:00:00,577 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:00:00,577 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:00:00,577 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:00:00,578 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 16:00:00,578 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:00:00,578 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:00:00,578 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:00:00,579 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:00:00,579 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 16:00:00,680 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:00:00,680 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '519947', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.941216ms'}
2022-04-25 16:00:00,680 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：519947
2022-04-25 16:00:00,680 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：519947
2022-04-25 16:00:00,680 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"519947","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:00:00,680 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:00:00,680 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:00:00,680 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:00:00,681 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:00:00,681 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '519947', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 16:00:00,764 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:00:00,764 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4NDAwLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI2MDB9.ZPmrzRPtp1i37oaKHdzBmhubXfLIe-RpQ6YbJ1fiogA'}, 'time': '14.02287ms'}
2022-04-25 16:00:00,766 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:00:00,766 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4NDAwLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI2MDB9.ZPmrzRPtp1i37oaKHdzBmhubXfLIe-RpQ6YbJ1fiogA']
2022-04-25 16:00:00,766 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4NDAwLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI2MDB9.ZPmrzRPtp1i37oaKHdzBmhubXfLIe-RpQ6YbJ1fiogA,并设置为Data类实例化对象的属性和值。
2022-04-25 16:00:00,779 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:00:00,779 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:00:00,779 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:01:18,369 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:01:18,369 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:01:18,369 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:01:18,371 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 16:01:18,371 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:01:18,371 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:01:18,371 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:01:18,371 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:01:18,371 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 16:01:18,513 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:01:18,515 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '271835', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.496223ms'}
2022-04-25 16:01:18,516 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：271835
2022-04-25 16:01:18,516 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：271835
2022-04-25 16:01:18,516 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"271835","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:01:18,516 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:01:18,518 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:01:18,518 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:01:18,519 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:01:18,519 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '271835', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 16:01:18,636 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:01:18,638 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4NDc4LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI2Nzh9.XtIuHLm8ngv_WZxmj_YDyoE7t2dZaWR4E-HG6z-0kuM'}, 'time': '14.317651ms'}
2022-04-25 16:01:18,638 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:01:18,638 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4NDc4LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI2Nzh9.XtIuHLm8ngv_WZxmj_YDyoE7t2dZaWR4E-HG6z-0kuM']
2022-04-25 16:01:18,638 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4NDc4LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzI2Nzh9.XtIuHLm8ngv_WZxmj_YDyoE7t2dZaWR4E-HG6z-0kuM,并设置为Data类实例化对象的属性和值。
2022-04-25 16:01:18,648 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:01:18,648 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '正常账号登陆', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:01:18,648 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:01:18,649 ARS INFO handle_replace.py [48行]: 没有需要替换的数据
2022-04-25 16:06:42,085 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:06:42,086 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:06:42,086 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:06:42,088 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 16:06:42,088 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:06:42,088 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:06:42,088 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:06:42,088 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:06:42,088 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 16:06:42,209 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:06:42,210 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '080295', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.033639ms'}
2022-04-25 16:06:42,212 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：080295
2022-04-25 16:06:42,212 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：080295
2022-04-25 16:06:42,212 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"080295","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:07:40,249 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:07:40,251 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:07:40,252 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:07:40,255 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:07:40,256 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '080295', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 16:07:40,377 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:07:40,377 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4ODYwLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMwNjB9.norJKDXj3BTrv9UDfSflUA6WvGcltBQ7jtKQjc0LFng'}, 'time': '13.7337ms'}
2022-04-25 16:07:57,985 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:07:57,986 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4ODYwLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMwNjB9.norJKDXj3BTrv9UDfSflUA6WvGcltBQ7jtKQjc0LFng']
2022-04-25 16:07:57,986 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4ODYwLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMwNjB9.norJKDXj3BTrv9UDfSflUA6WvGcltBQ7jtKQjc0LFng,并设置为Data类实例化对象的属性和值。
2022-04-25 16:09:21,891 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:09:21,891 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:09:21,892 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:09:21,894 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 16:09:21,894 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:09:21,894 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:09:21,894 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:09:21,894 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:09:21,894 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 16:09:21,980 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:09:21,980 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '546988', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.878736ms'}
2022-04-25 16:09:21,982 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：546988
2022-04-25 16:09:21,982 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：546988
2022-04-25 16:09:21,982 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"546988","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:09:21,983 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:09:21,983 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:09:21,983 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:09:21,983 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:09:21,983 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '546988', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 16:09:22,083 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:09:22,083 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4OTYyLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMxNjJ9.aFtNuiC9_ovEfVMsv8DZh3bcy__SHhdGBcU6LtJixCQ'}, 'time': '13.445265ms'}
2022-04-25 16:09:22,083 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:09:22,084 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4OTYyLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMxNjJ9.aFtNuiC9_ovEfVMsv8DZh3bcy__SHhdGBcU6LtJixCQ']
2022-04-25 16:09:22,084 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc4OTYyLCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMxNjJ9.aFtNuiC9_ovEfVMsv8DZh3bcy__SHhdGBcU6LtJixCQ,并设置为Data类实例化对象的属性和值。
2022-04-25 16:09:22,091 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:09:22,091 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:09:22,092 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:09:22,092 ARS INFO handle_replace.py [48行]: 没有需要替换的数据
2022-04-25 16:10:38,439 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:10:38,439 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:10:38,439 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:10:38,440 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18277777777
2022-04-25 16:10:38,440 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:10:38,440 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:10:38,440 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:10:38,440 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:10:38,440 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18277777777'}
2022-04-25 16:10:38,572 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:10:38,572 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '708359', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.292968ms'}
2022-04-25 16:10:38,574 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：708359
2022-04-25 16:10:38,575 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：708359
2022-04-25 16:10:38,575 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"708359","phone":"18277777777","password":"w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:10:38,575 ARS INFO test_003_machineroom.py [38行]: {'sms_code': '708359', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 16:10:38,575 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:10:38,575 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:10:38,576 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:10:38,577 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:10:38,578 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '708359', 'phone': '18277777777', 'password': 'w4NNQZNeRRSUq9s8kPD6W1panim9hF09jlEBMqzDRrm8MbabPo+fykOhgVTw4HaNceDHFjxQdKleiAbEj3GIMyuUO4xnIGKyIUcvSQw43R+vyItxUCUPQaFBF99u4blYXNAmPosvKVxTSdcD/6Xf+bHOgrSb74qzSLh9ZlTA4kl2T59MSovvYQgKqG/eyg9rPPh2TclCovcQYUee9uPMVtdOn40N9cahFHCPP/bb4S4XkulDhISSOZXsCrwcoSuQ2zI30AmM4+OLzQQrdggJAw+wW7ODsDAAYeUonANuLA1wzV9cgjo0STXdRipsqawI3J+HflmhcULXexxMjEZ/uTvYG4JJjRp2YNjASrsro3zRLf37GwgxE1IVAoBKle6FDRbAtWlbwW/BWhYMFR8d9SeH1bxDSNYAtPS6VDOFabx/vOyxgr8OQVjdY6yexP4RUVAQBswOJOD1qg4I+VOvt+MjNRLfx+2VU5ddHOdHsiXsDlkS9XJO7XOg/y20llq1ZTIxXQWbcRlDd5Lre0wvRdJwt1/GYNcE2NZq7HLFSjM80Ig6gO13O6gGnW6KBN3/HDYUaB0U8+68va6Jv/hqOwwfWDSq1Yy9vTSzgdZw7FpczbrRyBEgVwazw/STTrejzjkOJCVcbKmd4DxyI6YUCIIdjZMsnf7uMB6xoBGlXyY='}
2022-04-25 16:10:38,663 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:10:38,663 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 218, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc5MDM4LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMyMzh9.fTOcWTbTRqnYBMhNtp00-rewnnfPJ9UkKXfzmMUB5n4'}, 'time': '13.922747ms'}
2022-04-25 16:10:38,663 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:10:38,663 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc5MDM4LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMyMzh9.fTOcWTbTRqnYBMhNtp00-rewnnfPJ9UkKXfzmMUB5n4']
2022-04-25 16:10:38,664 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjoyMTgsInVzZXJfbmFtZSI6InRlcnJ5MDAwMy1hdXRvdGVzdCIsImJ1ZmZlcl90aW1lIjo4NjQwMCwiZXhwIjoxNjUxNDc5MDM4LCJpc3MiOiJhcnNQdWJsaWMiLCJuYmYiOjE2NTA4NzMyMzh9.fTOcWTbTRqnYBMhNtp00-rewnnfPJ9UkKXfzmMUB5n4,并设置为Data类实例化对象的属性和值。
2022-04-25 16:10:38,671 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:10:38,671 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:10:38,671 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:10:38,671 ARS INFO handle_replace.py [48行]: 没有需要替换的数据
2022-04-25 16:15:55,408 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:15:55,408 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:15:55,408 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:15:55,409 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:15:55,409 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:15:55,409 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:15:55,409 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:15:55,411 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:15:55,411 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:15:55,559 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:15:55,559 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '252673', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.588248ms'}
2022-04-25 16:15:55,560 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：252673
2022-04-25 16:15:55,561 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：252673
2022-04-25 16:15:55,561 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"252673","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:15:55,561 ARS INFO test_003_machineroom.py [38行]: {'sms_code': '252673', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 16:15:55,562 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:15:55,562 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:15:55,562 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:15:55,566 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:15:55,566 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '252673', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 16:15:55,668 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:15:55,668 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ3OTM1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODczNTU1fQ.oHScxLm_brITFqjXcGVHBhHn7Ep10AzIyFEjMhv3P_o'}, 'time': '14.756274ms'}
2022-04-25 16:15:55,668 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:15:55,670 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ3OTM1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODczNTU1fQ.oHScxLm_brITFqjXcGVHBhHn7Ep10AzIyFEjMhv3P_o']
2022-04-25 16:15:55,670 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ3OTM1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODczNTU1fQ.oHScxLm_brITFqjXcGVHBhHn7Ep10AzIyFEjMhv3P_o,并设置为Data类实例化对象的属性和值。
2022-04-25 16:15:55,674 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:15:55,674 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:15:55,674 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:15:55,674 ARS INFO handle_replace.py [48行]: 没有需要替换的数据
2022-04-25 16:20:26,569 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:20:26,569 ARS INFO handle_replace.py [25行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:20:26,569 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:20:26,571 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:20:26,571 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:20:26,571 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:20:26,571 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:20:26,572 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:20:26,572 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:20:26,665 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:20:26,667 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '216008', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.56051ms'}
2022-04-25 16:20:26,667 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：216008
2022-04-25 16:20:26,667 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：216008
2022-04-25 16:20:26,667 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"216008","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:20:26,667 ARS INFO test_003_machineroom.py [37行]: {"sms_code":"216008","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 16:20:26,667 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:20:26,667 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:20:26,667 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:20:26,667 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:20:26,667 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '216008', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 16:20:26,773 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:20:26,773 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ3OTYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODczODI2fQ.ZUkPTzetF4XQsDnkxc1FLr6NrcdOJ3Szts1vtcIF9J8'}, 'time': '13.426363ms'}
2022-04-25 16:20:26,774 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:20:26,775 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ3OTYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODczODI2fQ.ZUkPTzetF4XQsDnkxc1FLr6NrcdOJ3Szts1vtcIF9J8']
2022-04-25 16:20:26,775 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ3OTYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODczODI2fQ.ZUkPTzetF4XQsDnkxc1FLr6NrcdOJ3Szts1vtcIF9J8,并设置为Data类实例化对象的属性和值。
2022-04-25 16:20:26,782 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:20:26,783 ARS INFO handle_replace.py [25行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:20:26,783 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：[]
2022-04-25 16:20:26,783 ARS INFO handle_replace.py [48行]: 没有需要替换的数据
2022-04-25 16:23:49,812 ARS INFO handle_replace.py [25行]: {'token': '#phone#', 'machine_name': '#sms_code#', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 16:23:49,812 ARS INFO handle_replace.py [28行]: 查找到需要替换的标记符为：['phone', 'sms_code']
2022-04-25 16:23:49,812 ARS INFO handle_replace.py [34行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:23:49,812 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:23:49,812 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:23:49,812 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:23:49,814 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:23:49,814 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:23:49,945 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:23:49,945 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '186650', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.976733ms'}
2022-04-25 16:23:49,947 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：186650
2022-04-25 16:23:49,947 ARS INFO handle_replace.py [36行]: 把需要替换的#sms_code#替换成：186650
2022-04-25 16:23:49,947 ARS INFO handle_replace.py [45行]: 替换之后的测试用例数据为：{'token': '18276762767', 'machine_name': '186650', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 16:29:33,617 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:29:33,618 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:29:33,618 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:29:33,618 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:29:33,618 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:29:33,618 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:29:33,619 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:29:33,619 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:29:33,619 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:29:33,681 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:29:33,681 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '978124', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.783558ms'}
2022-04-25 16:29:33,683 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：978124
2022-04-25 16:29:33,683 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：978124
2022-04-25 16:29:33,683 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"978124","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:29:33,683 ARS INFO test_003_machineroom.py [37行]: {"sms_code":"978124","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 16:29:33,683 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:29:33,683 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:29:33,683 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:29:33,684 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 16:29:33,684 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '978124', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 16:29:33,759 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:29:33,759 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MDE3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc0MzczfQ.tkNx1dscnBWjJ9kyCqXA0ixkI0hdqGhw7VXVjaCmmns'}, 'time': '13.476911ms'}
2022-04-25 16:29:33,759 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 16:29:33,759 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MDE3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc0MzczfQ.tkNx1dscnBWjJ9kyCqXA0ixkI0hdqGhw7VXVjaCmmns']
2022-04-25 16:29:33,760 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MDE3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc0MzczfQ.tkNx1dscnBWjJ9kyCqXA0ixkI0hdqGhw7VXVjaCmmns,并设置为Data类实例化对象的属性和值。
2022-04-25 16:29:33,763 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:29:33,763 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:29:33,763 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 16:29:33,764 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 16:36:02,177 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:36:02,177 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:36:02,179 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:36:02,179 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:36:02,179 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:36:02,180 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:36:02,180 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:36:02,180 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:36:02,180 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:36:02,320 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:36:02,320 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '896635', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.176856ms'}
2022-04-25 16:36:02,321 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：896635
2022-04-25 16:36:02,321 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：896635
2022-04-25 16:36:02,321 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"896635","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:36:02,321 ARS INFO test_003_machineroom.py [37行]: {"sms_code":"896635","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 16:36:02,321 ARS INFO test_003_machineroom.py [39行]: {'sms_code': '896635', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 16:36:02,328 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:36:02,328 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:36:02,328 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 16:36:02,328 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 16:55:29,798 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:55:29,799 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:55:29,799 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:55:29,799 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:55:29,799 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:55:29,799 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:55:29,799 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:55:29,800 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:55:29,800 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:55:29,928 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:55:29,928 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '031044', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.706118ms'}
2022-04-25 16:55:29,929 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：031044
2022-04-25 16:55:29,929 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：031044
2022-04-25 16:55:29,929 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"031044","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:55:29,929 ARS INFO test_003_machineroom.py [37行]: {"sms_code":"031044","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 16:55:29,929 ARS INFO test_003_machineroom.py [39行]: {'sms_code': '031044', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 16:55:29,939 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:55:29,939 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:55:29,939 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 16:55:29,939 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 16:56:11,667 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:56:11,667 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:56:11,667 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 16:56:11,670 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 16:56:11,670 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 16:56:11,670 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 16:56:11,670 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 16:56:11,671 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 16:56:11,671 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 16:56:11,739 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 16:56:11,739 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '031044', 'send_rest_sec': 19, 'expire_sec': 858}, 'time': '1.529225ms'}
2022-04-25 16:56:11,739 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：031044
2022-04-25 16:56:11,739 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：031044
2022-04-25 16:56:11,740 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"031044","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 16:56:11,740 ARS INFO test_003_machineroom.py [37行]: {"sms_code":"031044","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 16:56:11,743 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:56:11,743 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 16:56:11,744 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 16:56:11,744 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 16:58:29,792 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:58:29,792 ARS INFO test_003_machineroom.py [37行]: {"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 16:58:29,795 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 16:58:29,795 ARS INFO test_003_machineroom.py [37行]: {"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}
2022-04-25 17:01:45,414 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:01:45,414 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:01:45,414 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:01:45,414 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:01:45,414 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:01:45,414 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:01:45,414 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:01:45,414 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:01:45,414 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:01:45,480 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:01:45,480 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '141441', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.766899ms'}
2022-04-25 17:01:45,480 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：141441
2022-04-25 17:01:45,480 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：141441
2022-04-25 17:01:45,481 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"141441","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:01:45,481 ARS INFO test_003_machineroom.py [38行]: {"sms_code":"141441","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 17:01:45,484 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:01:45,484 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:01:45,484 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:01:45,484 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 17:04:01,799 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:04:01,800 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:04:01,800 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:04:01,800 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:04:01,800 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:04:01,801 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:04:01,801 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:04:01,801 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:04:01,801 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:04:01,862 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:04:01,862 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '143832', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.645996ms'}
2022-04-25 17:04:01,863 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：143832
2022-04-25 17:04:01,863 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：143832
2022-04-25 17:04:01,863 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"143832","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:04:01,865 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:04:01,865 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:04:01,865 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:04:01,865 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 17:05:32,596 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:05:32,598 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:05:32,598 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:05:32,598 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:05:32,598 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:05:32,598 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:05:32,598 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:05:32,598 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:05:32,598 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:05:32,707 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:05:32,707 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '227992', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.579ms'}
2022-04-25 17:05:32,708 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：227992
2022-04-25 17:05:32,708 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：227992
2022-04-25 17:05:32,710 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"227992","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:05:32,717 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:05:32,717 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:05:32,717 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:05:32,717 ARS INFO handle_replace.py [49行]: 没有需要替换的数据
2022-04-25 17:07:08,913 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:07:08,913 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:07:08,914 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:07:08,914 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:07:08,914 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:07:08,914 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:07:08,914 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:07:08,915 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:07:08,915 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:07:09,019 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:07:09,019 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '846926', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.588453ms'}
2022-04-25 17:07:09,020 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：846926
2022-04-25 17:07:09,020 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：846926
2022-04-25 17:07:09,020 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"846926","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:07:09,024 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:07:09,025 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:07:09,025 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:07:09,025 ARS INFO handle_replace.py [49行]: 没有需要替换的数据,无需进行处理：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:08:22,369 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:08:22,369 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:08:22,371 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:08:22,371 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:08:22,371 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:08:22,371 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:08:22,371 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:08:22,371 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:08:22,371 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:08:22,439 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:08:22,439 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '933261', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.740429ms'}
2022-04-25 17:08:22,440 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：933261
2022-04-25 17:08:22,440 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：933261
2022-04-25 17:08:22,440 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"933261","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:08:22,447 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:08:22,447 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:08:22,447 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:08:22,447 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:08:45,486 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:08:45,486 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:08:45,486 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:08:45,487 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:08:45,487 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:08:45,487 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:08:45,487 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:08:45,488 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:08:45,488 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:08:45,628 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:08:45,630 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': True, 'sms_code': '933261', 'send_rest_sec': 37, 'expire_sec': 877}, 'time': '1.467186ms'}
2022-04-25 17:08:45,632 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：933261
2022-04-25 17:08:45,633 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：933261
2022-04-25 17:08:45,634 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"933261","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:08:45,634 ARS INFO test_003_machineroom.py [38行]: {"sms_code":"933261","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}
2022-04-25 17:08:45,651 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:08:45,651 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:08:45,652 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:08:45,652 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:08:45,652 ARS INFO test_003_machineroom.py [38行]: {"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}
2022-04-25 17:11:45,294 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:11:45,363 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:11:45,364 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:11:45,364 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:11:45,364 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:11:45,364 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:11:45,365 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:11:45,365 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:11:45,365 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:11:45,510 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:11:45,511 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '518915', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.618319ms'}
2022-04-25 17:11:45,512 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：518915
2022-04-25 17:11:45,513 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：518915
2022-04-25 17:11:45,513 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"518915","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:11:45,513 ARS INFO test_003_machineroom.py [39行]: {'sms_code': '518915', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:11:45,513 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:11:45,513 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:11:45,513 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:11:45,515 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:11:45,515 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '518915', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:11:45,583 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:11:45,584 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MjcwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc2OTA1fQ.rKl58hsK7eEH0majdwEZwTHnEUHDA2GKPS3L3hF8bfw'}, 'time': '13.587627ms'}
2022-04-25 17:11:45,584 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:11:45,584 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MjcwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc2OTA1fQ.rKl58hsK7eEH0majdwEZwTHnEUHDA2GKPS3L3hF8bfw']
2022-04-25 17:11:45,584 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MjcwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc2OTA1fQ.rKl58hsK7eEH0majdwEZwTHnEUHDA2GKPS3L3hF8bfw,并设置为Data类实例化对象的属性和值。
2022-04-25 17:11:45,591 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:11:45,592 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:11:45,592 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:11:45,592 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:11:45,592 ARS INFO test_003_machineroom.py [39行]: {'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:11:45,592 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:11:45,592 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:11:45,592 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:11:45,592 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:11:45,592 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:11:45,672 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:11:45,673 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.699µs'}
2022-04-25 17:12:30,892 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:12:30,892 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:12:30,892 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:12:30,894 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:12:30,894 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:12:30,894 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:12:30,894 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:12:30,894 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:12:30,894 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:12:30,959 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:12:30,959 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '099987', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '3.047892ms'}
2022-04-25 17:12:30,961 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：099987
2022-04-25 17:12:30,961 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：099987
2022-04-25 17:12:30,963 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"099987","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:12:30,963 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:12:30,963 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:12:30,963 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:12:30,966 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:12:30,966 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '099987', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:12:31,044 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:12:31,046 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Mjc1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc2OTUxfQ.s7XsyYvOq56T-b0BOiKvn2FeF_Qhb1SCnMtSZOVp5Ag'}, 'time': '13.277133ms'}
2022-04-25 17:12:31,046 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:12:31,046 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Mjc1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc2OTUxfQ.s7XsyYvOq56T-b0BOiKvn2FeF_Qhb1SCnMtSZOVp5Ag']
2022-04-25 17:12:31,047 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Mjc1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc2OTUxfQ.s7XsyYvOq56T-b0BOiKvn2FeF_Qhb1SCnMtSZOVp5Ag,并设置为Data类实例化对象的属性和值。
2022-04-25 17:12:31,055 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:12:31,055 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:12:31,056 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:12:31,056 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:12:31,056 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:12:31,056 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:12:31,056 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:12:31,059 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:12:31,059 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:12:31,131 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:12:31,131 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.824µs'}
2022-04-25 17:13:22,704 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:13:22,704 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:13:22,704 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:13:22,705 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:13:22,705 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:13:22,705 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:13:22,705 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:13:22,705 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:13:22,707 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:13:22,776 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:13:22,776 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '338246', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.582463ms'}
2022-04-25 17:13:22,777 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：338246
2022-04-25 17:13:22,777 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：338246
2022-04-25 17:13:22,777 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"338246","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:13:22,777 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '338246', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:13:22,777 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:13:22,777 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:13:22,777 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:13:22,779 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:13:22,779 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '338246', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:13:22,856 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:13:22,856 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MjgwMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3MDAyfQ.Wzgu4ackkeUzCSJ4ZgUzLUnI-yrvxFos6JUJCD95AJQ'}, 'time': '14.857594ms'}
2022-04-25 17:13:22,856 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:13:22,856 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MjgwMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3MDAyfQ.Wzgu4ackkeUzCSJ4ZgUzLUnI-yrvxFos6JUJCD95AJQ']
2022-04-25 17:13:22,856 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MjgwMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3MDAyfQ.Wzgu4ackkeUzCSJ4ZgUzLUnI-yrvxFos6JUJCD95AJQ,并设置为Data类实例化对象的属性和值。
2022-04-25 17:13:22,862 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:13:22,862 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:13:22,862 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:13:22,862 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:13:22,862 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:13:22,863 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:13:22,863 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:13:22,863 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:13:22,881 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:13:22,881 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:13:22,940 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:13:22,940 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.825µs'}
2022-04-25 17:17:19,556 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:17:19,558 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:17:19,558 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:17:19,558 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:17:19,559 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:17:19,559 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:17:19,559 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:17:19,559 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:17:19,559 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:17:19,687 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:17:19,687 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '245609', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.588857ms'}
2022-04-25 17:17:19,687 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：245609
2022-04-25 17:17:19,687 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：245609
2022-04-25 17:17:19,687 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"245609","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:17:19,687 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '245609', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:17:19,687 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:17:19,687 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:17:19,687 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:17:19,688 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:17:19,688 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:17:19,688 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '245609', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:17:19,801 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:17:19,801 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzAzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3MjM5fQ.8_dehnkHNe68_pVFUfV9jCKtXXgKuPUm1fLd5y4SrcA'}, 'time': '13.588981ms'}
2022-04-25 17:17:19,801 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:17:19,802 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzAzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3MjM5fQ.8_dehnkHNe68_pVFUfV9jCKtXXgKuPUm1fLd5y4SrcA']
2022-04-25 17:17:19,802 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzAzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3MjM5fQ.8_dehnkHNe68_pVFUfV9jCKtXXgKuPUm1fLd5y4SrcA,并设置为Data类实例化对象的属性和值。
2022-04-25 17:17:19,812 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:17:19,812 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:17:19,812 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:17:19,812 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:17:19,812 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:17:19,812 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:17:19,812 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:17:19,814 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:17:19,814 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:17:19,815 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:17:19,815 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:17:19,884 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:17:19,884 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.24µs'}
2022-04-25 17:20:22,062 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:20:22,062 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:20:22,063 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:20:22,063 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:20:22,063 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:20:22,063 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:20:22,063 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:20:22,064 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:20:22,064 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:20:22,126 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:20:22,126 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '962906', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.637214ms'}
2022-04-25 17:20:22,127 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：962906
2022-04-25 17:20:22,127 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：962906
2022-04-25 17:20:22,127 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"962906","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:20:22,127 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '962906', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:20:22,127 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:20:22,127 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:20:22,127 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:20:22,128 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:20:22,128 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:20:22,128 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '962906', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:20:22,230 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:20:22,230 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzIyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDIyfQ.tdPJ5D9DlBGaV9Vv1moOCePZrD_YWa3woqCzKyaMAt8'}, 'time': '14.519463ms'}
2022-04-25 17:20:22,232 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:20:22,232 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzIyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDIyfQ.tdPJ5D9DlBGaV9Vv1moOCePZrD_YWa3woqCzKyaMAt8']
2022-04-25 17:20:22,232 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzIyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDIyfQ.tdPJ5D9DlBGaV9Vv1moOCePZrD_YWa3woqCzKyaMAt8,并设置为Data类实例化对象的属性和值。
2022-04-25 17:20:22,232 ARS INFO test_003_machineroom.py [48行]: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzIyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDIyfQ.tdPJ5D9DlBGaV9Vv1moOCePZrD_YWa3woqCzKyaMAt8
2022-04-25 17:20:22,240 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:20:22,240 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:20:22,240 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:20:22,240 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:20:22,240 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:20:22,240 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:20:22,240 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:20:22,240 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:20:22,240 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:20:22,241 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:20:22,241 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:20:22,299 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:20:22,299 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.647µs'}
2022-04-25 17:20:47,657 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:20:47,657 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:20:47,657 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:20:47,659 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:20:47,659 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:20:47,659 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:20:47,659 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:20:47,659 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:20:47,659 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:20:47,732 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:20:47,732 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '791753', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.581918ms'}
2022-04-25 17:20:47,733 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：791753
2022-04-25 17:20:47,733 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：791753
2022-04-25 17:20:47,733 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"791753","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:20:47,733 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '791753', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:20:47,733 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:20:47,733 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:20:47,733 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:20:47,733 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:20:47,734 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:20:47,734 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '791753', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:20:47,870 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:20:47,871 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzI0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDQ3fQ.I-DORdWow32H7Kz_fWp1BnYr-ywOi96YtbkTpg41dso'}, 'time': '14.795795ms'}
2022-04-25 17:20:47,871 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:20:47,871 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzI0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDQ3fQ.I-DORdWow32H7Kz_fWp1BnYr-ywOi96YtbkTpg41dso']
2022-04-25 17:20:47,872 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzI0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDQ3fQ.I-DORdWow32H7Kz_fWp1BnYr-ywOi96YtbkTpg41dso,并设置为Data类实例化对象的属性和值。
2022-04-25 17:20:47,872 ARS INFO test_003_machineroom.py [48行]: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzI0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NDQ3fQ.I-DORdWow32H7Kz_fWp1BnYr-ywOi96YtbkTpg41dso
2022-04-25 17:20:47,881 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:20:47,881 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:20:47,881 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:20:47,883 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:20:47,883 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:20:47,883 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:20:47,883 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:20:47,883 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:20:47,883 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:20:47,884 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:20:47,884 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:20:47,956 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:20:47,957 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.668µs'}
2022-04-25 17:23:11,063 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:23:11,063 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:23:11,063 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:23:11,064 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:23:11,064 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:23:11,064 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:23:11,064 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:23:11,065 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:23:11,065 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:23:11,155 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:23:11,155 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '212621', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.451004ms'}
2022-04-25 17:23:11,155 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：212621
2022-04-25 17:23:11,156 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：212621
2022-04-25 17:23:11,156 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"212621","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:23:11,156 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '212621', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:23:11,156 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:23:11,156 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:23:11,156 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:23:11,156 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:23:11,158 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:23:11,158 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '212621', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:23:11,220 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:23:11,220 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzM5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NTkxfQ._djklMKVvSwchtxgr4IzNnzEiwy0VLTbGYXZoDHbIvo'}, 'time': '14.289081ms'}
2022-04-25 17:23:11,220 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:23:11,220 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzM5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NTkxfQ._djklMKVvSwchtxgr4IzNnzEiwy0VLTbGYXZoDHbIvo']
2022-04-25 17:23:11,220 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzM5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NTkxfQ._djklMKVvSwchtxgr4IzNnzEiwy0VLTbGYXZoDHbIvo,并设置为Data类实例化对象的属性和值。
2022-04-25 17:23:11,220 ARS INFO test_003_machineroom.py [48行]: True
2022-04-25 17:23:11,224 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:23:11,224 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:23:11,225 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:23:11,225 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:23:11,225 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:23:11,225 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:23:11,225 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:23:11,225 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:23:11,225 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:23:11,226 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:23:11,226 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:23:11,289 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:23:11,289 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.586µs'}
2022-04-25 17:23:43,216 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:23:43,217 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:23:43,217 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:23:43,217 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:23:43,217 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:23:43,217 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:23:43,217 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:23:43,217 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:23:43,217 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:23:43,351 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:23:43,351 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '819601', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.611097ms'}
2022-04-25 17:23:43,353 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：819601
2022-04-25 17:23:43,353 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：819601
2022-04-25 17:23:43,353 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"819601","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:23:43,355 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '819601', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:23:43,355 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:23:43,355 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:23:43,355 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:23:43,355 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:23:43,356 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:23:43,356 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '819601', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:23:43,463 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:23:43,463 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzQyMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NjIzfQ.SxrecHo__F5WvqF9wAUco7FNC7-1m3U7p3fVW2uxcgE'}, 'time': '14.570679ms'}
2022-04-25 17:23:43,463 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:23:43,464 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzQyMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NjIzfQ.SxrecHo__F5WvqF9wAUco7FNC7-1m3U7p3fVW2uxcgE']
2022-04-25 17:23:43,464 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzQyMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NjIzfQ.SxrecHo__F5WvqF9wAUco7FNC7-1m3U7p3fVW2uxcgE,并设置为Data类实例化对象的属性和值。
2022-04-25 17:23:43,464 ARS INFO test_003_machineroom.py [48行]: True
2022-04-25 17:23:43,473 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:23:43,473 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:23:43,473 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:23:43,473 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:23:43,473 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:23:43,473 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:23:43,473 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:23:43,473 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:23:43,475 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:23:43,476 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:23:43,476 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:23:43,551 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:23:43,551 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.019µs'}
2022-04-25 17:24:56,284 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:24:56,284 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:24:56,284 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:24:56,286 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:24:56,286 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:24:56,286 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:24:56,286 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:24:56,287 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:24:56,287 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:24:56,356 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:24:56,356 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '651496', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.699686ms'}
2022-04-25 17:24:56,356 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：651496
2022-04-25 17:24:56,358 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：651496
2022-04-25 17:24:56,358 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"651496","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:24:56,358 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '651496', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:24:56,358 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:24:56,358 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:24:56,358 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:24:56,358 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:24:56,358 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:24:56,358 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '651496', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:24:56,419 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:24:56,419 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzQ5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3Njk2fQ.q32KnXndO4Zp4J4AMA3BQexoEJoPh38DrfQaa1WMKx0'}, 'time': '14.13491ms'}
2022-04-25 17:24:56,419 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:24:56,419 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzQ5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3Njk2fQ.q32KnXndO4Zp4J4AMA3BQexoEJoPh38DrfQaa1WMKx0']
2022-04-25 17:24:56,419 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzQ5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3Njk2fQ.q32KnXndO4Zp4J4AMA3BQexoEJoPh38DrfQaa1WMKx0,并设置为Data类实例化对象的属性和值。
2022-04-25 17:24:56,419 ARS INFO test_003_machineroom.py [48行]: True
2022-04-25 17:24:56,425 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:24:56,425 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:24:56,425 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:24:56,425 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:24:56,427 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:24:56,427 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:24:56,427 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:24:56,427 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:24:56,427 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:24:56,427 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:24:56,427 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:24:56,473 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:24:56,473 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.195µs'}
2022-04-25 17:26:00,881 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:26:00,881 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:26:00,883 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:26:00,883 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:26:00,883 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:26:00,884 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:26:00,884 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:26:00,884 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:26:00,884 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:26:01,036 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:26:01,036 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '722399', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.7659ms'}
2022-04-25 17:26:01,039 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：722399
2022-04-25 17:26:01,039 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：722399
2022-04-25 17:26:01,040 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"722399","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:26:01,040 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '722399', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:26:01,041 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:26:01,041 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:26:01,041 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:26:01,041 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:26:01,042 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:26:01,043 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '722399', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:26:01,156 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:26:01,156 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzU2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NzYxfQ.2hsvi--abH2xwCjf4qv5F1xOavkB_BSDXeEzzgjDxdI'}, 'time': '13.651551ms'}
2022-04-25 17:26:01,158 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:26:01,158 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzU2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NzYxfQ.2hsvi--abH2xwCjf4qv5F1xOavkB_BSDXeEzzgjDxdI']
2022-04-25 17:26:01,158 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzU2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3NzYxfQ.2hsvi--abH2xwCjf4qv5F1xOavkB_BSDXeEzzgjDxdI,并设置为Data类实例化对象的属性和值。
2022-04-25 17:26:01,158 ARS INFO test_003_machineroom.py [48行]: False
2022-04-25 17:26:01,166 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:26:01,167 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:26:01,167 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:26:01,167 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:26:01,167 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:26:01,167 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:26:01,167 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:26:01,167 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:26:01,167 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:26:01,167 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:26:01,168 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:26:01,247 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:26:01,248 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.672µs'}
2022-04-25 17:27:16,705 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:27:16,705 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:27:16,705 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:27:16,707 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:27:16,707 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:27:16,707 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:27:16,707 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:27:16,707 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:27:16,707 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:27:16,830 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:27:16,831 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '100490', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.672845ms'}
2022-04-25 17:27:16,832 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：100490
2022-04-25 17:27:16,832 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：100490
2022-04-25 17:27:16,833 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"100490","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:27:16,833 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '100490', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:27:16,833 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:27:16,835 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:27:16,835 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:27:16,835 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:27:16,836 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:27:16,836 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '100490', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:27:16,951 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:27:16,951 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzYzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3ODM3fQ.DBZVZdKT6ZSh54XPT8JtLhAbpbuBNR-Vfo9u8yOh3Y0'}, 'time': '13.473167ms'}
2022-04-25 17:27:16,952 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:27:16,952 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzYzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3ODM3fQ.DBZVZdKT6ZSh54XPT8JtLhAbpbuBNR-Vfo9u8yOh3Y0']
2022-04-25 17:27:16,952 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4MzYzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc3ODM3fQ.DBZVZdKT6ZSh54XPT8JtLhAbpbuBNR-Vfo9u8yOh3Y0,并设置为Data类实例化对象的属性和值。
2022-04-25 17:27:16,952 ARS INFO test_003_machineroom.py [48行]: False
2022-04-25 17:27:16,960 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:27:16,960 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:27:16,961 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:27:16,961 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:27:16,961 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:27:16,961 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:27:16,961 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:27:16,961 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:27:16,961 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:27:16,963 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:27:16,963 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:27:17,026 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:27:17,026 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.266µs'}
2022-04-25 17:47:32,135 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:47:32,135 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:47:32,136 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:47:32,136 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:47:32,137 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:47:32,137 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:47:32,137 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:47:32,137 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:47:32,137 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:47:32,256 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:47:32,256 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '119818', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.92368ms'}
2022-04-25 17:47:32,257 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：119818
2022-04-25 17:47:32,257 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：119818
2022-04-25 17:47:32,259 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"119818","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:47:32,259 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '119818', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:47:32,259 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:47:32,275 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:47:32,275 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:47:32,275 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:47:32,276 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:47:32,276 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '119818', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:47:32,391 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:47:32,391 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NDg1MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MDUyfQ.r4QNH_aRrqi5tLl5X8wqXMt3IZCi67Ndq5Nvj13__tI'}, 'time': '14.943572ms'}
2022-04-25 17:47:32,392 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:47:32,393 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NDg1MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MDUyfQ.r4QNH_aRrqi5tLl5X8wqXMt3IZCi67Ndq5Nvj13__tI']
2022-04-25 17:47:32,393 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NDg1MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MDUyfQ.r4QNH_aRrqi5tLl5X8wqXMt3IZCi67Ndq5Nvj13__tI,并设置为Data类实例化对象的属性和值。
2022-04-25 17:47:32,394 ARS INFO test_003_machineroom.py [48行]: False
2022-04-25 17:47:32,409 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:47:32,409 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:47:32,411 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:47:32,411 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:47:32,411 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:47:32,411 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:47:32,412 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:47:32,412 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:47:32,414 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:47:32,415 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:47:32,416 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:47:32,532 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:47:32,532 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.643µs'}
2022-04-25 17:48:24,733 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:48:24,733 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:48:24,734 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:48:24,734 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:48:24,734 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:48:24,734 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:48:24,734 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:48:24,735 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:48:24,735 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:48:24,871 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:48:24,871 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '334238', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.944652ms'}
2022-04-25 17:48:24,872 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：334238
2022-04-25 17:48:24,872 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：334238
2022-04-25 17:48:24,872 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"334238","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:48:24,872 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '334238', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:48:24,872 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:48:24,872 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:48:24,872 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:48:24,872 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:48:24,873 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:48:24,873 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '334238', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:48:24,969 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:48:24,969 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NDkwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MTA1fQ.WXczW7xp4ud6frrv4x7Yl1_6Imxgxj5dvg3vA4CmEGo'}, 'time': '13.62279ms'}
2022-04-25 17:48:24,970 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:48:24,970 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NDkwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MTA1fQ.WXczW7xp4ud6frrv4x7Yl1_6Imxgxj5dvg3vA4CmEGo']
2022-04-25 17:48:24,970 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NDkwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MTA1fQ.WXczW7xp4ud6frrv4x7Yl1_6Imxgxj5dvg3vA4CmEGo,并设置为Data类实例化对象的属性和值。
2022-04-25 17:48:24,970 ARS INFO test_003_machineroom.py [48行]: False
2022-04-25 17:48:24,975 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:48:24,975 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:48:24,975 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:48:24,975 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:48:24,975 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:48:24,976 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:48:24,976 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:48:24,976 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:48:24,976 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:48:24,976 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:48:24,976 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:48:25,024 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:48:25,024 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.499µs'}
2022-04-25 17:51:49,443 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:51:49,443 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:51:49,443 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:51:49,444 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:51:49,444 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:51:49,444 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:51:49,444 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:51:49,444 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:51:49,444 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:51:49,537 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:51:49,537 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '608013', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.08885ms'}
2022-04-25 17:51:49,539 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：608013
2022-04-25 17:51:49,539 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：608013
2022-04-25 17:51:49,539 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"608013","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:51:49,539 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'sms_code': '608013', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:51:49,539 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:51:49,539 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:51:49,539 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:51:49,539 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:51:49,539 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:51:49,539 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '608013', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:51:49,659 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:51:49,660 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTEwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MzA5fQ.7RfBl-ikmhPGMjB3yNfQaW_a1vNiI4hnyEkRTSl4kcg'}, 'time': '14.344054ms'}
2022-04-25 17:51:49,660 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:51:49,661 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTEwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MzA5fQ.7RfBl-ikmhPGMjB3yNfQaW_a1vNiI4hnyEkRTSl4kcg']
2022-04-25 17:51:49,661 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTEwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MzA5fQ.7RfBl-ikmhPGMjB3yNfQaW_a1vNiI4hnyEkRTSl4kcg,并设置为Data类实例化对象的属性和值。
2022-04-25 17:51:49,661 ARS INFO test_003_machineroom.py [48行]: False
2022-04-25 17:51:49,670 ARS INFO test_003_machineroom.py [33行]: =========== 登陆接口测试  ===============
2022-04-25 17:51:49,671 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:51:49,671 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:51:49,671 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:51:49,671 ARS INFO test_003_machineroom.py [39行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:51:49,671 ARS INFO test_003_machineroom.py [44行]: 222222222222222222
2022-04-25 17:51:49,671 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:51:49,672 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:51:49,672 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:51:49,673 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:51:49,673 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:51:49,745 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:51:49,745 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.145µs'}
2022-04-25 17:52:56,307 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:52:56,307 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:52:56,307 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:52:56,308 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:52:56,308 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:52:56,308 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:52:56,308 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:52:56,309 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:52:56,309 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:52:56,388 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:52:56,388 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '583660', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.567278ms'}
2022-04-25 17:52:56,388 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：583660
2022-04-25 17:52:56,390 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：583660
2022-04-25 17:52:56,390 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"583660","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:52:56,390 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '583660', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:52:56,390 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:52:56,390 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:52:56,390 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:52:56,390 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:52:56,391 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:52:56,391 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '583660', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:52:56,483 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:52:56,483 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTE3NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5Mzc2fQ.QhZBtJPxGPNVFBNH3wUQC7cImgbtnv0oN8B-8hOrbb8'}, 'time': '14.246675ms'}
2022-04-25 17:52:56,483 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:52:56,483 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTE3NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5Mzc2fQ.QhZBtJPxGPNVFBNH3wUQC7cImgbtnv0oN8B-8hOrbb8']
2022-04-25 17:52:56,484 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTE3NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5Mzc2fQ.QhZBtJPxGPNVFBNH3wUQC7cImgbtnv0oN8B-8hOrbb8,并设置为Data类实例化对象的属性和值。
2022-04-25 17:52:56,484 ARS INFO test_003_machineroom.py [47行]: False
2022-04-25 17:52:56,489 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:52:56,489 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:52:56,491 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:52:56,491 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:52:56,491 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:52:56,491 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:52:56,491 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:52:56,491 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:52:56,491 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:52:56,491 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:52:56,492 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:52:56,540 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:52:56,540 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.985µs'}
2022-04-25 17:53:13,098 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:53:13,098 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:53:13,099 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:53:13,099 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:53:13,099 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:53:13,099 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:53:13,099 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:53:13,100 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:53:13,100 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:53:13,212 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:53:13,214 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '757140', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.662355ms'}
2022-04-25 17:53:13,215 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：757140
2022-04-25 17:53:13,215 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：757140
2022-04-25 17:53:13,215 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"757140","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:53:13,215 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '757140', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:53:13,215 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:53:13,215 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:53:13,216 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:53:13,216 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:53:13,216 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:53:13,217 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '757140', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:53:13,312 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:53:13,312 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTE5MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MzkzfQ.LnAc-wHfkVzCjFgaVU57e0Ut1HdOFS78PAD9TS-LZ3E'}, 'time': '13.630438ms'}
2022-04-25 17:53:13,312 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:53:13,313 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTE5MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MzkzfQ.LnAc-wHfkVzCjFgaVU57e0Ut1HdOFS78PAD9TS-LZ3E']
2022-04-25 17:53:13,313 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTE5MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5MzkzfQ.LnAc-wHfkVzCjFgaVU57e0Ut1HdOFS78PAD9TS-LZ3E,并设置为Data类实例化对象的属性和值。
2022-04-25 17:53:13,313 ARS INFO test_003_machineroom.py [47行]: False
2022-04-25 17:53:13,320 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:53:13,320 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:53:13,321 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:53:13,321 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:53:13,321 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:53:13,321 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:53:13,321 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:53:13,321 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:53:13,321 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:53:13,322 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:53:13,322 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:53:13,396 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:53:13,396 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.56µs'}
2022-04-25 17:55:21,044 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:55:21,046 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:55:21,046 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:55:21,047 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:55:21,047 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:55:21,047 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:55:21,047 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:55:21,047 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:55:21,047 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:55:21,169 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:55:21,169 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '844246', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.528145ms'}
2022-04-25 17:55:21,171 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：844246
2022-04-25 17:55:21,171 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：844246
2022-04-25 17:55:21,171 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"844246","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:55:21,171 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '844246', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:55:21,171 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:55:21,171 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:55:21,171 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:55:21,171 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:55:21,172 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:55:21,172 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '844246', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:55:21,244 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:55:21,244 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTMyMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTIxfQ.sJilFnOzNJlt2JeGZ7smfdx-2WCDR2ETMMFRR2oNJRM'}, 'time': '14.211089ms'}
2022-04-25 17:55:21,244 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:55:21,244 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTMyMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTIxfQ.sJilFnOzNJlt2JeGZ7smfdx-2WCDR2ETMMFRR2oNJRM']
2022-04-25 17:55:21,244 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTMyMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTIxfQ.sJilFnOzNJlt2JeGZ7smfdx-2WCDR2ETMMFRR2oNJRM,并设置为Data类实例化对象的属性和值。
2022-04-25 17:55:21,244 ARS INFO test_003_machineroom.py [47行]: False
2022-04-25 17:55:21,249 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:55:21,249 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:55:21,249 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:55:21,249 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:55:21,249 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:55:21,249 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:55:21,249 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:55:21,249 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:55:21,249 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:55:21,251 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:55:21,251 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:55:21,312 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:55:21,312 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.5µs'}
2022-04-25 17:55:47,604 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:55:47,604 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:55:47,604 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:55:47,605 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:55:47,605 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:55:47,605 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:55:47,605 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:55:47,606 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:55:47,606 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:55:47,659 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:55:47,659 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '781800', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.568218ms'}
2022-04-25 17:55:47,660 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：781800
2022-04-25 17:55:47,660 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：781800
2022-04-25 17:55:47,660 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"781800","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:55:47,660 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '781800', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:55:47,660 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:55:47,660 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:55:47,660 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:55:47,660 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:55:47,661 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:55:47,661 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '781800', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:55:47,720 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:55:47,720 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTQ3fQ.mplPKTtEYgDET0wRFrZkcp5EeNvyUU5aHTu5pB_JbCw'}, 'time': '13.236895ms'}
2022-04-25 17:55:47,720 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:55:47,720 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTQ3fQ.mplPKTtEYgDET0wRFrZkcp5EeNvyUU5aHTu5pB_JbCw']
2022-04-25 17:55:47,720 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTQ3fQ.mplPKTtEYgDET0wRFrZkcp5EeNvyUU5aHTu5pB_JbCw,并设置为Data类实例化对象的属性和值。
2022-04-25 17:55:47,720 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 17:55:47,724 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:55:47,724 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:55:47,740 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:55:47,740 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:55:47,740 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:55:47,740 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:55:47,740 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:55:47,740 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:55:47,740 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:55:47,742 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:55:47,742 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:55:47,799 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:55:47,799 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.81µs'}
2022-04-25 17:56:03,439 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:56:03,439 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:56:03,439 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 17:56:03,440 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 17:56:03,440 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:56:03,440 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:56:03,440 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:56:03,440 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 17:56:03,440 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 17:56:03,536 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:56:03,536 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '063534', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.550179ms'}
2022-04-25 17:56:03,536 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：063534
2022-04-25 17:56:03,537 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：063534
2022-04-25 17:56:03,537 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"063534","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 17:56:03,537 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '063534', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:56:03,537 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 17:56:03,537 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:56:03,537 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:56:03,537 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 17:56:03,539 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 17:56:03,539 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '063534', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 17:56:03,616 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:56:03,617 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTYzfQ.-uQKrGiWgJQYhl9IsunhZ1FKofrU4j5BtZ7OXdg-DMg'}, 'time': '14.233807ms'}
2022-04-25 17:56:03,617 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 17:56:03,617 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTYzfQ.-uQKrGiWgJQYhl9IsunhZ1FKofrU4j5BtZ7OXdg-DMg']
2022-04-25 17:56:03,618 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTYzfQ.-uQKrGiWgJQYhl9IsunhZ1FKofrU4j5BtZ7OXdg-DMg,并设置为Data类实例化对象的属性和值。
2022-04-25 17:56:03,618 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 17:56:03,631 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 17:56:03,631 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 17:56:03,631 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 17:56:03,631 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 17:56:03,631 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:56:03,631 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 17:56:03,631 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 17:56:03,631 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 17:56:03,631 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NTM2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODc5NTYzfQ.-uQKrGiWgJQYhl9IsunhZ1FKofrU4j5BtZ7OXdg-DMg'}
2022-04-25 17:56:03,633 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 17:56:03,633 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 17:56:03,697 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 17:56:03,697 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.49µs'}
2022-04-25 18:09:52,251 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:09:52,251 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:09:52,252 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:09:52,252 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:09:52,252 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:09:52,252 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:09:52,252 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:09:52,253 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:09:52,253 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:09:52,358 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:09:52,358 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '716094', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.759892ms'}
2022-04-25 18:09:52,359 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：716094
2022-04-25 18:09:52,359 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：716094
2022-04-25 18:09:52,359 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"716094","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:09:52,359 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '716094', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:09:52,359 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:09:52,359 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:09:52,359 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:09:52,359 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:09:52,360 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:09:52,360 ARS INFO handle_request.py [56行]: 请求数据为：{'sms_code': '716094', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:09:52,451 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:09:52,451 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NjE5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgwMzkyfQ.8_kJZ4nrEJCnOuCdIRLy8VvB5uuge2epcgUgP5rnOew'}, 'time': '14.171546ms'}
2022-04-25 18:09:52,451 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:09:52,451 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NjE5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgwMzkyfQ.8_kJZ4nrEJCnOuCdIRLy8VvB5uuge2epcgUgP5rnOew']
2022-04-25 18:09:52,451 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NjE5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgwMzkyfQ.8_kJZ4nrEJCnOuCdIRLy8VvB5uuge2epcgUgP5rnOew,并设置为Data类实例化对象的属性和值。
2022-04-25 18:09:52,452 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:09:52,457 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:09:52,457 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:09:52,457 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:09:52,457 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:09:52,457 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:09:52,457 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:09:52,457 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:09:52,457 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:09:52,457 ARS INFO handle_request.py [38行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NjE5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgwMzkyfQ.8_kJZ4nrEJCnOuCdIRLy8VvB5uuge2epcgUgP5rnOew'}
2022-04-25 18:09:52,457 ARS INFO handle_request.py [48行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:09:52,457 ARS INFO handle_request.py [56行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:09:52,503 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:09:52,503 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.584µs'}
2022-04-25 18:21:18,651 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:21:18,651 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:21:18,651 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:21:18,652 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:21:18,652 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:21:18,652 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:21:19,230 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:21:19,230 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:21:19,230 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:21:19,230 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:21:19,232 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:21:19,232 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:21:19,232 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:21:19,232 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:22:28,279 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:22:28,279 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:22:28,279 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:22:28,279 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:22:28,279 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:22:28,279 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:22:28,279 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:22:28,280 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:22:28,280 ARS INFO handle_request.py [57行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:22:28,400 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:22:28,400 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '553894', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.108644ms'}
2022-04-25 18:22:28,401 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：553894
2022-04-25 18:22:28,401 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：553894
2022-04-25 18:22:28,401 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"553894","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:22:28,401 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '553894', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:22:28,401 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:22:28,401 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:22:28,401 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:22:28,401 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:22:28,401 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:22:28,401 ARS INFO handle_request.py [57行]: 请求数据为：{'sms_code': '553894', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:22:28,492 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:22:28,493 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Njk0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxMTQ4fQ.TF1AlOASHaxQ-motj0krDg4R_rUQtiWzRJLnsuIz37c'}, 'time': '13.400738ms'}
2022-04-25 18:22:28,493 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:22:28,493 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Njk0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxMTQ4fQ.TF1AlOASHaxQ-motj0krDg4R_rUQtiWzRJLnsuIz37c']
2022-04-25 18:22:28,493 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Njk0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxMTQ4fQ.TF1AlOASHaxQ-motj0krDg4R_rUQtiWzRJLnsuIz37c,并设置为Data类实例化对象的属性和值。
2022-04-25 18:22:28,493 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:22:28,504 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:22:28,504 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:22:28,504 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:22:28,505 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:22:28,505 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:22:28,505 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:22:28,505 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:22:28,505 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:22:28,505 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4Njk0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxMTQ4fQ.TF1AlOASHaxQ-motj0krDg4R_rUQtiWzRJLnsuIz37c'}
2022-04-25 18:22:28,506 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:22:28,507 ARS INFO handle_request.py [57行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:22:28,592 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:22:28,593 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.433µs'}
2022-04-25 18:29:43,619 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:29:43,621 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:29:43,621 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:29:43,622 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:29:43,622 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:29:43,622 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:29:43,622 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:29:43,623 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:29:43,623 ARS INFO handle_request.py [57行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:29:43,692 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:29:43,692 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '047360', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.579987ms'}
2022-04-25 18:29:43,694 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：047360
2022-04-25 18:29:43,694 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：047360
2022-04-25 18:29:43,695 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"047360","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:29:43,695 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '047360', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:29:43,695 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:29:43,695 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:29:43,695 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:29:43,695 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:29:43,696 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:29:43,696 ARS INFO handle_request.py [57行]: 请求数据为：{'sms_code': '047360', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:29:43,759 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:29:43,759 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}, 'time': '14.350686ms'}
2022-04-25 18:29:43,759 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:29:43,759 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE']
2022-04-25 18:29:43,759 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE,并设置为Data类实例化对象的属性和值。
2022-04-25 18:29:43,759 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:29:43,763 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:29:43,763 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:29:43,764 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:29:43,764 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:29:43,764 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:29:43,764 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:29:43,764 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:29:43,764 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:29:43,764 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:29:43,766 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:29:43,766 ARS INFO handle_request.py [57行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:29:43,855 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:29:43,855 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.661µs'}
2022-04-25 18:40:01,151 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:40:01,151 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:40:01,151 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:40:01,152 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:40:01,152 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:40:01,152 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:40:01,152 ARS INFO handle_request.py [40行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:40:01,153 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:40:01,153 ARS INFO handle_request.py [58行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:40:01,296 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:40:01,297 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '357790', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.101837ms'}
2022-04-25 18:40:01,299 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：357790
2022-04-25 18:40:01,299 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：357790
2022-04-25 18:40:01,299 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"357790","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:40:01,300 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '357790', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:40:01,300 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:40:01,300 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:40:01,300 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:40:01,300 ARS INFO handle_request.py [40行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:40:01,302 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:40:01,302 ARS INFO handle_request.py [58行]: 请求数据为：{'sms_code': '357790', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:40:01,388 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:40:01,388 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODAwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMjAxfQ.8JxBSRWPCK43k6Lx5p1k8DtLzoTnqFXIOXW316D93nk'}, 'time': '14.464554ms'}
2022-04-25 18:40:01,388 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:40:01,388 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODAwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMjAxfQ.8JxBSRWPCK43k6Lx5p1k8DtLzoTnqFXIOXW316D93nk']
2022-04-25 18:40:01,390 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODAwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMjAxfQ.8JxBSRWPCK43k6Lx5p1k8DtLzoTnqFXIOXW316D93nk,并设置为Data类实例化对象的属性和值。
2022-04-25 18:40:01,390 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:40:01,394 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:40:01,395 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:40:01,395 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:40:01,395 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:40:01,395 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:40:01,395 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:40:01,395 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:40:01,395 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:42:37,822 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:42:37,822 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:42:37,823 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:42:37,823 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:42:37,823 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:42:37,823 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:42:37,823 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:42:37,825 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:42:37,825 ARS INFO handle_request.py [57行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:42:37,935 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:42:37,935 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '165682', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.488891ms'}
2022-04-25 18:42:37,936 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：165682
2022-04-25 18:42:37,936 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：165682
2022-04-25 18:42:37,936 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"165682","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:42:37,936 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '165682', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:42:37,936 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:42:37,936 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:42:37,937 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:42:37,937 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:42:37,937 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:42:37,937 ARS INFO handle_request.py [57行]: 请求数据为：{'sms_code': '165682', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:42:38,025 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:42:38,025 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODE1OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMzU4fQ.5RyfDKMM8YCy8-fKcz416NG8d7vPT4HYTxxsewB5y4I'}, 'time': '14.276055ms'}
2022-04-25 18:42:38,026 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:42:38,026 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODE1OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMzU4fQ.5RyfDKMM8YCy8-fKcz416NG8d7vPT4HYTxxsewB5y4I']
2022-04-25 18:42:38,028 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODE1OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMzU4fQ.5RyfDKMM8YCy8-fKcz416NG8d7vPT4HYTxxsewB5y4I,并设置为Data类实例化对象的属性和值。
2022-04-25 18:42:38,028 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:42:38,033 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:42:38,033 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:42:38,033 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:42:38,033 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:42:38,035 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:42:38,035 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:42:38,035 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:42:38,035 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:42:38,035 ARS INFO handle_request.py [39行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODE1OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyMzU4fQ.5RyfDKMM8YCy8-fKcz416NG8d7vPT4HYTxxsewB5y4I'}
2022-04-25 18:42:38,036 ARS INFO handle_request.py [49行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:42:38,036 ARS INFO handle_request.py [57行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:42:38,123 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:42:38,123 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.041µs'}
2022-04-25 18:48:37,528 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:48:37,528 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:48:37,528 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:48:37,529 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:48:37,529 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:48:37,529 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:48:37,529 ARS INFO handle_request.py [40行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:48:37,529 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:48:37,529 ARS INFO handle_request.py [58行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:48:37,649 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:48:37,651 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '448350', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.685873ms'}
2022-04-25 18:48:37,651 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：448350
2022-04-25 18:48:37,651 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：448350
2022-04-25 18:48:37,651 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"448350","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:48:37,651 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '448350', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:48:37,651 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:48:37,651 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:48:37,651 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:48:37,651 ARS INFO handle_request.py [40行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 18:48:37,652 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:48:37,652 ARS INFO handle_request.py [58行]: 请求数据为：{'sms_code': '448350', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:48:37,761 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:48:37,763 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODUxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyNzE3fQ.dIFlHpaFIyilIOoOE8Gyc0i0ZdXUvsciNKXMrNJo2wg'}, 'time': '13.239391ms'}
2022-04-25 18:48:37,763 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:48:37,763 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODUxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyNzE3fQ.dIFlHpaFIyilIOoOE8Gyc0i0ZdXUvsciNKXMrNJo2wg']
2022-04-25 18:48:37,763 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODUxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyNzE3fQ.dIFlHpaFIyilIOoOE8Gyc0i0ZdXUvsciNKXMrNJo2wg,并设置为Data类实例化对象的属性和值。
2022-04-25 18:48:37,763 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:48:37,773 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:48:37,773 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:48:37,773 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:48:37,773 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:48:37,773 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:48:37,774 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:48:37,774 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:48:37,774 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:48:37,774 ARS INFO handle_request.py [39行]: <class 'dict'>
2022-04-25 18:48:37,774 ARS INFO handle_request.py [40行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODUxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyNzE3fQ.dIFlHpaFIyilIOoOE8Gyc0i0ZdXUvsciNKXMrNJo2wg'}
2022-04-25 18:48:37,775 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:48:37,776 ARS INFO handle_request.py [58行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:48:37,908 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:48:37,908 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.533µs'}
2022-04-25 18:52:34,856 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:52:34,857 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:52:34,858 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:52:34,858 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:52:34,858 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:52:34,858 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:52:34,858 ARS INFO handle_request.py [42行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:52:34,859 ARS INFO handle_request.py [52行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:52:34,859 ARS INFO handle_request.py [60行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:52:34,958 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:52:34,958 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '116155', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.675907ms'}
2022-04-25 18:52:34,958 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：116155
2022-04-25 18:52:34,959 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：116155
2022-04-25 18:52:34,959 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"116155","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:52:34,959 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '116155', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:52:34,959 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:52:34,959 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:52:34,959 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:52:34,959 ARS INFO handle_request.py [42行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:52:34,960 ARS INFO handle_request.py [52行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:52:34,960 ARS INFO handle_request.py [60行]: 请求数据为：{'sms_code': '116155', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:52:35,049 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:52:35,049 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODc1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyOTU1fQ.nqGVBZkpHtc21czKAqq17ojr4ov8VGFIRkmKpdFbGOo'}, 'time': '14.559154ms'}
2022-04-25 18:52:35,049 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:52:35,049 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODc1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyOTU1fQ.nqGVBZkpHtc21czKAqq17ojr4ov8VGFIRkmKpdFbGOo']
2022-04-25 18:52:35,049 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODc1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyOTU1fQ.nqGVBZkpHtc21czKAqq17ojr4ov8VGFIRkmKpdFbGOo,并设置为Data类实例化对象的属性和值。
2022-04-25 18:52:35,049 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:52:35,055 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:52:35,055 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:52:35,055 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:52:35,055 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:52:35,055 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:52:35,055 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:52:35,055 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:52:35,055 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:52:35,055 ARS INFO handle_request.py [42行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:52:35,056 ARS INFO handle_request.py [52行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:52:35,056 ARS INFO handle_request.py [60行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:52:35,141 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:52:35,141 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.201µs'}
2022-04-25 18:52:54,371 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:52:54,371 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:52:54,372 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:52:54,374 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:52:54,374 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:52:54,374 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:52:54,374 ARS INFO handle_request.py [42行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:52:54,374 ARS INFO handle_request.py [52行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:52:54,375 ARS INFO handle_request.py [60行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:52:54,463 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:52:54,463 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '602034', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.541617ms'}
2022-04-25 18:52:54,464 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：602034
2022-04-25 18:52:54,464 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：602034
2022-04-25 18:52:54,464 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"602034","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:52:54,464 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '602034', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:52:54,464 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:52:54,464 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:52:54,464 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:52:54,464 ARS INFO handle_request.py [42行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:52:54,465 ARS INFO handle_request.py [52行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:52:54,465 ARS INFO handle_request.py [60行]: 请求数据为：{'sms_code': '602034', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:52:54,542 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:52:54,542 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODc3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyOTc0fQ.XoWGaY5Vp8MiMZ87ElrZtnZH6-jYs4-7aqplbPefFRA'}, 'time': '13.274837ms'}
2022-04-25 18:52:54,542 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:52:54,542 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODc3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyOTc0fQ.XoWGaY5Vp8MiMZ87ElrZtnZH6-jYs4-7aqplbPefFRA']
2022-04-25 18:52:54,542 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODc3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgyOTc0fQ.XoWGaY5Vp8MiMZ87ElrZtnZH6-jYs4-7aqplbPefFRA,并设置为Data类实例化对象的属性和值。
2022-04-25 18:52:54,542 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:52:54,549 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:52:54,550 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:52:54,550 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:52:54,550 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:52:54,550 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:52:54,550 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:52:54,550 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:52:54,550 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:52:54,550 ARS INFO handle_request.py [42行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:52:54,551 ARS INFO handle_request.py [52行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:52:54,551 ARS INFO handle_request.py [60行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:52:54,631 ARS INFO handle_request.py [30行]: 响应状态码：200
2022-04-25 18:52:54,632 ARS INFO handle_request.py [31行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.082µs'}
2022-04-25 18:55:25,575 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:55:25,575 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:55:25,575 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:55:25,575 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:55:25,575 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:55:25,575 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:55:25,575 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:55:25,575 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:55:25,575 ARS INFO handle_request.py [61行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:55:26,144 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:55:26,144 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:55:26,144 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:55:26,144 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:55:26,145 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:55:26,145 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:55:26,145 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:55:26,145 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:55:26,145 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:55:26,145 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:55:26,145 ARS INFO handle_request.py [61行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:56:06,607 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:56:06,607 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:56:06,607 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:56:06,608 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:56:06,608 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:56:06,608 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:56:06,608 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:56:06,608 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:56:06,608 ARS INFO handle_request.py [61行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:56:06,608 ARS INFO handle_request.py [29行]: None
2022-04-25 18:56:06,702 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 18:56:06,702 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '630964', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.734941ms'}
2022-04-25 18:56:06,703 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：630964
2022-04-25 18:56:06,703 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：630964
2022-04-25 18:56:06,703 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"630964","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:56:06,703 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '630964', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:56:06,703 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:56:06,703 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:56:06,703 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:56:06,703 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:56:06,703 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:56:06,703 ARS INFO handle_request.py [61行]: 请求数据为：{'sms_code': '630964', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:56:06,704 ARS INFO handle_request.py [29行]: None
2022-04-25 18:56:06,789 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 18:56:06,789 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODk2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzMTY2fQ.lWqaxVSkAHqLuzLKLlT8x3hcgtti0910x-iH0WvDrpA'}, 'time': '14.263654ms'}
2022-04-25 18:56:06,790 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:56:06,790 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODk2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzMTY2fQ.lWqaxVSkAHqLuzLKLlT8x3hcgtti0910x-iH0WvDrpA']
2022-04-25 18:56:06,790 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4ODk2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzMTY2fQ.lWqaxVSkAHqLuzLKLlT8x3hcgtti0910x-iH0WvDrpA,并设置为Data类实例化对象的属性和值。
2022-04-25 18:56:06,791 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:56:06,798 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:56:06,799 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:56:06,799 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:56:06,799 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:56:06,799 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:56:06,799 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:56:06,799 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:56:06,799 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:56:06,800 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:56:06,802 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:56:06,802 ARS INFO handle_request.py [61行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:56:06,802 ARS INFO handle_request.py [29行]: None
2022-04-25 18:56:06,903 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 18:56:06,903 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.473µs'}
2022-04-25 18:56:43,236 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:56:43,238 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:56:43,238 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 18:56:43,239 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 18:56:43,239 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:56:43,239 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:56:43,239 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:56:43,239 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 18:56:43,239 ARS INFO handle_request.py [61行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 18:56:43,239 ARS INFO handle_request.py [29行]: fdsfsdfsdafasdfasdfNone
2022-04-25 18:56:43,307 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 18:56:43,307 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '314584', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.648541ms'}
2022-04-25 18:56:43,308 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：314584
2022-04-25 18:56:43,308 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：314584
2022-04-25 18:56:43,308 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"314584","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 18:56:43,308 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '314584', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:56:43,309 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 18:56:43,309 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:56:43,309 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:56:43,309 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:56:43,309 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 18:56:43,310 ARS INFO handle_request.py [61行]: 请求数据为：{'sms_code': '314584', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 18:56:43,310 ARS INFO handle_request.py [29行]: fdsfsdfsdafasdfasdfNone
2022-04-25 18:56:43,428 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 18:56:43,428 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTAwMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzMjAzfQ.odHUtCWuIfru_9UljElq3sq6lMUdC2Z06qlNiNJdfYg'}, 'time': '14.349964ms'}
2022-04-25 18:56:43,430 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 18:56:43,430 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTAwMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzMjAzfQ.odHUtCWuIfru_9UljElq3sq6lMUdC2Z06qlNiNJdfYg']
2022-04-25 18:56:43,430 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTAwMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzMjAzfQ.odHUtCWuIfru_9UljElq3sq6lMUdC2Z06qlNiNJdfYg,并设置为Data类实例化对象的属性和值。
2022-04-25 18:56:43,430 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 18:56:43,443 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 18:56:43,444 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 18:56:43,444 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 18:56:43,444 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 18:56:43,444 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:56:43,446 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 18:56:43,446 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 18:56:43,446 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 18:56:43,446 ARS INFO handle_request.py [43行]: 请1111求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4NzM4MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgxNTgzfQ.r0yfgWhjZWsvOHK_UkTVNXsSwddUN1292WEihvaSubE'}
2022-04-25 18:56:43,447 ARS INFO handle_request.py [53行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 18:56:43,448 ARS INFO handle_request.py [61行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 18:56:43,448 ARS INFO handle_request.py [29行]: fdsfsdfsdafasdfasdfNone
2022-04-25 18:56:43,552 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 18:56:43,552 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.1µs'}
2022-04-25 19:03:33,891 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 19:03:33,891 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 19:03:33,891 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-25 19:03:33,892 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-25 19:03:33,892 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 19:03:33,892 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 19:03:33,894 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-25 19:03:33,894 ARS INFO handle_request.py [58行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-25 19:03:33,894 ARS INFO handle_request.py [29行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 19:03:34,007 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 19:03:34,008 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '024321', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.611203ms'}
2022-04-25 19:03:34,011 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：024321
2022-04-25 19:03:34,011 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：024321
2022-04-25 19:03:34,011 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"024321","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-25 19:03:34,012 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '024321', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 19:03:34,012 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-25 19:03:34,012 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 19:03:34,012 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 19:03:34,013 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-25 19:03:34,013 ARS INFO handle_request.py [58行]: 请求数据为：{'sms_code': '024321', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-25 19:03:34,014 ARS INFO handle_request.py [29行]: 请求头为： {'Content-Type': 'application/json'}
2022-04-25 19:03:34,091 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 19:03:34,092 ARS INFO handle_request.py [32行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTQxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzNjE0fQ.baCWBzJ_YJI_WrZY-f1T2wlxITL3H8_rFnZzIIwnid0'}, 'time': '14.339789ms'}
2022-04-25 19:03:34,092 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-25 19:03:34,092 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTQxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzNjE0fQ.baCWBzJ_YJI_WrZY-f1T2wlxITL3H8_rFnZzIIwnid0']
2022-04-25 19:03:34,092 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTQxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzNjE0fQ.baCWBzJ_YJI_WrZY-f1T2wlxITL3H8_rFnZzIIwnid0,并设置为Data类实例化对象的属性和值。
2022-04-25 19:03:34,092 ARS INFO test_003_machineroom.py [47行]: True
2022-04-25 19:03:34,099 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-25 19:03:34,099 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-25 19:03:34,099 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-25 19:03:34,099 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-25 19:03:34,099 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 19:03:34,099 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-25 19:03:34,100 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-25 19:03:34,100 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-25 19:03:34,102 ARS INFO handle_request.py [50行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-25 19:03:34,102 ARS INFO handle_request.py [58行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-25 19:03:34,102 ARS INFO handle_request.py [29行]: 请求头为： {'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTQ4OTQxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwODgzNjE0fQ.baCWBzJ_YJI_WrZY-f1T2wlxITL3H8_rFnZzIIwnid0'}
2022-04-25 19:03:34,183 ARS INFO handle_request.py [31行]: 响应状态码：200
2022-04-25 19:03:34,183 ARS INFO handle_request.py [32行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.525353ms'}
2022-04-26 10:20:35,110 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-26 10:20:35,129 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 10:20:35,129 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 10:20:35,139 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 10:20:35,139 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 10:20:35,139 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 10:20:35,139 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 10:20:35,140 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 10:20:35,140 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 10:20:35,486 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 10:20:35,486 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '251818', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.889271ms'}
2022-04-26 10:20:35,486 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：251818
2022-04-26 10:20:35,486 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：251818
2022-04-26 10:20:35,486 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"251818","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_list': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 10:20:35,486 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'sms_code': '251818', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 10:20:35,486 ARS INFO test_003_machineroom.py [43行]: 222222222222222222
2022-04-26 10:20:35,486 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 10:20:35,486 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 10:20:35,486 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 10:20:35,487 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 10:20:35,487 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '251818', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 10:20:35,571 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 10:20:35,571 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU0NDQzNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTM4NjM1fQ.JAK8NxWq760dD0DpgM33jeAiJxWcmbC8jdq6foa1eto'}, 'time': '14.490222ms'}
2022-04-26 10:20:35,572 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 10:20:35,572 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU0NDQzNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTM4NjM1fQ.JAK8NxWq760dD0DpgM33jeAiJxWcmbC8jdq6foa1eto']
2022-04-26 10:20:35,572 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU0NDQzNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTM4NjM1fQ.JAK8NxWq760dD0DpgM33jeAiJxWcmbC8jdq6foa1eto,并设置为Data类实例化对象的属性和值。
2022-04-26 10:20:35,572 ARS INFO test_003_machineroom.py [47行]: True
2022-04-26 10:20:35,593 ARS INFO test_003_machineroom.py [32行]: =========== 登陆接口测试  ===============
2022-04-26 10:20:35,595 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_list': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-26 10:20:35,595 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 10:20:35,595 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 10:20:35,595 ARS INFO test_003_machineroom.py [38行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 10:20:35,595 ARS INFO test_003_machineroom.py [40行]: 111111111111111111
2022-04-26 10:20:35,595 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 10:20:35,595 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 10:20:35,595 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU0NDQzNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTM4NjM1fQ.JAK8NxWq760dD0DpgM33jeAiJxWcmbC8jdq6foa1eto'}
2022-04-26 10:20:35,598 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 10:20:35,598 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 10:20:35,674 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 10:20:35,674 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.482203ms'}
2022-04-26 11:21:38,695 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:21:38,696 ARS INFO my_assert.py [30行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:21:38,696 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:21:38,696 ARS INFO my_assert.py [30行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:21:38,696 ARS ERROR my_assert.py [36行]: 部分断言失败，请检查结果是False的断言
2022-04-26 11:24:47,095 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：
 -1
2022-04-26 11:24:47,095 ARS INFO my_assert.py [28行]: 预期结果为：
 0
2022-04-26 11:24:47,095 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:24:47,095 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：
 机房已存在
2022-04-26 11:24:47,095 ARS INFO my_assert.py [28行]: 预期结果为：
 操作成功
2022-04-26 11:24:47,095 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:24:47,095 ARS ERROR my_assert.py [37行]: 部分断言失败，请检查结果是False的断言
2022-04-26 11:25:09,748 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:25:09,748 ARS INFO my_assert.py [28行]: 预期结果为：0
2022-04-26 11:25:09,748 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:25:09,748 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:25:09,748 ARS INFO my_assert.py [28行]: 预期结果为：操作成功
2022-04-26 11:25:09,748 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:25:09,748 ARS ERROR my_assert.py [37行]: 部分断言失败，请检查结果是False的断言
2022-04-26 11:25:27,004 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:25:27,004 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:25:27,004 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:25:27,006 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:25:27,006 ARS INFO my_assert.py [28行]: 预期结果为：操作成功
2022-04-26 11:25:27,006 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：False
2022-04-26 11:25:27,006 ARS ERROR my_assert.py [37行]: 部分断言失败，请检查结果是False的断言
2022-04-26 11:26:24,039 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:26:24,039 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:26:24,039 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:26:24,039 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:26:24,039 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:26:24,039 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:26:24,039 ARS INFO my_assert.py [40行]: 全部断言通过
2022-04-26 11:31:39,726 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:31:39,726 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:31:39,726 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:31:39,726 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:31:39,726 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:31:39,726 ARS ERROR my_assert.py [36行]: 暂不支持e0q断言方式
2022-04-26 11:31:39,727 ARS INFO my_assert.py [42行]: 全部断言通过
2022-04-26 11:32:55,588 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:32:55,588 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:32:55,588 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:32:55,588 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:32:55,588 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:32:55,588 ARS ERROR my_assert.py [36行]: 暂不支持e0q断言方式
2022-04-26 11:32:55,588 ARS ERROR my_assert.py [40行]: 部分断言失败，请检查结果是False的断言
2022-04-26 11:37:56,719 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:37:56,719 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:37:56,719 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:37:56,719 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:37:56,719 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:37:56,719 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:37:56,719 ARS INFO my_assert.py [43行]: 全部断言通过
2022-04-26 11:38:39,342 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:38:39,342 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:38:39,342 ARS INFO my_assert.py [31行]: 断言方式：eq 
 断言的结果为：True
2022-04-26 11:38:39,342 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:38:39,342 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:38:39,342 ARS INFO my_assert.py [31行]: 断言方式：eq 
 断言的结果为：True
2022-04-26 11:38:39,342 ARS INFO my_assert.py [43行]: 全部断言通过
2022-04-26 11:39:29,549 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:39:29,549 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:39:29,549 ARS INFO my_assert.py [31行]: 断言方式：eq, 断言的结果为：True
2022-04-26 11:39:29,549 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:39:29,549 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:39:29,549 ARS INFO my_assert.py [31行]: 断言方式：eq, 断言的结果为：True
2022-04-26 11:39:29,550 ARS INFO my_assert.py [43行]: 全部断言通过
2022-04-26 11:40:03,430 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 11:40:03,430 ARS INFO my_assert.py [28行]: 预期结果为：-1
2022-04-26 11:40:03,430 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:40:03,430 ARS INFO my_assert.py [27行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 11:40:03,430 ARS INFO my_assert.py [28行]: 预期结果为：机房已存在
2022-04-26 11:40:03,430 ARS INFO my_assert.py [31行]: 断言方式：eq，断言的结果为：True
2022-04-26 11:40:03,430 ARS INFO my_assert.py [43行]: 全部断言通过
2022-04-26 16:07:27,947 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:07:27,953 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:07:27,988 ARS INFO my_assert.py [61行]: 查询的数据结果为：1
2022-04-26 16:07:27,988 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：1
2022-04-26 16:08:19,098 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:08:19,098 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:08:19,151 ARS INFO my_assert.py [61行]: 查询的数据结果为：1
2022-04-26 16:08:19,151 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：1
2022-04-26 16:08:19,151 ARS INFO my_assert.py [72行]: 要对比的预期结果excepted：1
2022-04-26 16:08:19,151 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:08:19,151 ARS INFO my_assert.py [80行]: 全部数据库断言通过
2022-04-26 16:13:16,618 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:13:16,618 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:13:16,676 ARS INFO my_assert.py [61行]: 查询的数据结果为：1
2022-04-26 16:13:16,676 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：1
2022-04-26 16:13:16,676 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：1
2022-04-26 16:13:16,676 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:13:16,676 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:13:16,676 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:14:58,673 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:14:58,674 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:14:58,713 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:14:58,713 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:14:58,713 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:14:58,713 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:14:58,715 ARS INFO my_assert.py [80行]: 全部数据库断言通过
2022-04-26 16:15:19,832 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:15:19,832 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:15:19,870 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:15:19,870 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:15:19,870 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:15:19,871 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:15:19,871 ARS INFO my_assert.py [80行]: 全部数据库断言通过
2022-04-26 16:16:02,936 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:16:02,937 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:16:02,976 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:16:02,976 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:16:02,976 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:16:02,976 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:16:02,976 ARS INFO my_assert.py [80行]: 全部数据库断言通过
2022-04-26 16:16:46,185 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:16:46,187 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:16:46,224 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:16:46,224 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:16:46,224 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaaa'}
2022-04-26 16:16:46,224 ARS INFO my_assert.py [74行]: 数据库比对结果为：False
2022-04-26 16:16:46,224 ARS ERROR my_assert.py [77行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 16:32:42,831 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:32:42,832 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:32:42,839 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:32:42,839 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:32:42,839 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:32:42,839 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:32:42,884 ARS INFO my_assert.py [77行]: 关闭数据库连接
2022-04-26 16:32:42,884 ARS INFO my_assert.py [83行]: 全部数据库断言通过
2022-04-26 16:34:12,993 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:34:12,993 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:34:13,003 ARS INFO my_assert.py [61行]: 查询的数据结果为：1
2022-04-26 16:34:13,003 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：1
2022-04-26 16:34:13,003 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：1
2022-04-26 16:34:13,003 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:34:13,003 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:34:13,003 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:34:13,014 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:34:13,015 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:34:13,015 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:34:13,015 ARS INFO my_assert.py [74行]: 数据库比对结果为：True
2022-04-26 16:34:13,043 ARS INFO my_assert.py [77行]: 关闭数据库连接
2022-04-26 16:34:13,044 ARS INFO my_assert.py [83行]: 全部数据库断言通过
2022-04-26 16:35:10,084 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:35:10,084 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:35:10,098 ARS INFO my_assert.py [61行]: 查询的数据结果为：1
2022-04-26 16:35:10,098 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：1
2022-04-26 16:35:10,099 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：1
2022-04-26 16:35:10,099 ARS INFO my_assert.py [74行]: 数据库比对结果为：===========>>>True
2022-04-26 16:35:10,099 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:35:10,099 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:35:10,111 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:35:10,111 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:35:10,111 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:35:10,111 ARS INFO my_assert.py [74行]: 数据库比对结果为：===========>>>True
2022-04-26 16:35:10,131 ARS INFO my_assert.py [77行]: 关闭数据库连接
2022-04-26 16:35:10,131 ARS INFO my_assert.py [83行]: 全部数据库断言通过
2022-04-26 16:35:26,592 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:35:26,592 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:35:26,605 ARS INFO my_assert.py [61行]: 查询的数据结果为：1
2022-04-26 16:35:26,605 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：1
2022-04-26 16:35:26,606 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：0
2022-04-26 16:35:26,606 ARS INFO my_assert.py [74行]: 数据库比对结果为：===========>>>False
2022-04-26 16:35:26,606 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:35:26,606 ARS INFO my_assert.py [64行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:35:26,616 ARS INFO my_assert.py [66行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:35:26,616 ARS INFO my_assert.py [71行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:35:26,616 ARS INFO my_assert.py [72行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:35:26,617 ARS INFO my_assert.py [74行]: 数据库比对结果为：===========>>>True
2022-04-26 16:35:26,634 ARS INFO my_assert.py [77行]: 关闭数据库连接
2022-04-26 16:35:26,635 ARS ERROR my_assert.py [80行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 16:36:14,148 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:36:14,150 ARS INFO my_assert.py [59行]: 数据库查询方式count，将进行数据库查询结果条数进行比对
2022-04-26 16:36:14,164 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 16:36:14,164 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：0
2022-04-26 16:36:14,164 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-26 16:36:14,164 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:36:14,164 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:36:14,177 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:36:14,177 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:36:14,177 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:36:14,179 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 16:36:14,187 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 16:36:14,187 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 16:36:37,185 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:36:37,185 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 16:36:37,196 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 16:36:37,196 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：0
2022-04-26 16:36:37,196 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-26 16:36:37,196 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 16:36:37,196 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 16:36:37,206 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 16:36:37,206 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 16:36:37,206 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 16:36:37,206 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 16:36:37,240 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 16:36:37,240 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 17:03:32,604 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:03:32,604 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:03:32,604 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:03:32,604 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:03:32,605 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:03:32,605 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:03:32,605 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:03:32,605 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:03:32,605 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:03:32,967 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:03:32,968 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '741151', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.803558ms'}
2022-04-26 17:03:32,969 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：741151
2022-04-26 17:03:32,969 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：741151
2022-04-26 17:03:32,969 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"741151","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:03:32,970 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'sms_code': '741151', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:03:32,970 ARS INFO test_003_machineroom.py [46行]: 222222222222222222
2022-04-26 17:03:32,970 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:03:32,970 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:03:32,970 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:03:32,971 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:03:32,971 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '741151', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:03:33,062 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:03:33,062 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2ODYxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYyODEzfQ.3Mb8BcTeKn2HJ3DZERRNVCurhJBTpB1j6oNa4xK5lKY'}, 'time': '14.545199ms'}
2022-04-26 17:03:33,062 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:03:33,063 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2ODYxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYyODEzfQ.3Mb8BcTeKn2HJ3DZERRNVCurhJBTpB1j6oNa4xK5lKY']
2022-04-26 17:03:33,063 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2ODYxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYyODEzfQ.3Mb8BcTeKn2HJ3DZERRNVCurhJBTpB1j6oNa4xK5lKY,并设置为Data类实例化对象的属性和值。
2022-04-26 17:03:33,063 ARS INFO test_003_machineroom.py [50行]: True
2022-04-26 17:03:33,822 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:03:33,823 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":0,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:03:33,823 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:03:33,823 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:03:33,823 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:03:33,823 ARS INFO test_003_machineroom.py [43行]: 111111111111111111
2022-04-26 17:03:33,823 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:03:33,823 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:03:33,823 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2ODYxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYyODEzfQ.3Mb8BcTeKn2HJ3DZERRNVCurhJBTpB1j6oNa4xK5lKY'}
2022-04-26 17:03:33,825 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:03:33,825 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:03:33,884 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:03:33,884 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.468283ms'}
2022-04-26 17:03:33,884 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 17:03:33,884 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-26 17:03:33,884 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:03:33,884 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 17:03:33,884 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:03:33,884 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:03:33,884 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-26 17:03:34,524 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:03:34,524 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:03:34,536 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:03:34,536 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：0
2022-04-26 17:03:34,536 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-26 17:03:34,536 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:03:34,536 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:03:34,548 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:03:34,549 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:03:34,549 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:03:34,549 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:03:34,576 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:03:34,576 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 17:03:34,576 ARS INFO test_003_machineroom.py [63行]: 用例执行失败
2022-04-26 17:22:06,143 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:22:06,143 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:22:06,143 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:22:06,144 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:22:06,144 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:22:06,144 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:22:06,144 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:22:06,144 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:22:06,144 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:22:06,244 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:22:06,244 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '373652', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.220719ms'}
2022-04-26 17:22:06,246 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：373652
2022-04-26 17:22:06,246 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：373652
2022-04-26 17:22:06,246 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"373652","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:22:06,246 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'sms_code': '373652', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:22:06,246 ARS INFO test_003_machineroom.py [46行]: 222222222222222222
2022-04-26 17:22:06,246 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:22:06,246 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:22:06,246 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:22:06,246 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:22:06,246 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '373652', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:22:06,316 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:22:06,316 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2OTcyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYzOTI2fQ.as9dfyh3Y-ywPtjBNuttWW_607opCuX6TimmvWY3pCM'}, 'time': '13.223733ms'}
2022-04-26 17:22:06,318 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:22:06,318 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2OTcyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYzOTI2fQ.as9dfyh3Y-ywPtjBNuttWW_607opCuX6TimmvWY3pCM']
2022-04-26 17:22:06,318 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2OTcyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYzOTI2fQ.as9dfyh3Y-ywPtjBNuttWW_607opCuX6TimmvWY3pCM,并设置为Data类实例化对象的属性和值。
2022-04-26 17:22:06,319 ARS INFO test_003_machineroom.py [50行]: True
2022-04-26 17:22:07,105 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:22:07,105 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":0,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:22:07,105 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:22:07,105 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:22:07,105 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:22:07,105 ARS INFO test_003_machineroom.py [43行]: 111111111111111111
2022-04-26 17:22:07,105 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:22:07,105 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:22:07,105 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU2OTcyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTYzOTI2fQ.as9dfyh3Y-ywPtjBNuttWW_607opCuX6TimmvWY3pCM'}
2022-04-26 17:22:07,105 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:22:07,107 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:22:07,164 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:22:07,164 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.421722ms'}
2022-04-26 17:22:07,164 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 17:22:07,164 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-26 17:22:07,164 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:22:07,166 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 17:22:07,166 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:22:07,166 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:22:07,166 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-26 17:22:07,835 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:22:07,835 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:22:07,847 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:22:07,848 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：0
2022-04-26 17:22:07,848 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-26 17:22:07,848 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:22:07,848 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:22:07,857 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:22:07,857 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:22:07,857 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:22:07,857 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:22:07,886 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:22:07,886 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 17:22:07,886 ARS INFO test_003_machineroom.py [63行]: 用例执行失败
2022-04-26 17:27:52,504 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:27:52,504 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:27:52,504 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:27:52,505 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:27:52,505 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:27:52,505 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:27:52,505 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:27:52,506 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:27:52,506 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:27:52,621 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:27:52,621 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '618917', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.146799ms'}
2022-04-26 17:27:52,623 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：618917
2022-04-26 17:27:52,623 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：618917
2022-04-26 17:27:52,624 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"618917","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:27:52,624 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'sms_code': '618917', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:27:52,625 ARS INFO test_003_machineroom.py [46行]: 222222222222222222
2022-04-26 17:27:52,625 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:27:52,625 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:27:52,625 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:27:52,625 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:27:52,627 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '618917', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:27:52,733 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:27:52,734 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDA3MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MjcyfQ.4GvmE6ZhT68uAIg_HJJyRXYYBTDy7W13bkrSaRczgJc'}, 'time': '14.608914ms'}
2022-04-26 17:27:52,734 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:27:52,734 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDA3MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MjcyfQ.4GvmE6ZhT68uAIg_HJJyRXYYBTDy7W13bkrSaRczgJc']
2022-04-26 17:27:52,735 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDA3MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MjcyfQ.4GvmE6ZhT68uAIg_HJJyRXYYBTDy7W13bkrSaRczgJc,并设置为Data类实例化对象的属性和值。
2022-04-26 17:27:52,735 ARS INFO test_003_machineroom.py [50行]: True
2022-04-26 17:27:52,743 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:27:52,744 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":0,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:27:52,744 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:27:52,744 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:27:52,744 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:27:52,745 ARS INFO test_003_machineroom.py [43行]: 111111111111111111
2022-04-26 17:27:52,745 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:27:52,745 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:27:52,745 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDA3MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MjcyfQ.4GvmE6ZhT68uAIg_HJJyRXYYBTDy7W13bkrSaRczgJc'}
2022-04-26 17:27:52,746 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:27:52,747 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:27:52,823 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:27:52,823 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.354655ms'}
2022-04-26 17:27:52,823 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 17:27:52,823 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-26 17:27:52,823 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:27:52,823 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 17:27:52,823 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:27:52,823 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:27:52,823 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-26 17:27:53,459 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:27:53,460 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:27:53,475 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:27:53,476 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：0
2022-04-26 17:27:53,476 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-26 17:27:53,476 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:27:53,476 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:27:53,488 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:27:53,489 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:27:53,489 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:27:53,489 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:27:53,496 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:27:53,496 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-26 17:27:53,496 ARS INFO test_003_machineroom.py [66行]: 用例执行失败
2022-04-26 17:28:56,374 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:28:56,374 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:28:56,374 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:28:56,375 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:28:56,375 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:28:56,375 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:28:56,375 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:28:56,375 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:28:56,375 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:28:56,496 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:28:56,496 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '662437', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.57243ms'}
2022-04-26 17:28:56,499 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：662437
2022-04-26 17:28:56,499 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：662437
2022-04-26 17:28:56,500 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"662437","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:28:56,500 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'sms_code': '662437', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:28:56,500 ARS INFO test_003_machineroom.py [46行]: 222222222222222222
2022-04-26 17:28:56,500 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:28:56,500 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:28:56,500 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:28:56,503 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:28:56,503 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '662437', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:28:56,590 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:28:56,590 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDEzNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MzM2fQ.LxqBXEC15bhhxrJvt62ZK019smWJNT1_EBcEgxpO0Bg'}, 'time': '13.332052ms'}
2022-04-26 17:28:56,590 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:28:56,590 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDEzNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MzM2fQ.LxqBXEC15bhhxrJvt62ZK019smWJNT1_EBcEgxpO0Bg']
2022-04-26 17:28:56,590 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDEzNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MzM2fQ.LxqBXEC15bhhxrJvt62ZK019smWJNT1_EBcEgxpO0Bg,并设置为Data类实例化对象的属性和值。
2022-04-26 17:28:56,591 ARS INFO test_003_machineroom.py [50行]: True
2022-04-26 17:28:56,599 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:28:56,600 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:28:56,600 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:28:56,600 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:28:56,600 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:28:56,600 ARS INFO test_003_machineroom.py [43行]: 111111111111111111
2022-04-26 17:28:56,600 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:28:56,601 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:28:56,601 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDEzNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0MzM2fQ.LxqBXEC15bhhxrJvt62ZK019smWJNT1_EBcEgxpO0Bg'}
2022-04-26 17:28:56,603 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:28:56,603 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:28:56,657 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:28:56,657 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.467538ms'}
2022-04-26 17:28:56,659 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 17:28:56,659 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-26 17:28:56,659 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:28:56,659 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 17:28:56,659 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:28:56,659 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:28:56,659 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-26 17:28:57,291 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:28:57,291 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:28:57,300 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:28:57,302 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-26 17:28:57,302 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:28:57,302 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:28:57,302 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:28:57,312 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:28:57,312 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:28:57,312 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:28:57,312 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:28:57,340 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:28:57,340 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-26 17:28:57,340 ARS INFO test_003_machineroom.py [66行]: 用例执行失败
2022-04-26 17:29:37,328 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:29:37,328 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:29:37,328 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:29:37,328 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:29:37,328 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:29:37,329 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:29:37,329 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:29:37,329 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:29:37,329 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:29:37,400 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:29:37,400 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '629929', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.977582ms'}
2022-04-26 17:29:37,401 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：629929
2022-04-26 17:29:37,401 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：629929
2022-04-26 17:29:37,401 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"629929","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:29:37,401 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'sms_code': '629929', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:29:37,401 ARS INFO test_003_machineroom.py [46行]: 222222222222222222
2022-04-26 17:29:37,401 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:29:37,401 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:29:37,401 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:29:37,401 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:29:37,401 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '629929', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:29:37,470 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:29:37,470 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0Mzc3fQ.q4FVFGQP4oluHLA08_jJ5dBA0O_bmtt99VwlyG49rII'}, 'time': '14.725057ms'}
2022-04-26 17:29:37,470 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:29:37,471 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0Mzc3fQ.q4FVFGQP4oluHLA08_jJ5dBA0O_bmtt99VwlyG49rII']
2022-04-26 17:29:37,471 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0Mzc3fQ.q4FVFGQP4oluHLA08_jJ5dBA0O_bmtt99VwlyG49rII,并设置为Data类实例化对象的属性和值。
2022-04-26 17:29:37,471 ARS INFO test_003_machineroom.py [50行]: True
2022-04-26 17:29:37,475 ARS INFO test_003_machineroom.py [34行]: =========== 登陆接口测试  ===============
2022-04-26 17:29:37,475 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:29:37,476 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:29:37,476 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:29:37,476 ARS INFO test_003_machineroom.py [40行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:29:37,476 ARS INFO test_003_machineroom.py [43行]: 111111111111111111
2022-04-26 17:29:37,476 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:29:37,476 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:29:37,476 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0Mzc3fQ.q4FVFGQP4oluHLA08_jJ5dBA0O_bmtt99VwlyG49rII'}
2022-04-26 17:29:37,476 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:29:37,476 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:29:37,540 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:29:37,540 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.293689ms'}
2022-04-26 17:29:37,540 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 17:29:37,540 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-26 17:29:37,540 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:29:37,542 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 17:29:37,542 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:29:37,542 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:29:37,542 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-26 17:29:38,142 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:29:38,143 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:29:38,151 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:29:38,152 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-26 17:29:38,152 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:29:38,152 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:29:38,152 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:29:38,161 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:29:38,163 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:29:38,163 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:29:38,163 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:29:38,193 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:29:38,193 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-26 17:38:00,819 ARS INFO test_003_machineroom.py [35行]: =========== 登陆接口测试  ===============
2022-04-26 17:38:00,819 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:38:00,819 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:38:00,819 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:38:00,819 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:38:00,819 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:38:00,819 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:38:00,819 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:38:00,820 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:38:00,907 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:38:00,908 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '874862', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.31361ms'}
2022-04-26 17:38:00,908 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：874862
2022-04-26 17:38:00,908 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：874862
2022-04-26 17:38:00,910 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"874862","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:38:00,910 ARS INFO test_003_machineroom.py [41行]: 处理之后的请求数据为：{'sms_code': '874862', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:38:00,910 ARS INFO test_003_machineroom.py [47行]: 222222222222222222
2022-04-26 17:38:00,910 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:38:00,910 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:38:00,910 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:38:00,910 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:38:00,911 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '874862', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:38:00,982 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:38:00,982 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0ODgxfQ.0ujW1n6RaMSeVSsQhSan8krGvM2U62_kwHdlHjf4xVg'}, 'time': '14.301857ms'}
2022-04-26 17:38:00,982 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:38:00,983 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0ODgxfQ.0ujW1n6RaMSeVSsQhSan8krGvM2U62_kwHdlHjf4xVg']
2022-04-26 17:38:00,983 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY0ODgxfQ.0ujW1n6RaMSeVSsQhSan8krGvM2U62_kwHdlHjf4xVg,并设置为Data类实例化对象的属性和值。
2022-04-26 17:38:00,983 ARS INFO test_003_machineroom.py [51行]: True
2022-04-26 17:38:00,992 ARS INFO test_003_machineroom.py [35行]: =========== 登陆接口测试  ===============
2022-04-26 17:38:00,992 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:38:00,992 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:38:00,993 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:38:00,993 ARS INFO test_003_machineroom.py [41行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:38:00,993 ARS INFO test_003_machineroom.py [47行]: 222222222222222222
2022-04-26 17:38:00,993 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:38:00,993 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:38:00,993 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:38:00,995 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:38:00,996 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:38:01,068 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:38:01,068 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.588µs'}
2022-04-26 17:38:01,069 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-26 17:38:01,069 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-26 17:38:01,069 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:38:01,069 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-26 17:38:01,069 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:38:01,069 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:38:01,069 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-26 17:38:01,720 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:38:01,720 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:38:01,735 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:38:01,735 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-26 17:38:01,735 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:38:01,735 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:38:01,736 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:38:01,750 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:38:01,751 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:38:01,751 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:38:01,751 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:38:01,763 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:38:01,763 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-26 17:38:01,764 ARS ERROR test_003_machineroom.py [67行]: 用例执行失败
2022-04-26 17:50:52,625 ARS INFO test_003_machineroom.py [35行]: =========== 登陆接口测试  ===============
2022-04-26 17:50:52,627 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:50:52,627 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:50:52,627 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:50:52,628 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:50:52,628 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:50:52,628 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:50:52,628 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:50:52,628 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:50:52,759 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:50:52,759 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '074035', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.678287ms'}
2022-04-26 17:50:52,759 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：074035
2022-04-26 17:50:52,759 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：074035
2022-04-26 17:50:52,759 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"074035","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:50:52,759 ARS INFO test_003_machineroom.py [41行]: 处理之后的请求数据为：{'sms_code': '074035', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:50:52,759 ARS INFO test_003_machineroom.py [47行]: 222222222222222222
2022-04-26 17:50:52,760 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:50:52,760 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:50:52,760 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:50:52,760 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:50:52,760 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '074035', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:50:52,865 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:50:52,867 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTQ1MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1NjUyfQ.thjdVs2YVdme1fzOPB_1_K7UAD0UshwDVE53ZkIvWAI'}, 'time': '13.698884ms'}
2022-04-26 17:50:52,867 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:50:52,867 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTQ1MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1NjUyfQ.thjdVs2YVdme1fzOPB_1_K7UAD0UshwDVE53ZkIvWAI']
2022-04-26 17:50:52,867 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTQ1MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1NjUyfQ.thjdVs2YVdme1fzOPB_1_K7UAD0UshwDVE53ZkIvWAI,并设置为Data类实例化对象的属性和值。
2022-04-26 17:50:52,867 ARS INFO test_003_machineroom.py [51行]: True
2022-04-26 17:50:52,872 ARS INFO test_003_machineroom.py [35行]: =========== 登陆接口测试  ===============
2022-04-26 17:50:52,872 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:50:52,872 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:50:52,872 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:50:52,872 ARS INFO test_003_machineroom.py [41行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:50:52,872 ARS INFO test_003_machineroom.py [47行]: 222222222222222222
2022-04-26 17:50:52,872 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:50:52,872 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:50:52,873 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:50:52,873 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:50:52,873 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:50:52,935 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:50:52,936 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.765µs'}
2022-04-26 17:50:52,936 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-26 17:50:52,936 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-26 17:50:52,936 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:50:52,936 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-26 17:50:52,936 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:50:52,936 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-26 17:50:52,936 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-26 17:50:53,548 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:50:53,548 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:50:53,559 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:50:53,559 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-26 17:50:53,559 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:50:53,559 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:50:53,559 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:50:53,569 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:50:53,569 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:50:53,569 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:50:53,569 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:50:53,603 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:50:53,603 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-26 17:50:53,603 ARS ERROR test_003_machineroom.py [67行]: 用例执行失败
2022-04-26 17:53:04,563 ARS INFO test_003_machineroom.py [35行]: =========== 登陆接口测试  ===============
2022-04-26 17:53:04,563 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:53:04,564 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 17:53:04,564 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 17:53:04,564 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:53:04,566 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:53:04,566 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:53:04,566 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 17:53:04,566 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 17:53:04,680 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:53:04,680 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '552085', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.623247ms'}
2022-04-26 17:53:04,680 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：552085
2022-04-26 17:53:04,680 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：552085
2022-04-26 17:53:04,680 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"552085","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 17:53:04,681 ARS INFO test_003_machineroom.py [41行]: 处理之后的请求数据为：{'sms_code': '552085', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:53:04,681 ARS INFO test_003_machineroom.py [47行]: 222222222222222222
2022-04-26 17:53:04,681 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:53:04,681 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:53:04,681 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 17:53:04,683 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 17:53:04,683 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '552085', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 17:53:04,766 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:53:04,766 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTU4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1Nzg0fQ.h2RAeC4JztfmfagRTJeypJKRjZgqupcemYDAaFKo17c'}, 'time': '16.267278ms'}
2022-04-26 17:53:04,766 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 17:53:04,766 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTU4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1Nzg0fQ.h2RAeC4JztfmfagRTJeypJKRjZgqupcemYDAaFKo17c']
2022-04-26 17:53:04,767 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTU4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1Nzg0fQ.h2RAeC4JztfmfagRTJeypJKRjZgqupcemYDAaFKo17c,并设置为Data类实例化对象的属性和值。
2022-04-26 17:53:04,783 ARS INFO test_003_machineroom.py [35行]: =========== 登陆接口测试  ===============
2022-04-26 17:53:04,784 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 17:53:04,784 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 17:53:04,785 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 17:53:04,785 ARS INFO test_003_machineroom.py [41行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:53:04,785 ARS INFO test_003_machineroom.py [44行]: 111111111111111111
2022-04-26 17:53:04,787 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 17:53:04,787 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 17:53:04,787 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MTU4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY1Nzg0fQ.h2RAeC4JztfmfagRTJeypJKRjZgqupcemYDAaFKo17c'}
2022-04-26 17:53:04,788 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 17:53:04,789 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 17:53:04,878 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 17:53:04,880 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.378635ms'}
2022-04-26 17:53:04,880 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 17:53:04,880 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-26 17:53:04,880 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:53:04,880 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 17:53:04,880 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 17:53:04,880 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 17:53:04,880 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-26 17:53:05,544 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:53:05,544 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 17:53:05,556 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 17:53:05,556 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-26 17:53:05,556 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:53:05,556 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 17:53:05,556 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 17:53:05,568 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 17:53:05,569 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 17:53:05,569 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 17:53:05,569 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 17:53:05,580 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 17:53:05,580 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-26 18:00:14,217 ARS INFO test_003_machineroom.py [39行]: =========== 登陆接口测试  ===============
2022-04-26 18:00:14,217 ARS INFO handle_replace.py [26行]: {'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"#sms_code#","phone":"#phone#","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 18:00:14,217 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['sms_code', 'phone']
2022-04-26 18:00:14,219 ARS INFO handle_replace.py [35行]: 把需要替换的#phone#替换成：18276762767
2022-04-26 18:00:14,219 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:00:14,219 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:00:14,219 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:00:14,220 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 18:00:14,220 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 18:00:14,328 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:00:14,328 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '681212', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.697862ms'}
2022-04-26 18:00:14,329 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：681212
2022-04-26 18:00:14,329 ARS INFO handle_replace.py [37行]: 把需要替换的#sms_code#替换成：681212
2022-04-26 18:00:14,329 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 0, 'title': '登陆账号', 'method': 'post', 'url': '/base/login', 'req_data': '{"sms_code":"681212","phone":"18276762767","password":"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="}', 'assert_response': None, 'assert_db': None, 'extract': '{"token":"$..token"}', 'execute': 'True'}
2022-04-26 18:00:14,329 ARS INFO test_003_machineroom.py [45行]: 处理之后的请求数据为：{'sms_code': '681212', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 18:00:14,329 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:00:14,329 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:00:14,329 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:00:14,331 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 18:00:14,331 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '681212', 'phone': '18276762767', 'password': 'g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8='}
2022-04-26 18:00:14,447 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:00:14,447 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MjAxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY2MjE0fQ.fIliKZEgm6mUo2EjTYNzsJ2RyKgeIHtiVVi8lyOMemY'}, 'time': '14.335154ms'}
2022-04-26 18:00:14,447 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-26 18:00:14,447 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MjAxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY2MjE0fQ.fIliKZEgm6mUo2EjTYNzsJ2RyKgeIHtiVVi8lyOMemY']
2022-04-26 18:00:14,447 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MjAxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY2MjE0fQ.fIliKZEgm6mUo2EjTYNzsJ2RyKgeIHtiVVi8lyOMemY,并设置为Data类实例化对象的属性和值。
2022-04-26 18:00:14,452 ARS INFO test_003_machineroom.py [39行]: =========== 登陆接口测试  ===============
2022-04-26 18:00:14,452 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-26 18:00:14,452 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-26 18:00:14,452 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-26 18:00:14,452 ARS INFO test_003_machineroom.py [45行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 18:00:14,454 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:00:14,454 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:00:14,454 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MjAxNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY2MjE0fQ.fIliKZEgm6mUo2EjTYNzsJ2RyKgeIHtiVVi8lyOMemY'}
2022-04-26 18:00:14,454 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-26 18:00:14,454 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-26 18:00:14,513 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:00:14,513 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.476075ms'}
2022-04-26 18:00:14,513 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-26 18:00:14,513 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-26 18:00:14,515 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 18:00:14,515 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-26 18:00:14,515 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-26 18:00:14,515 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-26 18:00:14,515 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-26 18:00:15,168 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 18:00:15,168 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-26 18:00:15,180 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-26 18:00:15,180 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-26 18:00:15,180 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 18:00:15,180 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-26 18:00:15,180 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-26 18:00:15,190 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-26 18:00:15,190 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-26 18:00:15,191 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-26 18:00:15,191 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-26 18:00:15,212 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-26 18:00:15,212 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-26 18:20:32,971 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:20:32,971 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:20:32,971 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:20:32,971 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 18:20:32,971 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 18:20:33,098 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:20:33,098 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '695981', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.104856ms'}
2022-04-26 18:20:33,098 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：695981
2022-04-26 18:20:33,098 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:20:33,099 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:20:33,099 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:20:33,099 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 18:20:33,099 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '695981', 'phone': '18276762767', 'password': '"WxDmkMJgOi4KqdsHC+P2RV+BI0V15co1mlB9UhexF57M09K28qqhvcZsdx2TUOvhdVJws77v3qMwyqTcflmm0KtDf8jM/x8c8TVFgc4Z1F4uQEa0XfWGVoFjC7ZO6K4zEa5AjCb9D8J9/oJIxPDp7HgQU/NehRa3dlhcnC8dOsuiKxSZ6Xg5bKZqLEh9VBJEwILlLrIodV6z84dHkAOTQvbOnc7CcU8Mor9ufVP69EXGOBqLA32fg4T7sDxgEy2fwPTIP+wpOrOiWbnqCL1p/41qoCJXxNi4kA6+GoBikHFmh/tT/p6mRQ9YbKU+2cLBkd+cA0h6+EdRj+H0IgGrOFNb08vaaqvxNMhJKXJPYBZiLPrTGMJX53l7Y+YPzOuU0YjqThYweAN5e5MqpTD1ecK69DOybDRf0VklYO+KpUrg2tKf0qntaAp+Yqy+8CA6LctLCiYye+cXHqdOb+Su8HxZqxYOofYSdOXVtBWgIy00R3VqJxeIc7DJPArJT8GRLWgrI8xcee1k3335t9Dq69L5OizYUq4iowF9bsxM4vbPTRQ8FMeBloaeo9SMIXBpsw8T/TWI4Lt8D0LzjnTdSzagtZlc/Y7Lz+Lux7Nk7598Rm1swIdLUx0v9Qpju9mwsQUbt5TqnW5+duTPLl4Hlljjb15wmzNWxUXcKZoRU/U="'}
2022-04-26 18:20:33,163 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:20:33,163 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '您已输错密码1次，还剩余9次输入机会！', 'data': {}, 'time': '4.624139ms'}
2022-04-26 18:23:25,571 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:23:25,572 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:23:25,572 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:23:25,572 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 18:23:25,572 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 18:23:25,657 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:23:25,659 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '988642', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.819865ms'}
2022-04-26 18:23:25,659 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：988642
2022-04-26 18:23:25,659 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:23:25,659 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:23:25,659 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:23:25,660 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 18:23:25,660 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '988642', 'phone': '18276762767', 'password': '"g/vsrMt+tnBegCuj69RrOSV39wcBcCZpWaJz/5lsEZQ+guutRBqaPGepTrn3/zZ7a51HvYJLAx4n9k0tP4XXREhsd/LO1eLwy2G6j/UTLtzuC88mBWYrttcgEQeL0oiPQKdq2uea9Le2l3EDOxBlLNCtJ+q+a64I0FzR8psRkikyIACIh9qhLzFlhEKxZ8/5WmPnvW1bDL3MS4/tWHJJreKwqrPEvmYjZVbPNACNdHXmwVzzNE0cPWvvS6Q3MtTUR4xiTk9bCGaC8mX+DH+O+unsLCWj08rAGl9ZHV1vfOQkiJOODwjG+2acEDtnxCD5cPe+oknl4IXa330FV3b3NvtEGwpfQ87iRsWXmICIfqs8yK6JifNiUTuwlUe3EVFjxaxugRGAV+bKHtzI0Up4WIhaFcWSvnHLtM3Afog+UQWqjZHx5t83S9qujXTHFiV5j/OJQwGachuk6tIfqLYd3xn6dYcX6qmKfiQM3RhyTjbyAf9sMM+OCBlntRyJqV0AeZSaQFHFvk31R0IZ0AdzsLj8KR+6PiOpT/XudgmYwFxfMcAq0jWcqS7ljtHgz2SU1bD4KVfntz/pS3eRqK1y/+hlqDDR/PgPMcWXafsUMwPFtwVZlP8nQc8J9AwL4fyn00cq8uLpcYuIhkaR84+jfIYJjfeP2N2EilDsUL45Yo8="'}
2022-04-26 18:23:25,747 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:23:25,747 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '您已输错密码2次，还剩余8次输入机会！', 'data': {}, 'time': '4.50541ms'}
2022-04-26 18:24:48,575 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:24:48,575 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:24:48,575 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:24:48,575 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 18:24:48,575 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 18:24:48,683 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:24:48,684 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '794746', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.50974ms'}
2022-04-26 18:24:48,684 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：794746
2022-04-26 18:24:48,684 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:24:48,684 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:24:48,684 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:24:48,684 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 18:24:48,684 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '794746', 'phone': '18276762767', 'password': '"PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw="'}
2022-04-26 18:24:48,753 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:24:48,753 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '您已输错密码1次，还剩余9次输入机会！', 'data': {}, 'time': '4.540125ms'}
2022-04-26 18:27:32,766 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:27:32,767 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:27:32,767 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:27:32,767 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-26 18:27:32,767 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-26 18:27:32,878 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:27:32,880 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '162279', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.95823ms'}
2022-04-26 18:27:32,880 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：162279
2022-04-26 18:27:32,880 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-26 18:27:32,881 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-26 18:27:32,881 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-26 18:27:32,881 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-26 18:27:32,881 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '162279', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-26 18:27:32,986 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-26 18:27:32,987 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTU3MzY1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUwOTY3ODUzfQ.ssJXKs10b0Aclu8JH-nPfryZzvSLhgm5hwcJNbn8sag'}, 'time': '16.214496ms'}
2022-04-27 09:18:46,211 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:18:46,223 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:18:46,223 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:18:46,225 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:18:46,226 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:18:46,575 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:18:46,575 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '063163', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.672159ms'}
2022-04-27 09:18:46,576 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：063163
2022-04-27 09:18:46,576 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:18:46,576 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:18:46,576 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:18:46,577 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:18:46,577 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '063163', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:18:46,673 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:18:46,673 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzEyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIxMzI2fQ.VfoyO6dAmvEtTV6vOg4tZJbKoCiEZgR1No9fFi5cavU'}, 'time': '13.956804ms'}
2022-04-27 09:21:33,193 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:21:33,193 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:21:33,193 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:21:33,195 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:21:33,195 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:21:33,273 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:21:33,273 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '960196', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.699729ms'}
2022-04-27 09:21:33,275 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：960196
2022-04-27 09:21:33,275 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:21:33,275 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:21:33,275 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:21:33,276 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:21:33,276 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '960196', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:21:33,416 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:21:33,416 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzI5MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIxNDkzfQ.94-YSjlYYj_pC7latolY7pWpa5ZRRQ5I2z-qmaT-_iI'}, 'time': '14.707149ms'}
2022-04-27 09:21:33,416 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:21:33,416 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzI5MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIxNDkzfQ.94-YSjlYYj_pC7latolY7pWpa5ZRRQ5I2z-qmaT-_iI']
2022-04-27 09:21:33,416 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzI5MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIxNDkzfQ.94-YSjlYYj_pC7latolY7pWpa5ZRRQ5I2z-qmaT-_iI,并设置为Data类实例化对象的属性和值。
2022-04-27 09:21:33,421 ARS INFO test_003_machineroom.py [51行]: =========== 登陆接口测试  ===============
2022-04-27 09:21:33,421 ARS INFO handle_replace.py [26行]: {'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:21:33,421 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:21:33,421 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:21:33,422 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:21:33,422 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:21:33,422 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:21:33,422 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:21:33,423 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:21:33,423 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:21:33,503 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:21:33,503 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.514µs'}
2022-04-27 09:21:33,504 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-27 09:21:33,504 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:21:33,505 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:21:33,505 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-27 09:21:33,506 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:21:33,506 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:21:33,506 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 09:21:34,224 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:21:34,224 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:21:34,236 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:21:34,238 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:21:34,238 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:21:34,238 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:21:34,238 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:21:34,248 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:21:34,249 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:21:34,249 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:21:34,249 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:21:34,338 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:21:34,339 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:21:34,339 ARS ERROR test_003_machineroom.py [80行]: 用例执行失败
2022-04-27 09:32:42,945 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:32:42,945 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:32:42,945 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:32:42,947 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:32:42,947 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:32:43,055 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:32:43,056 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '762173', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.788158ms'}
2022-04-27 09:32:43,059 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：762173
2022-04-27 09:32:43,059 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:32:43,059 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:32:43,059 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:32:43,062 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:32:43,062 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '762173', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:32:43,166 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:32:43,167 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzk2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMTYzfQ.VdRhZRf_6wxPavQ8WPlMZRAuYUyfIwzzXv1gHuzfXcU'}, 'time': '14.44852ms'}
2022-04-27 09:32:43,167 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:32:43,167 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzk2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMTYzfQ.VdRhZRf_6wxPavQ8WPlMZRAuYUyfIwzzXv1gHuzfXcU']
2022-04-27 09:32:43,167 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyNzk2MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMTYzfQ.VdRhZRf_6wxPavQ8WPlMZRAuYUyfIwzzXv1gHuzfXcU,并设置为Data类实例化对象的属性和值。
2022-04-27 09:32:43,172 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 09:32:43,172 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:32:43,174 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:32:43,174 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:32:43,174 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:32:43,174 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:32:43,174 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:32:43,174 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:32:43,174 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:32:43,174 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:32:43,240 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:32:43,240 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.416µs'}
2022-04-27 09:32:43,240 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-27 09:32:43,240 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:32:43,240 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:32:43,240 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-27 09:32:43,240 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:32:43,240 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:32:43,240 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 09:32:43,900 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:32:43,900 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:32:43,913 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:32:43,913 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:32:43,914 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:32:43,914 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:32:43,914 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:32:43,927 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:32:43,927 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:32:43,927 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:32:43,927 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:32:43,942 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:32:43,943 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:32:43,943 ARS ERROR test_003_machineroom.py [80行]: 用例执行失败
2022-04-27 09:33:52,334 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:33:52,335 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:33:52,335 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:33:52,335 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:33:52,335 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:33:52,404 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:33:52,406 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '658403', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.124743ms'}
2022-04-27 09:33:52,407 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：658403
2022-04-27 09:33:52,407 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:33:52,408 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:33:52,408 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:33:52,411 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:33:52,411 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '658403', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:33:52,511 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:33:52,512 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODAzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMjMyfQ.Ld5PKXVmuio-5vY4pKeWA7laImKuo5_V8_qkzd97tHw'}, 'time': '16.568641ms'}
2022-04-27 09:33:52,512 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:33:52,512 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODAzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMjMyfQ.Ld5PKXVmuio-5vY4pKeWA7laImKuo5_V8_qkzd97tHw']
2022-04-27 09:33:52,512 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODAzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMjMyfQ.Ld5PKXVmuio-5vY4pKeWA7laImKuo5_V8_qkzd97tHw,并设置为Data类实例化对象的属性和值。
2022-04-27 09:33:52,516 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 09:33:52,516 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:33:52,516 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:33:52,516 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:33:52,516 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:33:52,516 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:33:52,516 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:33:52,516 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:33:52,518 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:33:52,518 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:33:52,617 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:33:52,617 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.776µs'}
2022-04-27 09:33:52,618 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-27 09:33:52,618 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:33:52,618 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:33:52,618 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-27 09:33:52,618 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:33:52,618 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:33:52,618 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 09:33:53,251 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:33:53,251 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:33:53,263 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:33:53,263 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:33:53,263 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:33:53,263 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:33:53,263 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:33:53,276 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:33:53,276 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:33:53,276 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:33:53,276 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:33:53,292 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:33:53,294 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:33:53,294 ARS ERROR test_003_machineroom.py [80行]: 用例执行失败
2022-04-27 09:34:28,259 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:34:28,259 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:34:28,259 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:34:28,260 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:34:28,260 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:34:28,347 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:34:28,348 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '044200', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.98318ms'}
2022-04-27 09:34:28,348 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：044200
2022-04-27 09:34:28,350 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:34:28,350 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:34:28,350 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:34:28,351 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:34:28,351 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '044200', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:34:28,431 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:34:28,432 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODA2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMjY4fQ.DUXyNKWQlhNA8R3gWt24UKcedBCpfklUdcMXHHpvaPo'}, 'time': '14.226832ms'}
2022-04-27 09:34:28,432 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:34:28,433 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODA2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMjY4fQ.DUXyNKWQlhNA8R3gWt24UKcedBCpfklUdcMXHHpvaPo']
2022-04-27 09:34:28,433 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODA2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyMjY4fQ.DUXyNKWQlhNA8R3gWt24UKcedBCpfklUdcMXHHpvaPo,并设置为Data类实例化对象的属性和值。
2022-04-27 09:37:18,751 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:37:18,751 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:37:18,751 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:37:18,752 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:37:18,752 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:37:18,859 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:37:18,859 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '258648', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.669238ms'}
2022-04-27 09:37:18,862 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：258648
2022-04-27 09:37:18,863 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:37:18,863 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:37:18,863 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:37:18,865 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:37:18,865 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '258648', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:37:18,966 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:37:18,966 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNDM5fQ.Z3625Kg1HxfS9bYYCxJsm7FrC4VT2L36AZAoKkptlLI'}, 'time': '13.750134ms'}
2022-04-27 09:37:18,967 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:37:18,967 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNDM5fQ.Z3625Kg1HxfS9bYYCxJsm7FrC4VT2L36AZAoKkptlLI']
2022-04-27 09:37:18,967 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNDM5fQ.Z3625Kg1HxfS9bYYCxJsm7FrC4VT2L36AZAoKkptlLI,并设置为Data类实例化对象的属性和值。
2022-04-27 09:38:10,243 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:38:10,243 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:38:10,243 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:38:10,243 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:38:10,243 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:38:10,359 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:38:10,359 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '090103', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.090791ms'}
2022-04-27 09:38:10,359 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：090103
2022-04-27 09:38:10,360 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:38:10,360 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:38:10,360 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:38:10,360 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:38:10,360 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '090103', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:38:10,439 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:38:10,439 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODI5MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNDkwfQ.5xvm0a1YJoKom2wEiU2Ha-oFlpzu6gPLk7a-Fy0A0kw'}, 'time': '14.363492ms'}
2022-04-27 09:38:10,439 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:38:10,440 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODI5MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNDkwfQ.5xvm0a1YJoKom2wEiU2Ha-oFlpzu6gPLk7a-Fy0A0kw']
2022-04-27 09:38:10,440 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODI5MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNDkwfQ.5xvm0a1YJoKom2wEiU2Ha-oFlpzu6gPLk7a-Fy0A0kw,并设置为Data类实例化对象的属性和值。
2022-04-27 09:39:19,273 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:39:19,273 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:39:19,273 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:39:19,273 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:39:19,273 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:39:19,390 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:39:19,390 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '341014', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.657701ms'}
2022-04-27 09:39:19,391 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：341014
2022-04-27 09:39:19,391 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:39:19,391 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:39:19,391 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:39:19,391 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:39:19,391 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '341014', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:39:19,473 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:39:19,473 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTU5fQ.NzQ7JQFpdJcY6mb2bG5DGGlAakcth4IbKP2j9E5p_cY'}, 'time': '14.246111ms'}
2022-04-27 09:39:19,473 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:39:19,473 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTU5fQ.NzQ7JQFpdJcY6mb2bG5DGGlAakcth4IbKP2j9E5p_cY']
2022-04-27 09:39:19,473 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTU5fQ.NzQ7JQFpdJcY6mb2bG5DGGlAakcth4IbKP2j9E5p_cY,并设置为Data类实例化对象的属性和值。
2022-04-27 09:39:46,884 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:39:46,884 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:39:46,884 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:39:46,886 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:39:46,886 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:39:46,947 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:39:46,947 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '532903', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.540156ms'}
2022-04-27 09:39:46,947 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：532903
2022-04-27 09:39:46,947 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:39:46,947 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:39:46,947 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:39:46,948 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:39:46,948 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '532903', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:39:47,028 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:39:47,029 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM4NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTg3fQ.pjS0g5n-Lta6tlOS_msFB2KqZ1r64gP8Fe3CtoT8S_A'}, 'time': '13.685021ms'}
2022-04-27 09:39:47,029 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:39:47,030 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM4NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTg3fQ.pjS0g5n-Lta6tlOS_msFB2KqZ1r64gP8Fe3CtoT8S_A']
2022-04-27 09:39:47,030 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM4NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTg3fQ.pjS0g5n-Lta6tlOS_msFB2KqZ1r64gP8Fe3CtoT8S_A,并设置为Data类实例化对象的属性和值。
2022-04-27 09:39:47,030 ARS INFO handle_extract.py [34行]: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODM4NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNTg3fQ.pjS0g5n-Lta6tlOS_msFB2KqZ1r64gP8Fe3CtoT8S_A
2022-04-27 09:40:44,839 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:40:44,839 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:40:44,839 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:40:44,840 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:40:44,840 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:40:44,926 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:40:44,927 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '682916', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.602709ms'}
2022-04-27 09:40:44,927 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：682916
2022-04-27 09:40:44,927 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:40:44,927 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:40:44,927 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:40:44,927 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:40:44,927 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '682916', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:40:44,998 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:40:44,998 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODQ0NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNjQ1fQ.9JhQXhSaV0185youDy-_6HUEj_ydp_XJf3qBcDSu0bo'}, 'time': '14.658856ms'}
2022-04-27 09:40:44,999 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:40:44,999 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODQ0NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNjQ1fQ.9JhQXhSaV0185youDy-_6HUEj_ydp_XJf3qBcDSu0bo']
2022-04-27 09:40:45,000 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODQ0NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNjQ1fQ.9JhQXhSaV0185youDy-_6HUEj_ydp_XJf3qBcDSu0bo,并设置为Data类实例化对象的属性和值。
2022-04-27 09:40:45,004 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 09:40:45,006 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:40:45,006 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:40:45,006 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:40:45,006 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:40:45,006 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:40:45,006 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:40:45,006 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:40:45,008 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:40:45,008 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:40:45,096 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:40:45,096 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.75µs'}
2022-04-27 09:40:45,096 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-27 09:40:45,097 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:40:45,097 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:40:45,097 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-27 09:40:45,097 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:40:45,097 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:40:45,097 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 09:40:45,766 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:40:45,766 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:40:45,777 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:40:45,779 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:40:45,779 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:40:45,779 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:40:45,779 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:40:45,790 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:40:45,790 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:40:45,790 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:40:45,790 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:40:45,801 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:40:45,801 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:40:45,801 ARS ERROR test_003_machineroom.py [80行]: 用例执行失败
2022-04-27 09:41:45,347 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:41:45,348 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:41:45,348 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:41:45,348 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:41:45,348 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:41:45,404 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:41:45,404 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '219607', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.608115ms'}
2022-04-27 09:41:45,404 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：219607
2022-04-27 09:41:45,406 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:41:45,406 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:41:45,406 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:41:45,406 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:41:45,406 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '219607', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:41:45,476 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:41:45,476 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODUwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzA1fQ.S6OyJvkpik0Y_rPYmUP2-rbPS2iGIiGiMzRXptw8qBA'}, 'time': '13.659478ms'}
2022-04-27 09:41:45,476 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:41:45,476 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODUwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzA1fQ.S6OyJvkpik0Y_rPYmUP2-rbPS2iGIiGiMzRXptw8qBA']
2022-04-27 09:41:45,478 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODUwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzA1fQ.S6OyJvkpik0Y_rPYmUP2-rbPS2iGIiGiMzRXptw8qBA,并设置为Data类实例化对象的属性和值。
2022-04-27 09:41:45,478 ARS INFO test_003_machineroom.py [43行]: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODUwNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzA1fQ.S6OyJvkpik0Y_rPYmUP2-rbPS2iGIiGiMzRXptw8qBA
2022-04-27 09:41:45,483 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 09:41:45,483 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:41:45,483 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:41:45,483 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:41:45,484 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:41:45,484 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:41:45,484 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:41:45,484 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:41:45,486 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:41:45,486 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:41:45,553 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:41:45,553 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '4.274µs'}
2022-04-27 09:41:45,555 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-27 09:41:45,555 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:41:45,555 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:41:45,555 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-27 09:41:45,555 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:41:45,555 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:41:45,555 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 09:41:46,196 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:41:46,197 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:41:46,210 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:41:46,210 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:41:46,210 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:41:46,211 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:41:46,211 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:41:46,224 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:41:46,225 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:41:46,225 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:41:46,225 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:41:46,230 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:41:46,232 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:41:46,232 ARS ERROR test_003_machineroom.py [80行]: 用例执行失败
2022-04-27 09:42:55,150 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:42:55,150 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:42:55,151 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:42:55,151 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:42:55,151 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:42:55,249 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:42:55,249 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '052590', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.56144ms'}
2022-04-27 09:42:55,251 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：052590
2022-04-27 09:42:55,251 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:42:55,251 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:42:55,251 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:42:55,252 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:42:55,252 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '052590', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:42:55,325 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:42:55,326 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODU3NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzc1fQ.NT8JivynTJVfU5h49PsMQs1nphQwTIBc8-0rx0r8LVE'}, 'time': '13.311402ms'}
2022-04-27 09:42:55,326 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:42:55,326 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODU3NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzc1fQ.NT8JivynTJVfU5h49PsMQs1nphQwTIBc8-0rx0r8LVE']
2022-04-27 09:42:55,326 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODU3NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzc1fQ.NT8JivynTJVfU5h49PsMQs1nphQwTIBc8-0rx0r8LVE,并设置为Data类实例化对象的属性和值。
2022-04-27 09:43:12,606 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:43:12,607 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:43:12,607 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:43:12,607 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:43:12,607 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:43:12,719 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:43:12,720 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '576399', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.606144ms'}
2022-04-27 09:43:12,721 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：576399
2022-04-27 09:43:12,721 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:43:12,721 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:43:12,723 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:43:12,723 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:43:12,724 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '576399', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:43:12,816 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:43:12,816 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzkyfQ.wYpRrh9Yq5rShZJwv-pcHCYoVLQ6VOVye--580ULP_4'}, 'time': '13.414645ms'}
2022-04-27 09:43:12,816 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:43:12,816 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzkyfQ.wYpRrh9Yq5rShZJwv-pcHCYoVLQ6VOVye--580ULP_4']
2022-04-27 09:43:12,817 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyNzkyfQ.wYpRrh9Yq5rShZJwv-pcHCYoVLQ6VOVye--580ULP_4,并设置为Data类实例化对象的属性和值。
2022-04-27 09:45:22,343 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:45:22,343 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:45:22,343 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:45:22,344 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:45:22,344 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:45:22,414 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:45:22,414 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '838964', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.538523ms'}
2022-04-27 09:45:22,415 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：838964
2022-04-27 09:45:22,416 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:45:22,416 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:45:22,417 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:45:22,420 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:45:22,420 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '838964', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:45:22,500 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:45:22,500 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODcyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyOTIyfQ.ruJQLHhaCT4A_M-AQJUif7_Aw4T4gvKlNDjKupzfL2A'}, 'time': '13.59145ms'}
2022-04-27 09:45:22,502 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:45:22,502 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODcyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyOTIyfQ.ruJQLHhaCT4A_M-AQJUif7_Aw4T4gvKlNDjKupzfL2A']
2022-04-27 09:45:22,503 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODcyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyOTIyfQ.ruJQLHhaCT4A_M-AQJUif7_Aw4T4gvKlNDjKupzfL2A,并设置为Data类实例化对象的属性和值。
2022-04-27 09:45:22,503 ARS INFO test_003_machineroom.py [43行]: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODcyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyOTIyfQ.ruJQLHhaCT4A_M-AQJUif7_Aw4T4gvKlNDjKupzfL2A
2022-04-27 09:45:22,511 ARS INFO test_003_machineroom.py [52行]: =========== 新建机房接口测试  ===============
2022-04-27 09:45:22,511 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:45:22,512 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:45:22,512 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:45:22,513 ARS INFO test_003_machineroom.py [58行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:45:22,513 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:45:22,513 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:45:22,513 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODcyMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIyOTIyfQ.ruJQLHhaCT4A_M-AQJUif7_Aw4T4gvKlNDjKupzfL2A'}
2022-04-27 09:45:22,516 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:45:22,516 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:45:22,575 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:45:22,575 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.571902ms'}
2022-04-27 09:45:22,575 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 09:45:22,575 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:45:22,575 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 09:45:22,575 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 09:45:22,576 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:45:22,576 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 09:45:22,576 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 09:45:23,244 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:45:23,244 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:45:23,257 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:45:23,257 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:45:23,257 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:45:23,257 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:45:23,259 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:45:23,270 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:45:23,270 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:45:23,271 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:45:23,271 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:45:23,283 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:45:23,283 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:47:18,196 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:47:18,197 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:47:18,197 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:47:18,197 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:47:18,197 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:47:18,264 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:47:18,264 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '039757', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.507184ms'}
2022-04-27 09:47:18,266 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：039757
2022-04-27 09:47:18,266 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:47:18,266 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:47:18,266 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:47:18,269 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:47:18,269 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '039757', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:47:18,368 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:47:18,368 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODgzOCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzMDM4fQ.YsI8mmbSS6pGTxGIIS-7BZxhjt3Cj9DzeYZDVPyyq2w'}, 'time': '14.311012ms'}
2022-04-27 09:47:18,368 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:47:18,369 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODgzOCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzMDM4fQ.YsI8mmbSS6pGTxGIIS-7BZxhjt3Cj9DzeYZDVPyyq2w']
2022-04-27 09:47:18,369 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODgzOCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzMDM4fQ.YsI8mmbSS6pGTxGIIS-7BZxhjt3Cj9DzeYZDVPyyq2w,并设置为Data类实例化对象的属性和值。
2022-04-27 09:47:18,369 ARS INFO test_003_machineroom.py [43行]: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODgzOCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzMDM4fQ.YsI8mmbSS6pGTxGIIS-7BZxhjt3Cj9DzeYZDVPyyq2w
2022-04-27 09:47:18,375 ARS INFO test_003_machineroom.py [52行]: =========== 新建机房接口测试  ===============
2022-04-27 09:47:18,375 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:47:18,375 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:47:18,375 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:47:18,375 ARS INFO test_003_machineroom.py [58行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:47:18,375 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:47:18,376 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:47:18,376 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyODgzOCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzMDM4fQ.YsI8mmbSS6pGTxGIIS-7BZxhjt3Cj9DzeYZDVPyyq2w'}
2022-04-27 09:47:18,376 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:47:18,376 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:47:18,443 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:47:18,443 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.554693ms'}
2022-04-27 09:47:18,444 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 09:47:18,444 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:47:18,444 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 09:47:18,444 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 09:47:18,444 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:47:18,444 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 09:47:18,444 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 09:47:19,105 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:47:19,105 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:47:19,118 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:47:19,118 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:47:19,118 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:47:19,118 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:47:19,118 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:47:19,131 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:47:19,131 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:47:19,131 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:47:19,131 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:47:19,137 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:47:19,137 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:54:41,881 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:54:41,883 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:54:41,883 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:54:41,884 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:54:41,884 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:54:42,008 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:54:42,008 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '944890', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.16432ms'}
2022-04-27 09:54:42,009 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：944890
2022-04-27 09:54:42,009 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:54:42,009 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:54:42,009 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:54:42,011 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:54:42,011 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '944890', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:54:42,088 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:54:42,089 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNDgyfQ.MDMv0K3lMpbwnue0VUI9CzhHlDaW0GzhFW7RAWboFDk'}, 'time': '14.458493ms'}
2022-04-27 09:54:42,089 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:54:42,089 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNDgyfQ.MDMv0K3lMpbwnue0VUI9CzhHlDaW0GzhFW7RAWboFDk']
2022-04-27 09:54:42,089 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNDgyfQ.MDMv0K3lMpbwnue0VUI9CzhHlDaW0GzhFW7RAWboFDk,并设置为Data类实例化对象的属性和值。
2022-04-27 09:54:42,094 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 09:54:42,094 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:54:42,094 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:54:42,094 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:54:42,094 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:54:42,094 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:54:42,094 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:54:42,094 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:54:42,095 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:54:42,095 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:54:42,184 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:54:42,184 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 199, 'msg': '请求头中auth格式有误', 'data': None, 'time': '3.996µs'}
2022-04-27 09:54:42,184 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：199
2022-04-27 09:54:42,184 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:54:42,184 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:54:42,185 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求头中auth格式有误
2022-04-27 09:54:42,185 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:54:42,185 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 09:54:42,185 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 09:54:42,831 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:54:42,832 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:54:42,845 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:54:42,846 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:54:42,846 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:54:42,846 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:54:42,846 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:54:42,857 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:54:42,857 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:54:42,858 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:54:42,858 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:54:42,868 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:54:42,868 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 09:54:42,868 ARS ERROR test_003_machineroom.py [80行]: 用例执行失败
2022-04-27 09:55:51,353 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:55:51,353 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:55:51,353 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:55:51,355 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 09:55:51,355 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 09:55:51,480 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:55:51,481 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '182772', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.992991ms'}
2022-04-27 09:55:51,483 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：182772
2022-04-27 09:55:51,483 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:55:51,483 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:55:51,483 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 09:55:51,486 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 09:55:51,486 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '182772', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 09:55:51,611 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:55:51,612 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTM1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNTUxfQ.TxoQ4EA_nGW-0ulegqnmsoHs4hfAqhJjsca4xi1SO5A'}, 'time': '13.861998ms'}
2022-04-27 09:55:51,612 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 09:55:51,612 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTM1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNTUxfQ.TxoQ4EA_nGW-0ulegqnmsoHs4hfAqhJjsca4xi1SO5A']
2022-04-27 09:55:51,612 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTM1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNTUxfQ.TxoQ4EA_nGW-0ulegqnmsoHs4hfAqhJjsca4xi1SO5A,并设置为Data类实例化对象的属性和值。
2022-04-27 09:55:51,617 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 09:55:51,617 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 09:55:51,617 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 09:55:51,618 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 09:55:51,618 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:55:51,618 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 09:55:51,618 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 09:55:51,618 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYyOTM1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDIzNTUxfQ.TxoQ4EA_nGW-0ulegqnmsoHs4hfAqhJjsca4xi1SO5A'}
2022-04-27 09:55:51,619 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 09:55:51,619 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 09:55:51,700 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 09:55:51,700 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.494014ms'}
2022-04-27 09:55:51,700 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 09:55:51,702 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 09:55:51,702 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 09:55:51,702 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 09:55:51,702 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 09:55:51,702 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 09:55:51,702 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 09:55:52,345 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:55:52,347 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 09:55:52,358 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 09:55:52,358 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 09:55:52,358 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:55:52,358 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 09:55:52,358 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 09:55:52,369 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 09:55:52,369 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 09:55:52,371 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 09:55:52,371 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 09:55:52,407 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 09:55:52,407 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 11:40:53,294 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 11:40:53,302 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 11:40:53,302 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 11:40:53,303 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 11:40:53,303 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 11:40:53,717 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 11:40:53,717 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '389375', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '3.056998ms'}
2022-04-27 11:40:53,718 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：389375
2022-04-27 11:40:53,718 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 11:40:53,718 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 11:40:53,718 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 11:40:53,719 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 11:40:53,719 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '389375', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 11:40:53,799 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 11:40:53,799 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNTY1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDI5ODUzfQ.ZWFAJjv_eAgms7THffYGk_-2qkkwqFvVnG96NFgiZiM'}, 'time': '14.011782ms'}
2022-04-27 11:40:53,799 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 11:40:53,799 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNTY1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDI5ODUzfQ.ZWFAJjv_eAgms7THffYGk_-2qkkwqFvVnG96NFgiZiM']
2022-04-27 11:40:53,799 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNTY1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDI5ODUzfQ.ZWFAJjv_eAgms7THffYGk_-2qkkwqFvVnG96NFgiZiM,并设置为Data类实例化对象的属性和值。
2022-04-27 11:40:53,802 ARS INFO test_003_machineroom.py [51行]: =========== 新建机房接口测试  ===============
2022-04-27 11:40:53,802 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 11:40:53,802 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 11:40:53,802 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 11:40:53,802 ARS INFO test_003_machineroom.py [57行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 11:40:53,802 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 11:40:53,802 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 11:40:53,802 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNTY1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDI5ODUzfQ.ZWFAJjv_eAgms7THffYGk_-2qkkwqFvVnG96NFgiZiM'}
2022-04-27 11:40:53,803 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 11:40:53,804 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 11:40:53,868 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 11:40:53,868 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.53201ms'}
2022-04-27 11:40:53,868 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 11:40:53,868 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 11:40:53,868 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 11:40:53,868 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 11:40:53,868 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 11:40:53,868 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 11:40:53,868 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 11:40:54,699 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 11:40:54,699 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 11:40:54,712 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 11:40:54,712 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 11:40:54,712 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 11:40:54,712 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 11:40:54,713 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 11:40:54,727 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 11:40:54,727 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 11:40:54,727 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 11:40:54,727 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 11:40:54,799 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 11:40:54,799 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 11:51:22,185 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 11:51:22,185 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 11:51:22,185 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 11:51:22,187 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 11:51:22,187 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 11:51:22,308 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 11:51:22,308 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '974237', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.619146ms'}
2022-04-27 11:51:22,309 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：974237
2022-04-27 11:51:22,309 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 11:51:22,309 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 11:51:22,309 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 11:51:22,310 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 11:51:22,310 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '974237', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 11:51:22,391 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 11:51:22,391 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNjI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDMwNDgyfQ.OChqgtH_esr5btLh9CvAg-2olGKOWArgBaBS7yI9mF4'}, 'time': '14.076083ms'}
2022-04-27 11:51:22,391 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 11:51:22,391 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNjI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDMwNDgyfQ.OChqgtH_esr5btLh9CvAg-2olGKOWArgBaBS7yI9mF4']
2022-04-27 11:51:22,392 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNjI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDMwNDgyfQ.OChqgtH_esr5btLh9CvAg-2olGKOWArgBaBS7yI9mF4,并设置为Data类实例化对象的属性和值。
2022-04-27 11:51:22,394 ARS INFO test_003_machineroom.py [31行]: =========== 新建机房接口测试  ===============
2022-04-27 11:51:22,394 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 11:51:22,394 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 11:51:22,394 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 11:51:22,394 ARS INFO test_003_machineroom.py [37行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 11:51:22,394 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 11:51:22,394 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 11:51:22,394 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTYzNjI4MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDMwNDgyfQ.OChqgtH_esr5btLh9CvAg-2olGKOWArgBaBS7yI9mF4'}
2022-04-27 11:51:22,395 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 11:51:22,395 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 11:51:22,486 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 11:51:22,487 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.482749ms'}
2022-04-27 11:51:22,487 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 11:51:22,487 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 11:51:22,487 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 11:51:22,487 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 11:51:22,487 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 11:51:22,487 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 11:51:22,488 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 11:51:23,150 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 11:51:23,150 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 11:51:23,163 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 11:51:23,163 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 11:51:23,164 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 11:51:23,164 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 11:51:23,164 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 11:51:23,182 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 11:51:23,182 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 11:51:23,183 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 11:51:23,183 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 11:51:23,185 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 11:51:23,185 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 15:06:28,493 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:06:28,499 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:06:28,499 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:06:28,500 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:06:28,500 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:06:28,872 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:06:28,872 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '505075', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.697168ms'}
2022-04-27 15:06:28,873 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：505075
2022-04-27 15:06:28,873 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:06:28,873 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:06:28,873 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:06:28,875 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:06:28,875 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '505075', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:06:28,956 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:06:28,956 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0Nzk4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMTg5fQ.qvvvr0x-CK5QayjPLjOcueiZCNcgXMC0zfn1sLzAXJ0'}, 'time': '14.354572ms'}
2022-04-27 15:06:28,956 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:06:28,956 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0Nzk4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMTg5fQ.qvvvr0x-CK5QayjPLjOcueiZCNcgXMC0zfn1sLzAXJ0']
2022-04-27 15:06:28,956 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0Nzk4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMTg5fQ.qvvvr0x-CK5QayjPLjOcueiZCNcgXMC0zfn1sLzAXJ0,并设置为Data类实例化对象的属性和值。
2022-04-27 15:06:28,960 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:06:28,960 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:06:28,960 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:06:28,960 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:06:29,728 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:06:29,728 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:06:29,728 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:06:29,729 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:06:29,729 ARS INFO test_role.py [34行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:06:29,729 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:06:29,729 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:06:29,729 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0Nzk4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMTg5fQ.qvvvr0x-CK5QayjPLjOcueiZCNcgXMC0zfn1sLzAXJ0'}
2022-04-27 15:06:29,729 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:06:29,729 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:06:29,820 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:06:29,822 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.170291ms'}
2022-04-27 15:06:29,822 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:06:29,822 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:06:29,822 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:06:29,822 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:06:29,822 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:06:29,822 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:06:29,822 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:09:15,014 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:09:15,015 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:09:15,015 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:09:15,015 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:09:15,015 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:09:15,105 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:09:15,105 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '647504', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.887263ms'}
2022-04-27 15:09:15,107 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：647504
2022-04-27 15:09:15,107 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:09:15,107 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:09:15,107 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:09:15,107 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:09:15,108 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '647504', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:09:15,188 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:09:15,188 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODE1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMzU1fQ.IBdJ3vKN9nefSg-5PW8Q9_m00qFzOkA9lHlGa4w2YhE'}, 'time': '14.67638ms'}
2022-04-27 15:09:15,190 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:09:15,190 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODE1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMzU1fQ.IBdJ3vKN9nefSg-5PW8Q9_m00qFzOkA9lHlGa4w2YhE']
2022-04-27 15:09:15,190 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODE1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMzU1fQ.IBdJ3vKN9nefSg-5PW8Q9_m00qFzOkA9lHlGa4w2YhE,并设置为Data类实例化对象的属性和值。
2022-04-27 15:09:15,193 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:09:15,193 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:09:15,195 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:09:15,195 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:09:15,195 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:09:15,195 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:09:15,196 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODE1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMzU1fQ.IBdJ3vKN9nefSg-5PW8Q9_m00qFzOkA9lHlGa4w2YhE'}
2022-04-27 15:09:15,197 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:09:15,197 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:09:15,294 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:09:15,294 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.30804ms'}
2022-04-27 15:09:15,294 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:09:15,295 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:09:15,295 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:09:15,295 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:09:15,295 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:09:15,295 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:09:15,295 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:09:15,295 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:09:15,296 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:09:15,296 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:09:15,297 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:09:15,299 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:09:15,299 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:09:15,299 ARS INFO handle_replace.py [43行]: 将标识符为：client_id，替换为：1
2022-04-27 15:09:15,299 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:09:15,299 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:09:15,299 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:09:15,299 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:09:15,299 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODE1NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyMzU1fQ.IBdJ3vKN9nefSg-5PW8Q9_m00qFzOkA9lHlGa4w2YhE'}
2022-04-27 15:09:15,299 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:09:15,299 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:09:15,388 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:09:15,388 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.282755ms'}
2022-04-27 15:09:15,388 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:09:15,388 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:09:15,388 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:09:15,388 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:09:15,388 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:09:15,388 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:09:15,388 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:17:19,196 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:17:19,196 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:17:19,196 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:17:19,197 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:17:19,197 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:17:19,388 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:17:19,388 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '821097', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.017682ms'}
2022-04-27 15:17:19,388 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：821097
2022-04-27 15:17:19,388 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:17:19,388 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:17:19,388 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:17:19,390 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:17:19,390 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '821097', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:17:19,481 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:17:19,481 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODYzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyODM5fQ.ho3cHdfPCcf7yvVq71c6gi5u-Y-9zvFBho8TDnZ9oGU'}, 'time': '14.27804ms'}
2022-04-27 15:17:19,481 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:17:19,481 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODYzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyODM5fQ.ho3cHdfPCcf7yvVq71c6gi5u-Y-9zvFBho8TDnZ9oGU']
2022-04-27 15:17:19,481 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODYzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyODM5fQ.ho3cHdfPCcf7yvVq71c6gi5u-Y-9zvFBho8TDnZ9oGU,并设置为Data类实例化对象的属性和值。
2022-04-27 15:17:19,483 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:17:19,483 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:17:19,484 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:17:19,484 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:17:19,484 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:17:19,484 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:17:19,484 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODYzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyODM5fQ.ho3cHdfPCcf7yvVq71c6gi5u-Y-9zvFBho8TDnZ9oGU'}
2022-04-27 15:17:19,486 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:17:19,486 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:17:19,536 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:17:19,536 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.227154ms'}
2022-04-27 15:17:19,537 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:17:19,537 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:17:19,537 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:17:19,537 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:17:19,537 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:17:19,537 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:17:19,537 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:17:19,537 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:17:19,537 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:17:19,537 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:17:19,540 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:17:19,540 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:17:19,540 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:17:19,540 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:17:19,540 ARS INFO handle_replace.py [45行]: {'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:17:19,540 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:17:19,540 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:17:19,540 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:17:19,540 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:17:19,542 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODYzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQyODM5fQ.ho3cHdfPCcf7yvVq71c6gi5u-Y-9zvFBho8TDnZ9oGU'}
2022-04-27 15:17:19,542 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:17:19,542 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:17:19,646 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:17:19,646 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.287996ms'}
2022-04-27 15:17:19,647 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:17:19,647 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:17:19,647 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:17:19,647 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:17:19,647 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:17:19,647 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:17:19,647 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:21:35,057 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:21:35,057 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:21:35,057 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:21:35,059 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:21:35,059 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:21:35,182 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:21:35,183 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '296241', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.816788ms'}
2022-04-27 15:21:35,183 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：296241
2022-04-27 15:21:35,184 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:21:35,184 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:21:35,184 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:21:35,184 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:21:35,184 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '296241', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:21:35,282 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:21:35,282 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODg5NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzMDk1fQ.zqFtKnQI_tWWNAKGzCatvE9_Gglwin3L4_1uMQ7qSrw'}, 'time': '14.048203ms'}
2022-04-27 15:21:35,282 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:21:35,282 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODg5NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzMDk1fQ.zqFtKnQI_tWWNAKGzCatvE9_Gglwin3L4_1uMQ7qSrw']
2022-04-27 15:21:35,283 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODg5NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzMDk1fQ.zqFtKnQI_tWWNAKGzCatvE9_Gglwin3L4_1uMQ7qSrw,并设置为Data类实例化对象的属性和值。
2022-04-27 15:21:35,288 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:21:35,288 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:21:35,288 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:21:35,288 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:21:35,288 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:21:35,288 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:21:35,288 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODg5NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzMDk1fQ.zqFtKnQI_tWWNAKGzCatvE9_Gglwin3L4_1uMQ7qSrw'}
2022-04-27 15:21:35,289 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:21:35,289 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:21:35,343 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:21:35,344 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.310538ms'}
2022-04-27 15:21:35,344 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:21:35,344 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:21:35,344 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:21:35,344 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:21:35,344 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:21:35,345 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:21:35,345 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:21:35,345 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:21:35,345 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:21:35,345 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:21:35,347 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:21:35,347 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:21:35,347 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:21:35,348 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:21:35,348 ARS INFO handle_replace.py [45行]: {'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:21:35,348 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:21:35,348 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:21:35,348 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:21:35,348 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:21:35,348 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0ODg5NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzMDk1fQ.zqFtKnQI_tWWNAKGzCatvE9_Gglwin3L4_1uMQ7qSrw'}
2022-04-27 15:21:35,348 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:21:35,348 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '#client_id#', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:21:35,424 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:21:35,425 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '1.813261ms'}
2022-04-27 15:21:35,425 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:21:35,425 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:21:35,425 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:21:35,425 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:21:35,425 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:21:35,425 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:21:35,425 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:30:51,305 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:30:51,307 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:30:51,307 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:30:51,308 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:30:51,308 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:30:51,399 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:30:51,399 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '467775', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.784269ms'}
2022-04-27 15:30:51,400 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：467775
2022-04-27 15:30:51,400 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:30:51,400 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:30:51,400 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:30:51,401 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:30:51,401 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '467775', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:30:51,480 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:30:51,480 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjUxfQ.MlNqtqXJG84Ag2zbRSDQE28Jb0JoL4SQdj9slBDklXI'}, 'time': '13.59745ms'}
2022-04-27 15:30:51,480 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:30:51,480 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjUxfQ.MlNqtqXJG84Ag2zbRSDQE28Jb0JoL4SQdj9slBDklXI']
2022-04-27 15:30:51,480 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjUxfQ.MlNqtqXJG84Ag2zbRSDQE28Jb0JoL4SQdj9slBDklXI,并设置为Data类实例化对象的属性和值。
2022-04-27 15:30:51,484 ARS INFO test_003_machineroom.py [29行]: =========== 新建机房接口测试  ===============
2022-04-27 15:30:51,484 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 15:30:51,484 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:30:51,484 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:30:51,484 ARS INFO test_003_machineroom.py [35行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 15:30:51,486 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:30:51,486 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:30:51,486 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjUxfQ.MlNqtqXJG84Ag2zbRSDQE28Jb0JoL4SQdj9slBDklXI'}
2022-04-27 15:30:51,486 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 15:30:51,486 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 15:30:51,571 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:30:51,572 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.577557ms'}
2022-04-27 15:30:51,572 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:30:51,572 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 15:30:51,572 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:30:51,572 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 15:30:51,572 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 15:30:51,572 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:30:51,572 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:30:52,340 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 15:30:52,342 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 15:30:52,355 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 15:30:52,355 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 15:30:52,355 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 15:30:52,355 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 15:30:52,355 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 15:30:52,368 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 15:30:52,368 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 15:30:52,368 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 15:30:52,368 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 15:30:52,444 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 15:30:52,444 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 15:31:07,903 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:31:07,903 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:31:07,903 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:31:07,903 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:31:07,904 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:31:07,966 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:31:07,966 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '335414', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.345765ms'}
2022-04-27 15:31:07,967 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：335414
2022-04-27 15:31:07,967 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:31:07,967 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:31:07,967 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:31:07,967 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:31:07,967 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '335414', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:31:08,049 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:31:08,049 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjY4fQ.rNQhZJA-t40Cij6ixYmJ98pH8hRMKDoZP3AyXlhgCK4'}, 'time': '14.839022ms'}
2022-04-27 15:31:08,049 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:31:08,049 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjY4fQ.rNQhZJA-t40Cij6ixYmJ98pH8hRMKDoZP3AyXlhgCK4']
2022-04-27 15:31:08,049 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjY4fQ.rNQhZJA-t40Cij6ixYmJ98pH8hRMKDoZP3AyXlhgCK4,并设置为Data类实例化对象的属性和值。
2022-04-27 15:31:08,055 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:31:08,055 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:31:08,055 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:31:08,055 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:31:08,055 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:31:08,055 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:31:08,056 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjY4fQ.rNQhZJA-t40Cij6ixYmJ98pH8hRMKDoZP3AyXlhgCK4'}
2022-04-27 15:31:08,056 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:31:08,057 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:31:08,126 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:31:08,126 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '1.921138ms'}
2022-04-27 15:31:08,126 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:31:08,126 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:31:08,126 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:31:08,126 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:31:08,126 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:31:08,126 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:31:08,126 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:31:08,127 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:31:08,127 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:31:08,127 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:31:08,128 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:31:08,128 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:31:08,128 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:31:08,129 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:31:08,129 ARS INFO handle_replace.py [45行]: {'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:31:08,129 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:31:08,129 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:31:08,129 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:31:08,129 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:31:08,129 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTQ2OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQzNjY4fQ.rNQhZJA-t40Cij6ixYmJ98pH8hRMKDoZP3AyXlhgCK4'}
2022-04-27 15:31:08,131 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:31:08,131 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:31:08,215 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:31:08,216 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.056203ms'}
2022-04-27 15:31:08,216 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:31:08,216 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:31:08,216 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:31:08,216 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:31:08,216 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:31:08,216 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:31:08,216 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:38:31,536 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:38:31,536 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:38:31,536 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:38:31,536 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:38:31,536 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:38:31,625 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:38:31,625 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '903796', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.848103ms'}
2022-04-27 15:38:31,627 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：903796
2022-04-27 15:38:31,627 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:38:31,627 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:38:31,627 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:38:31,628 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:38:31,628 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '903796', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:38:31,702 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:38:31,702 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTkxMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTExfQ.5GWsACzZZ49_Z-vl3wWyHvHwIFLqzonFdCic2eJlDrY'}, 'time': '14.534426ms'}
2022-04-27 15:38:31,702 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:38:31,702 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTkxMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTExfQ.5GWsACzZZ49_Z-vl3wWyHvHwIFLqzonFdCic2eJlDrY']
2022-04-27 15:38:31,703 ARS INFO handle_extract.py [29行]: <class 'list'>
2022-04-27 15:38:31,703 ARS INFO handle_extract.py [34行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTkxMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTExfQ.5GWsACzZZ49_Z-vl3wWyHvHwIFLqzonFdCic2eJlDrY,并设置为Data类实例化对象的属性和值。
2022-04-27 15:38:31,704 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:38:31,704 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:38:31,704 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:38:31,704 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:38:31,704 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:38:31,704 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:38:31,704 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTkxMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTExfQ.5GWsACzZZ49_Z-vl3wWyHvHwIFLqzonFdCic2eJlDrY'}
2022-04-27 15:38:31,705 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:38:31,705 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:38:31,792 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:38:31,792 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.128237ms'}
2022-04-27 15:38:31,792 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:38:31,792 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:38:31,792 ARS INFO handle_extract.py [29行]: <class 'list'>
2022-04-27 15:38:31,792 ARS INFO handle_extract.py [34行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:38:31,792 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:38:31,792 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:38:31,792 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:38:31,792 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:38:31,792 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:38:31,792 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:38:31,792 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:38:31,796 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:38:31,796 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:38:31,796 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:38:31,796 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:38:31,796 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:38:31,796 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:38:31,796 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:38:31,796 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:38:31,798 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTkxMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTExfQ.5GWsACzZZ49_Z-vl3wWyHvHwIFLqzonFdCic2eJlDrY'}
2022-04-27 15:38:31,798 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:38:31,798 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:38:31,875 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:38:31,875 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.143587ms'}
2022-04-27 15:38:31,875 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:38:31,875 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:38:31,875 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:38:31,876 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:38:31,876 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:38:31,876 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:38:31,876 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:39:29,918 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:39:29,918 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:39:29,918 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:39:29,918 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:39:29,919 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:39:29,977 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:39:29,977 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '308190', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.648379ms'}
2022-04-27 15:39:29,977 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：308190
2022-04-27 15:39:29,979 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:39:29,979 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:39:29,979 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:39:29,979 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:39:29,979 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '308190', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:39:30,043 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:39:30,043 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTk3MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTcwfQ.e3yLIdJVpT-Xgb-wsuA17SWHKU7VTNSeEDcQWW80E3E'}, 'time': '14.827842ms'}
2022-04-27 15:39:30,043 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:39:30,043 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTk3MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTcwfQ.e3yLIdJVpT-Xgb-wsuA17SWHKU7VTNSeEDcQWW80E3E']
2022-04-27 15:39:30,043 ARS INFO handle_extract.py [29行]: <class 'str'>
2022-04-27 15:39:30,043 ARS INFO handle_extract.py [34行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTk3MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTcwfQ.e3yLIdJVpT-Xgb-wsuA17SWHKU7VTNSeEDcQWW80E3E,并设置为Data类实例化对象的属性和值。
2022-04-27 15:39:30,047 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:39:30,047 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:39:30,047 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:39:30,047 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:39:30,047 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:39:30,047 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:39:30,048 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTk3MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTcwfQ.e3yLIdJVpT-Xgb-wsuA17SWHKU7VTNSeEDcQWW80E3E'}
2022-04-27 15:39:30,048 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:39:30,048 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:39:30,105 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:39:30,105 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.110528ms'}
2022-04-27 15:39:30,107 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:39:30,107 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:39:30,107 ARS INFO handle_extract.py [29行]: <class 'int'>
2022-04-27 15:39:30,107 ARS INFO handle_extract.py [34行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:39:30,107 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:39:30,107 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:39:30,107 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:39:30,107 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:39:30,107 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:39:30,107 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:39:30,107 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:39:30,112 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:39:30,113 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:39:30,113 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:39:30,113 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:39:30,113 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:39:30,113 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:39:30,113 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:39:30,113 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:39:30,113 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY0OTk3MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MTcwfQ.e3yLIdJVpT-Xgb-wsuA17SWHKU7VTNSeEDcQWW80E3E'}
2022-04-27 15:39:30,115 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:39:30,115 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:39:30,184 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:39:30,184 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '1.801876ms'}
2022-04-27 15:39:30,184 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:39:30,184 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:39:30,184 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:39:30,184 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:39:30,184 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:39:30,184 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:39:30,184 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 15:41:04,703 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:41:04,704 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:41:04,704 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:41:04,704 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:41:04,704 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:41:04,798 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:41:04,798 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '837261', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.496827ms'}
2022-04-27 15:41:04,799 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：837261
2022-04-27 15:41:04,799 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:41:04,799 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:41:04,799 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:41:04,799 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:41:04,799 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '837261', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:41:04,892 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:41:04,894 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDA2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MjY1fQ.ti3pmwrrIN-60aNVwNohHnfaC2zSxjUqmEIQflMqSTg'}, 'time': '13.756436ms'}
2022-04-27 15:41:04,894 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:41:04,894 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDA2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MjY1fQ.ti3pmwrrIN-60aNVwNohHnfaC2zSxjUqmEIQflMqSTg']
2022-04-27 15:41:04,894 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDA2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MjY1fQ.ti3pmwrrIN-60aNVwNohHnfaC2zSxjUqmEIQflMqSTg,并设置为Data类实例化对象的属性和值。
2022-04-27 15:41:04,896 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:41:04,896 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:41:04,897 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:41:04,897 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:41:04,897 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:41:04,897 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:41:04,897 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDA2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0MjY1fQ.ti3pmwrrIN-60aNVwNohHnfaC2zSxjUqmEIQflMqSTg'}
2022-04-27 15:41:04,899 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:41:04,900 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:41:04,971 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:41:04,971 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.137018ms'}
2022-04-27 15:41:04,971 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:41:04,973 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:41:04,973 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:41:04,973 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:41:04,973 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:41:04,973 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:41:04,973 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:41:04,973 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:41:04,973 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:41:04,974 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:41:04,976 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:41:04,976 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:41:04,976 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:41:04,976 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:51:20,993 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:51:20,993 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:51:20,993 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:51:20,993 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 15:51:20,993 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 15:51:21,131 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:51:21,131 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '973189', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.631698ms'}
2022-04-27 15:51:21,132 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：973189
2022-04-27 15:51:21,132 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:51:21,132 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:51:21,132 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 15:51:21,134 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 15:51:21,134 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '973189', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 15:51:21,211 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:51:21,211 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0ODgxfQ.CWUsMHjVUc62jpcU6k45fcbHQ1u5wmwlYlWKSbFHADA'}, 'time': '14.381942ms'}
2022-04-27 15:51:21,211 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 15:51:21,211 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0ODgxfQ.CWUsMHjVUc62jpcU6k45fcbHQ1u5wmwlYlWKSbFHADA']
2022-04-27 15:51:21,211 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0ODgxfQ.CWUsMHjVUc62jpcU6k45fcbHQ1u5wmwlYlWKSbFHADA,并设置为Data类实例化对象的属性和值。
2022-04-27 15:51:21,217 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:51:21,217 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 15:51:21,217 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：[]
2022-04-27 15:51:21,217 ARS INFO handle_replace.py [49行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 15:51:21,217 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:51:21,217 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 15:51:21,217 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0ODgxfQ.CWUsMHjVUc62jpcU6k45fcbHQ1u5wmwlYlWKSbFHADA'}
2022-04-27 15:51:21,217 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 15:51:21,217 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 15:51:21,287 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:51:21,287 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.13893ms'}
2022-04-27 15:51:21,287 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 15:51:21,288 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 15:51:21,288 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 15:51:21,288 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 15:51:21,288 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:51:21,288 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:51:21,288 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 15:51:21,288 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:51:21,288 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 15:51:21,289 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 15:51:21,291 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 15:51:21,291 ARS INFO handle_replace.py [26行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:51:21,291 ARS INFO handle_replace.py [29行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 15:51:21,291 ARS INFO handle_replace.py [43行]: 将标识符为：#client_id#，替换为：1
2022-04-27 15:51:21,292 ARS INFO handle_replace.py [46行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 15:51:21,292 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:51:21,292 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 15:51:21,292 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 15:51:21,292 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MDY4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ0ODgxfQ.CWUsMHjVUc62jpcU6k45fcbHQ1u5wmwlYlWKSbFHADA'}
2022-04-27 15:51:21,292 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 15:51:21,292 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 15:51:21,351 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 15:51:21,351 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.266955ms'}
2022-04-27 15:51:21,351 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 15:51:21,351 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 15:51:21,351 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:51:21,351 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 15:51:21,351 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 15:51:21,351 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 15:51:21,351 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 16:42:00,131 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:42:00,131 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:42:00,131 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:42:00,131 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:42:00,131 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:42:00,240 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:42:00,240 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '405200', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.263439ms'}
2022-04-27 16:42:00,241 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：405200
2022-04-27 16:42:00,243 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:42:00,243 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:42:00,243 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:42:00,243 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:42:00,243 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '405200', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:42:00,315 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:42:00,315 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzcyMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTIwfQ.bmy4_8WIM9wMi2czR5DQgIZ_XoIF_Nciz8bc2IJ9PZI'}, 'time': '15.949503ms'}
2022-04-27 16:42:00,315 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:42:00,315 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzcyMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTIwfQ.bmy4_8WIM9wMi2czR5DQgIZ_XoIF_Nciz8bc2IJ9PZI']
2022-04-27 16:42:00,315 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzcyMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTIwfQ.bmy4_8WIM9wMi2czR5DQgIZ_XoIF_Nciz8bc2IJ9PZI,并设置为Data类实例化对象的属性和值。
2022-04-27 16:42:00,320 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:42:00,320 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:42:00,320 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:42:00,320 ARS INFO handle_replace.py [58行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:42:00,320 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:42:00,320 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:42:00,320 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzcyMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTIwfQ.bmy4_8WIM9wMi2czR5DQgIZ_XoIF_Nciz8bc2IJ9PZI'}
2022-04-27 16:42:00,321 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:42:00,321 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:42:00,384 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:42:00,385 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.227212ms'}
2022-04-27 16:42:00,385 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:42:00,387 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:42:00,387 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:42:00,388 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:42:00,388 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:42:00,388 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:42:00,388 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:42:00,388 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:42:00,388 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:42:00,390 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:42:00,398 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:42:00,399 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:42:00,399 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:42:00,400 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:42:33,185 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:42:33,187 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:42:33,187 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:42:33,187 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:42:33,187 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:42:33,243 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:42:33,243 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '173618', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.529952ms'}
2022-04-27 16:42:33,243 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：173618
2022-04-27 16:42:33,243 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:42:33,243 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:42:33,243 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:42:33,244 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:42:33,244 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '173618', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:42:33,311 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:42:33,311 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTUzfQ.CpHWeGrOy9WU0uHEJ-AeYrTPfZkidWwagivg9q6Faqs'}, 'time': '14.22558ms'}
2022-04-27 16:42:33,311 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:42:33,311 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTUzfQ.CpHWeGrOy9WU0uHEJ-AeYrTPfZkidWwagivg9q6Faqs']
2022-04-27 16:42:33,311 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTUzfQ.CpHWeGrOy9WU0uHEJ-AeYrTPfZkidWwagivg9q6Faqs,并设置为Data类实例化对象的属性和值。
2022-04-27 16:42:33,316 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:42:33,316 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:42:33,316 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:42:33,316 ARS INFO handle_replace.py [58行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:42:33,316 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:42:33,316 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:42:33,316 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTUzfQ.CpHWeGrOy9WU0uHEJ-AeYrTPfZkidWwagivg9q6Faqs'}
2022-04-27 16:42:33,318 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:42:33,318 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:42:33,407 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:42:33,407 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.242437ms'}
2022-04-27 16:42:33,407 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:42:33,407 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:42:33,407 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:42:33,408 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:42:33,408 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:42:33,408 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:42:33,408 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:42:33,408 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:42:33,408 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:42:33,408 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:42:33,412 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:42:33,412 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:42:33,414 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:42:33,414 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:43:17,069 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:43:17,069 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:43:17,069 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:43:17,070 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:43:17,070 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:43:17,223 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:43:17,224 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '206163', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.564124ms'}
2022-04-27 16:43:17,225 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：206163
2022-04-27 16:43:17,225 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:43:17,225 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:43:17,225 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:43:17,226 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:43:17,226 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '206163', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:43:17,302 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:43:17,302 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc5NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTk3fQ.HwwS7bb5wj13gL3ridLBsISJg9M-YNWIKBj2nr4PpCI'}, 'time': '13.45056ms'}
2022-04-27 16:43:17,302 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:43:17,302 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc5NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTk3fQ.HwwS7bb5wj13gL3ridLBsISJg9M-YNWIKBj2nr4PpCI']
2022-04-27 16:43:17,302 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc5NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTk3fQ.HwwS7bb5wj13gL3ridLBsISJg9M-YNWIKBj2nr4PpCI,并设置为Data类实例化对象的属性和值。
2022-04-27 16:43:17,304 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:43:17,304 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:43:17,304 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:43:17,304 ARS INFO handle_replace.py [58行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:43:17,305 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:43:17,305 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:43:17,305 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Mzc5NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ3OTk3fQ.HwwS7bb5wj13gL3ridLBsISJg9M-YNWIKBj2nr4PpCI'}
2022-04-27 16:43:17,307 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:43:17,307 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:43:17,369 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:43:17,369 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.067681ms'}
2022-04-27 16:43:17,369 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:43:17,369 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:43:17,369 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:43:17,371 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:43:17,371 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:43:17,371 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:43:17,371 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:43:17,371 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:43:17,371 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:43:17,371 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:43:17,374 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:43:17,374 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:43:17,374 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:43:17,374 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:43:43,937 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:43:43,937 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:43:43,937 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:43:43,937 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:43:43,937 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:43:44,007 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:43:44,007 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '558118', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.649188ms'}
2022-04-27 16:43:44,008 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：558118
2022-04-27 16:43:44,008 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:43:44,008 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:43:44,008 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:43:44,009 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:43:44,009 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '558118', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:43:44,098 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:43:44,098 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzgyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MDI0fQ.d3fffnnVxEu2mAuqVFq8HTQloTD2iXYw_zNXCG53PS0'}, 'time': '13.498967ms'}
2022-04-27 16:43:44,099 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:43:44,099 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzgyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MDI0fQ.d3fffnnVxEu2mAuqVFq8HTQloTD2iXYw_zNXCG53PS0']
2022-04-27 16:43:44,099 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzgyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MDI0fQ.d3fffnnVxEu2mAuqVFq8HTQloTD2iXYw_zNXCG53PS0,并设置为Data类实例化对象的属性和值。
2022-04-27 16:43:44,105 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:43:44,105 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:43:44,105 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:43:44,105 ARS INFO handle_replace.py [58行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:43:44,105 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:43:44,105 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:43:44,105 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1MzgyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MDI0fQ.d3fffnnVxEu2mAuqVFq8HTQloTD2iXYw_zNXCG53PS0'}
2022-04-27 16:43:44,108 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:43:44,108 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:43:44,200 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:43:44,200 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.16125ms'}
2022-04-27 16:43:44,200 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:43:44,200 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:43:44,200 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:43:44,200 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:43:44,200 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:43:44,200 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:43:44,200 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:43:44,200 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:43:44,200 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:43:44,200 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:43:44,203 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:43:44,203 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:43:44,203 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:43:44,203 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:47:27,766 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:47:27,766 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:47:27,766 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:47:27,766 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:47:27,766 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:47:27,843 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:47:27,843 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '659564', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.953823ms'}
2022-04-27 16:47:27,845 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：659564
2022-04-27 16:47:27,845 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:47:27,846 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:47:27,846 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:47:27,847 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:47:27,848 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '659564', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:47:27,963 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:47:27,963 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDA0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MjQ4fQ.CbuVu1dGjVWd2HFTC9RehxfYivUWd-7SVeSmuUGaFAc'}, 'time': '13.623624ms'}
2022-04-27 16:47:27,963 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:47:27,963 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDA0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MjQ4fQ.CbuVu1dGjVWd2HFTC9RehxfYivUWd-7SVeSmuUGaFAc']
2022-04-27 16:47:27,963 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDA0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MjQ4fQ.CbuVu1dGjVWd2HFTC9RehxfYivUWd-7SVeSmuUGaFAc,并设置为Data类实例化对象的属性和值。
2022-04-27 16:47:27,966 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:47:27,966 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:47:27,966 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:47:27,967 ARS INFO handle_replace.py [58行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:47:27,967 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:47:27,967 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:47:27,967 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDA0OCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MjQ4fQ.CbuVu1dGjVWd2HFTC9RehxfYivUWd-7SVeSmuUGaFAc'}
2022-04-27 16:47:27,967 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:47:27,967 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:47:28,026 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:47:28,028 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.000292ms'}
2022-04-27 16:47:28,028 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:47:28,028 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:47:28,028 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:47:28,028 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:47:28,028 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:47:28,028 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:47:28,028 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:47:28,028 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:47:28,028 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:47:28,029 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:47:28,031 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:47:28,031 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:47:28,031 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:47:28,031 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:48:51,467 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:48:51,467 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:48:51,468 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:48:51,468 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:48:51,468 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:48:51,542 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:48:51,542 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '069869', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.570034ms'}
2022-04-27 16:48:51,542 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：069869
2022-04-27 16:48:51,542 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:48:51,542 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:48:51,543 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:48:51,543 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:48:51,543 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '069869', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:48:51,624 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:48:51,625 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDEzMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MzMxfQ.318WE_Rjfnn07DL-qNnhFBLWiz12WazbCQn8sdxFG30'}, 'time': '14.622266ms'}
2022-04-27 16:48:51,625 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:48:51,625 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDEzMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MzMxfQ.318WE_Rjfnn07DL-qNnhFBLWiz12WazbCQn8sdxFG30']
2022-04-27 16:48:51,625 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDEzMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MzMxfQ.318WE_Rjfnn07DL-qNnhFBLWiz12WazbCQn8sdxFG30,并设置为Data类实例化对象的属性和值。
2022-04-27 16:48:51,630 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:48:51,630 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:48:51,631 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:48:51,631 ARS INFO handle_replace.py [58行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:48:51,631 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:48:51,631 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:48:51,631 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDEzMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MzMxfQ.318WE_Rjfnn07DL-qNnhFBLWiz12WazbCQn8sdxFG30'}
2022-04-27 16:48:51,632 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:48:51,633 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:48:51,690 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:48:51,690 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.391143ms'}
2022-04-27 16:48:51,690 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:48:51,691 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:48:51,691 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:48:51,691 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:48:51,691 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:48:51,691 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:48:51,691 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:48:51,691 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:48:51,692 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:48:51,692 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:48:51,696 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:48:51,696 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:48:51,696 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:48:51,696 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:48:51,696 ARS INFO handle_replace.py [54行]: {"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}
2022-04-27 16:48:51,696 ARS INFO handle_replace.py [55行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:48:51,696 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:48:51,697 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:48:51,697 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:48:51,697 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDEzMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4MzMxfQ.318WE_Rjfnn07DL-qNnhFBLWiz12WazbCQn8sdxFG30'}
2022-04-27 16:48:51,697 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 16:48:51,697 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:48:51,776 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:48:51,776 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.108246ms'}
2022-04-27 16:48:51,776 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 16:48:51,776 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:48:51,777 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 16:48:51,777 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 16:48:51,777 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:48:51,777 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 16:48:51,777 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 16:50:13,593 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:13,593 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:50:13,593 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:50:13,595 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:50:13,595 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:50:13,657 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:13,659 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '283251', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.021659ms'}
2022-04-27 16:50:13,659 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：283251
2022-04-27 16:50:13,660 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:13,660 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:50:13,660 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:50:13,660 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:50:13,660 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '283251', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:50:13,747 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:13,748 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDIxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDEzfQ.aN4uKcCGwx3s9G5MQNpZISWY9DFBbA0BbYayKfruhbc'}, 'time': '14.411441ms'}
2022-04-27 16:50:13,748 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:50:13,748 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDIxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDEzfQ.aN4uKcCGwx3s9G5MQNpZISWY9DFBbA0BbYayKfruhbc']
2022-04-27 16:50:13,750 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDIxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDEzfQ.aN4uKcCGwx3s9G5MQNpZISWY9DFBbA0BbYayKfruhbc,并设置为Data类实例化对象的属性和值。
2022-04-27 16:50:13,753 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:50:13,753 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:50:13,755 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:50:13,755 ARS INFO handle_replace.py [59行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:50:13,755 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:13,755 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:50:13,755 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDIxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDEzfQ.aN4uKcCGwx3s9G5MQNpZISWY9DFBbA0BbYayKfruhbc'}
2022-04-27 16:50:13,756 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:50:13,756 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:50:13,823 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:13,823 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.174161ms'}
2022-04-27 16:50:13,823 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:50:13,823 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:50:13,825 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:50:13,825 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:50:13,825 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:50:13,825 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:50:13,825 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:50:13,825 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:50:13,825 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:50:13,825 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:50:13,828 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:50:13,828 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:50:13,828 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:50:13,828 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:50:13,828 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 16:50:13,830 ARS INFO handle_replace.py [55行]: {"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}
2022-04-27 16:50:13,830 ARS INFO handle_replace.py [56行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:50:13,830 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:50:13,830 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:13,830 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:50:13,830 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDIxMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDEzfQ.aN4uKcCGwx3s9G5MQNpZISWY9DFBbA0BbYayKfruhbc'}
2022-04-27 16:50:13,831 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 16:50:13,831 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:50:13,894 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:13,894 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '1.973857ms'}
2022-04-27 16:50:13,894 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 16:50:13,894 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:50:13,894 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 16:50:13,894 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 16:50:13,894 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:50:13,894 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 16:50:13,894 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 16:50:56,145 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:56,145 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:50:56,145 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:50:56,145 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:50:56,145 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:50:56,203 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:56,203 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '187269', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.584512ms'}
2022-04-27 16:50:56,203 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：187269
2022-04-27 16:50:56,203 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:56,203 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:50:56,203 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:50:56,204 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:50:56,204 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '187269', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:50:56,295 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:56,295 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDI1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDU2fQ.y7xhYMxOANiMrPesC_NLOlSVVbGrLV-asRG6nxfLb0s'}, 'time': '13.557409ms'}
2022-04-27 16:50:56,295 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:50:56,296 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDI1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDU2fQ.y7xhYMxOANiMrPesC_NLOlSVVbGrLV-asRG6nxfLb0s']
2022-04-27 16:50:56,296 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDI1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDU2fQ.y7xhYMxOANiMrPesC_NLOlSVVbGrLV-asRG6nxfLb0s,并设置为Data类实例化对象的属性和值。
2022-04-27 16:50:56,300 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:50:56,300 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:50:56,302 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:50:56,302 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:50:56,302 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:56,302 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:50:56,302 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDI1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDU2fQ.y7xhYMxOANiMrPesC_NLOlSVVbGrLV-asRG6nxfLb0s'}
2022-04-27 16:50:56,302 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:50:56,302 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:50:56,375 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:56,375 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.312991ms'}
2022-04-27 16:50:56,375 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:50:56,375 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:50:56,375 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:50:56,375 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:50:56,375 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:50:56,375 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:50:56,375 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:50:56,376 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:50:56,376 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:50:56,376 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:50:56,381 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:50:56,381 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:50:56,381 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:50:56,381 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:50:56,381 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 16:50:56,382 ARS INFO handle_replace.py [55行]: {"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}
2022-04-27 16:50:56,382 ARS INFO handle_replace.py [56行]: <class 'str'>
2022-04-27 16:50:56,382 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:50:56,382 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:50:56,382 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:50:56,382 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:50:56,382 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDI1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NDU2fQ.y7xhYMxOANiMrPesC_NLOlSVVbGrLV-asRG6nxfLb0s'}
2022-04-27 16:50:56,383 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 16:50:56,384 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:50:56,449 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:50:56,449 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.224273ms'}
2022-04-27 16:50:56,449 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 16:50:56,449 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:50:56,450 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 16:50:56,450 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 16:50:56,450 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:50:56,450 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 16:50:56,450 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 16:54:44,147 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:54:44,148 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:54:44,148 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:54:44,148 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:54:44,148 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:54:44,233 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:54:44,233 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '171996', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.501641ms'}
2022-04-27 16:54:44,233 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：171996
2022-04-27 16:54:44,233 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:54:44,233 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:54:44,233 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:54:44,235 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:54:44,235 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '171996', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:54:44,319 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:54:44,319 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDQ4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4Njg0fQ.BseW58ukbEUZAEjiBann4jlthW-tAGoEnhEW4aHDh1Q'}, 'time': '23.441412ms'}
2022-04-27 16:54:44,319 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:54:44,319 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDQ4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4Njg0fQ.BseW58ukbEUZAEjiBann4jlthW-tAGoEnhEW4aHDh1Q']
2022-04-27 16:54:44,320 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDQ4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4Njg0fQ.BseW58ukbEUZAEjiBann4jlthW-tAGoEnhEW4aHDh1Q,并设置为Data类实例化对象的属性和值。
2022-04-27 16:54:44,322 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:54:44,322 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:54:44,322 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:54:44,322 ARS INFO handle_replace.py [61行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:54:44,322 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:54:44,322 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:54:44,322 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDQ4NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4Njg0fQ.BseW58ukbEUZAEjiBann4jlthW-tAGoEnhEW4aHDh1Q'}
2022-04-27 16:54:44,323 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:54:44,323 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:54:44,424 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:54:44,424 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.122471ms'}
2022-04-27 16:54:44,424 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:54:44,424 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:54:44,424 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:54:44,424 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:54:44,424 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:54:44,424 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:54:44,424 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:54:44,424 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:54:44,424 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:54:44,425 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:54:44,428 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:54:44,428 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:54:44,428 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:54:44,428 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:54:44,430 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 16:54:44,430 ARS INFO handle_replace.py [56行]: {'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 16:54:44,430 ARS INFO handle_replace.py [57行]: <class 'dict'>
2022-04-27 16:54:44,430 ARS INFO handle_replace.py [58行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': {'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:55:42,148 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:55:42,148 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:55:42,150 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:55:42,150 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 16:55:42,150 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 16:55:42,263 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:55:42,263 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '585246', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.516811ms'}
2022-04-27 16:55:42,265 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：585246
2022-04-27 16:55:42,266 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:55:42,266 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 16:55:42,266 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 16:55:42,269 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 16:55:42,269 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '585246', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 16:55:42,351 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:55:42,351 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDU0MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NzQyfQ.57VOhs83NgETG-yrANBTMoAcRqUl3zg1uVftIdaWDYk'}, 'time': '13.602673ms'}
2022-04-27 16:55:42,351 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 16:55:42,351 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDU0MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NzQyfQ.57VOhs83NgETG-yrANBTMoAcRqUl3zg1uVftIdaWDYk']
2022-04-27 16:55:42,351 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDU0MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NzQyfQ.57VOhs83NgETG-yrANBTMoAcRqUl3zg1uVftIdaWDYk,并设置为Data类实例化对象的属性和值。
2022-04-27 16:55:42,353 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:55:42,353 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 16:55:42,353 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 16:55:42,353 ARS INFO handle_replace.py [59行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 16:55:42,353 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 16:55:42,353 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 16:55:42,355 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDU0MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ4NzQyfQ.57VOhs83NgETG-yrANBTMoAcRqUl3zg1uVftIdaWDYk'}
2022-04-27 16:55:42,355 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 16:55:42,355 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 16:55:42,438 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 16:55:42,438 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.272292ms'}
2022-04-27 16:55:42,438 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 16:55:42,438 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 16:55:42,439 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 16:55:42,439 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 16:55:42,439 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 16:55:42,439 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:55:42,439 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 16:55:42,439 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 16:55:42,439 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 16:55:42,439 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 16:55:42,440 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 16:55:42,440 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 16:55:42,440 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 16:55:42,440 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 16:55:42,441 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 16:55:42,441 ARS INFO handle_replace.py [56行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': {'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:00:05,756 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:00:05,756 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:00:05,756 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:00:05,756 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:00:05,758 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:00:05,865 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:00:05,865 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '383952', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.531582ms'}
2022-04-27 17:00:05,865 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：383952
2022-04-27 17:00:05,865 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:00:05,865 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:00:05,865 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:00:05,865 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:00:05,867 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '383952', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:00:05,947 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:00:05,947 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDgwNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MDA2fQ.2SHdhrRv_ORhIKktSgGaBVzFJkXS9HWGXM18dH-TIJY'}, 'time': '13.271705ms'}
2022-04-27 17:00:05,947 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:00:05,947 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDgwNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MDA2fQ.2SHdhrRv_ORhIKktSgGaBVzFJkXS9HWGXM18dH-TIJY']
2022-04-27 17:00:05,947 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDgwNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MDA2fQ.2SHdhrRv_ORhIKktSgGaBVzFJkXS9HWGXM18dH-TIJY,并设置为Data类实例化对象的属性和值。
2022-04-27 17:00:05,951 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:00:05,951 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:00:05,951 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:00:05,951 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:00:05,951 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:00:05,951 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 17:00:05,951 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDgwNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MDA2fQ.2SHdhrRv_ORhIKktSgGaBVzFJkXS9HWGXM18dH-TIJY'}
2022-04-27 17:00:05,952 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:00:05,952 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 17:00:06,044 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:00:06,046 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.069898ms'}
2022-04-27 17:00:06,047 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:00:06,047 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:00:06,048 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:00:06,049 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:00:06,049 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:00:06,049 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:00:06,049 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:00:06,049 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:00:06,049 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:00:06,049 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:00:06,059 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:00:06,059 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:00:06,060 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:00:06,060 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:00:06,062 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 17:00:06,062 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:00:06,062 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:00:06,062 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:00:06,062 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:00:06,063 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NDgwNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MDA2fQ.2SHdhrRv_ORhIKktSgGaBVzFJkXS9HWGXM18dH-TIJY'}
2022-04-27 17:00:06,065 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:00:06,065 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:00:06,156 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:00:06,156 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.145853ms'}
2022-04-27 17:00:06,158 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 17:00:06,158 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:00:06,158 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:00:06,159 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-27 17:00:06,159 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:00:06,159 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:00:06,159 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 17:04:03,494 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:04:03,494 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:04:03,494 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:04:03,495 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:04:03,495 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:04:03,576 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:04:03,577 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '671090', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.52352ms'}
2022-04-27 17:04:03,577 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：671090
2022-04-27 17:04:03,578 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:04:03,578 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:04:03,578 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:04:03,578 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:04:03,578 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '671090', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:04:03,667 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:04:03,668 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTA0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MjQzfQ.ynwCfOwZwtzVx8Ompc0Bw8Lq2HZGHNn5oXfnmuDySrw'}, 'time': '14.892127ms'}
2022-04-27 17:04:03,670 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:04:03,671 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTA0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MjQzfQ.ynwCfOwZwtzVx8Ompc0Bw8Lq2HZGHNn5oXfnmuDySrw']
2022-04-27 17:04:03,671 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTA0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MjQzfQ.ynwCfOwZwtzVx8Ompc0Bw8Lq2HZGHNn5oXfnmuDySrw,并设置为Data类实例化对象的属性和值。
2022-04-27 17:04:03,677 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:04:03,677 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:04:03,678 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:04:03,678 ARS INFO handle_replace.py [62行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:04:03,678 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:04:03,679 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 17:04:03,679 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTA0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MjQzfQ.ynwCfOwZwtzVx8Ompc0Bw8Lq2HZGHNn5oXfnmuDySrw'}
2022-04-27 17:04:03,680 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:04:03,680 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 17:04:03,736 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:04:03,736 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.209119ms'}
2022-04-27 17:04:03,736 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:04:03,736 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:04:03,736 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:04:03,736 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:04:03,736 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:04:03,736 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:04:03,736 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:04:03,736 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:04:03,736 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:04:03,736 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:04:03,740 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:04:03,740 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:04:03,740 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:04:03,740 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:04:03,740 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 17:04:03,740 ARS INFO handle_replace.py [59行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': "{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}", 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:05:43,259 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:05:43,259 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:05:43,259 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:05:43,260 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:05:43,260 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:05:43,380 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:05:43,380 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '770843', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.60796ms'}
2022-04-27 17:05:43,381 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：770843
2022-04-27 17:05:43,382 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:05:43,382 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:05:43,382 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:05:43,383 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:05:43,383 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '770843', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:05:43,464 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:05:43,465 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTE0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MzQzfQ.h4zzJv9T2lB5mNhQLtPOFhJ-vDyM4btkxd4fJDEyct8'}, 'time': '14.494229ms'}
2022-04-27 17:05:43,465 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:05:43,467 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTE0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MzQzfQ.h4zzJv9T2lB5mNhQLtPOFhJ-vDyM4btkxd4fJDEyct8']
2022-04-27 17:05:43,467 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTE0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MzQzfQ.h4zzJv9T2lB5mNhQLtPOFhJ-vDyM4btkxd4fJDEyct8,并设置为Data类实例化对象的属性和值。
2022-04-27 17:05:43,471 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:05:43,473 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:05:43,473 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:05:43,473 ARS INFO handle_replace.py [62行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:05:43,473 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:05:43,473 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 17:05:43,475 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTE0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MzQzfQ.h4zzJv9T2lB5mNhQLtPOFhJ-vDyM4btkxd4fJDEyct8'}
2022-04-27 17:05:43,476 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:05:43,478 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 17:05:43,555 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:05:43,555 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.135436ms'}
2022-04-27 17:05:43,556 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:05:43,556 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:05:43,556 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:05:43,558 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:05:43,558 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:05:43,558 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:05:43,559 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:05:43,559 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:05:43,559 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:05:43,559 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:05:43,563 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:05:43,564 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:05:43,564 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:05:43,564 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:05:43,564 ARS INFO handle_replace.py [53行]: ['owned_customer']
2022-04-27 17:05:43,566 ARS INFO handle_replace.py [59行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}', 'extract': None, 'execute': 'True'}
2022-04-27 17:05:43,566 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:05:43,566 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:05:43,566 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:05:43,566 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTE0MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5MzQzfQ.h4zzJv9T2lB5mNhQLtPOFhJ-vDyM4btkxd4fJDEyct8'}
2022-04-27 17:05:43,567 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:05:43,568 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:05:43,646 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:05:43,646 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.790549ms'}
2022-04-27 17:05:43,646 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 17:05:43,646 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:05:43,646 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:05:43,646 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 17:05:43,646 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:05:43,646 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:05:43,647 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 17:07:19,020 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:07:19,020 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:07:19,020 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:07:19,022 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:07:19,022 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:07:19,161 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:07:19,161 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '416322', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.594662ms'}
2022-04-27 17:07:19,163 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：416322
2022-04-27 17:07:19,164 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:07:19,164 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:07:19,164 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:07:19,164 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:07:19,164 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '416322', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:07:19,259 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:07:19,259 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5NDM5fQ._xiudNTr74dMm7davT7tmhG0bYCfRpdMfnZiFh73BI4'}, 'time': '14.112862ms'}
2022-04-27 17:07:19,259 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:07:19,259 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5NDM5fQ._xiudNTr74dMm7davT7tmhG0bYCfRpdMfnZiFh73BI4']
2022-04-27 17:07:19,259 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5NDM5fQ._xiudNTr74dMm7davT7tmhG0bYCfRpdMfnZiFh73BI4,并设置为Data类实例化对象的属性和值。
2022-04-27 17:07:19,260 ARS INFO test_003_machineroom.py [29行]: =========== 新建机房接口测试  ===============
2022-04-27 17:07:19,260 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:07:19,260 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:07:19,260 ARS INFO handle_replace.py [62行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:07:19,260 ARS INFO test_003_machineroom.py [35行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 17:07:19,260 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:07:19,262 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:07:19,262 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTIzOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5NDM5fQ._xiudNTr74dMm7davT7tmhG0bYCfRpdMfnZiFh73BI4'}
2022-04-27 17:07:19,262 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-27 17:07:19,262 ARS INFO handle_request.py [28行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-27 17:07:19,359 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:07:19,359 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.481019ms'}
2022-04-27 17:07:19,359 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 17:07:19,359 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 17:07:19,359 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:07:19,359 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-27 17:07:19,359 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-27 17:07:19,359 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:07:19,360 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:07:19,988 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 17:07:19,988 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:07:20,000 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:07:20,000 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:07:20,000 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:07:20,000 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-27 17:07:20,000 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-27 17:07:20,011 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-27 17:07:20,012 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-27 17:07:20,012 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-27 17:07:20,012 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:07:20,029 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:07:20,029 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:13:06,273 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:13:06,273 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:13:06,273 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:13:06,273 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:13:06,273 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:13:06,382 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:13:06,382 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '359259', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.763685ms'}
2022-04-27 17:13:06,383 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：359259
2022-04-27 17:13:06,383 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:13:06,383 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:13:06,383 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:13:06,384 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:13:06,384 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '359259', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:13:06,499 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:13:06,499 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTU4NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5Nzg2fQ.67xL9f0InDiPivkCOWHlYuJHFCKxUXZVx5SYT5Sxyjk'}, 'time': '13.496409ms'}
2022-04-27 17:13:06,499 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:13:06,499 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTU4NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5Nzg2fQ.67xL9f0InDiPivkCOWHlYuJHFCKxUXZVx5SYT5Sxyjk']
2022-04-27 17:13:06,499 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTU4NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5Nzg2fQ.67xL9f0InDiPivkCOWHlYuJHFCKxUXZVx5SYT5Sxyjk,并设置为Data类实例化对象的属性和值。
2022-04-27 17:13:06,503 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:13:06,503 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:13:06,503 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:13:06,504 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:13:06,504 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:13:06,504 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 17:13:06,504 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTU4NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5Nzg2fQ.67xL9f0InDiPivkCOWHlYuJHFCKxUXZVx5SYT5Sxyjk'}
2022-04-27 17:13:06,505 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:13:06,505 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 17:13:06,574 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:13:06,574 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.106717ms'}
2022-04-27 17:13:06,575 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:13:06,575 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:13:06,575 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:13:06,575 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:13:06,575 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:13:06,575 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:13:06,575 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:13:06,575 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:13:06,575 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:13:06,575 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:13:06,579 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:13:06,579 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:13:06,579 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:13:06,579 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:13:06,580 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:13:06,580 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:13:06,580 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:13:06,580 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:13:06,580 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTU4NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDQ5Nzg2fQ.67xL9f0InDiPivkCOWHlYuJHFCKxUXZVx5SYT5Sxyjk'}
2022-04-27 17:13:06,582 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:13:06,582 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:13:06,694 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:13:06,694 ARS INFO handle_request.py [34行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.766233ms'}
2022-04-27 17:13:06,695 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 17:13:06,695 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:13:06,696 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:13:06,696 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 17:13:06,696 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:13:06,697 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:13:06,697 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 17:13:07,376 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:13:07,377 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:13:07,391 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:13:07,391 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:13:07,391 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:13:07,416 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:13:07,416 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:13:07,416 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 17:17:41,023 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:17:41,024 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:17:41,024 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:17:41,024 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:17:41,024 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:17:41,136 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:17:41,136 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '655548', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.770802ms'}
2022-04-27 17:17:41,137 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：655548
2022-04-27 17:17:41,137 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:17:41,137 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:17:41,137 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:17:41,139 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:17:41,139 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '655548', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:17:41,238 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:17:41,238 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTg2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMDYxfQ.B1Pe-PuwkjShPJdA_ujvIi6xFkHEPMeq5UlTSvFa_zI'}, 'time': '14.55793ms'}
2022-04-27 17:17:41,238 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:17:41,239 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTg2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMDYxfQ.B1Pe-PuwkjShPJdA_ujvIi6xFkHEPMeq5UlTSvFa_zI']
2022-04-27 17:17:41,239 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTg2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMDYxfQ.B1Pe-PuwkjShPJdA_ujvIi6xFkHEPMeq5UlTSvFa_zI,并设置为Data类实例化对象的属性和值。
2022-04-27 17:17:41,241 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:17:41,241 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:17:41,241 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:17:41,241 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:17:41,241 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:17:41,241 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 17:17:41,241 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTg2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMDYxfQ.B1Pe-PuwkjShPJdA_ujvIi6xFkHEPMeq5UlTSvFa_zI'}
2022-04-27 17:17:41,243 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:17:41,243 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 17:17:41,312 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:17:41,312 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.069993ms'}
2022-04-27 17:17:41,312 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:17:41,312 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:17:41,312 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:17:41,312 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:17:41,312 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:17:41,312 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:17:41,312 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:17:41,312 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:17:41,312 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:17:41,312 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:17:41,315 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:17:41,315 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:17:41,315 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:17:41,315 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:17:41,316 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:17:41,316 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:17:41,316 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:17:41,316 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:17:41,316 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTg2MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMDYxfQ.B1Pe-PuwkjShPJdA_ujvIi6xFkHEPMeq5UlTSvFa_zI'}
2022-04-27 17:17:41,318 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:17:41,318 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:17:41,401 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:17:41,401 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.162849ms'}
2022-04-27 17:17:41,403 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:17:41,403 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:17:41,403 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:17:41,403 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:17:41,403 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:17:41,403 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:17:41,403 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 17:17:42,075 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:17:42,075 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:17:42,089 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:17:42,091 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:17:42,091 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:17:42,111 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:17:42,111 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:17:42,112 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 17:19:34,323 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:19:34,323 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:19:34,325 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:19:34,325 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:19:34,325 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:19:34,427 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:19:34,427 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '118819', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.5443ms'}
2022-04-27 17:19:34,427 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：118819
2022-04-27 17:19:34,427 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:19:34,427 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:19:34,427 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:19:34,428 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:19:34,428 ARS INFO handle_request.py [28行]: 请求数据为：{'sms_code': '118819', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:19:34,503 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:19:34,503 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTk3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMTc0fQ.LZPq1QPeBdgx-x8n17v75QUZSbp4t25VkbGh6D6Ts8o'}, 'time': '14.218873ms'}
2022-04-27 17:19:34,504 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:19:34,504 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTk3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMTc0fQ.LZPq1QPeBdgx-x8n17v75QUZSbp4t25VkbGh6D6Ts8o']
2022-04-27 17:19:34,505 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTk3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMTc0fQ.LZPq1QPeBdgx-x8n17v75QUZSbp4t25VkbGh6D6Ts8o,并设置为Data类实例化对象的属性和值。
2022-04-27 17:19:34,510 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:19:34,511 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:19:34,512 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:19:34,512 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:19:34,512 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:19:34,513 ARS INFO handle_request.py [19行]: 请求方法为:get
2022-04-27 17:19:34,513 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTk3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMTc0fQ.LZPq1QPeBdgx-x8n17v75QUZSbp4t25VkbGh6D6Ts8o'}
2022-04-27 17:19:34,516 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:19:34,516 ARS INFO handle_request.py [28行]: 请求数据为：None
2022-04-27 17:19:34,607 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:19:34,608 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.062822ms'}
2022-04-27 17:19:34,608 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:19:34,608 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:19:34,608 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:19:34,609 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:19:34,609 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:19:34,611 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:19:34,611 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:19:34,611 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:19:34,611 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:19:34,611 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:19:34,618 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:19:34,619 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:19:34,619 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:19:34,619 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:19:34,621 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:19:34,621 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:19:34,622 ARS INFO handle_request.py [18行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:19:34,622 ARS INFO handle_request.py [19行]: 请求方法为:post
2022-04-27 17:19:34,622 ARS INFO handle_request.py [22行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NTk3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUwMTc0fQ.LZPq1QPeBdgx-x8n17v75QUZSbp4t25VkbGh6D6Ts8o'}
2022-04-27 17:19:34,624 ARS INFO handle_request.py [25行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:19:34,624 ARS INFO handle_request.py [28行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:19:34,728 ARS INFO handle_request.py [33行]: 响应状态码：200
2022-04-27 17:19:34,728 ARS INFO handle_request.py [34行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.005077ms'}
2022-04-27 17:19:34,729 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:19:34,729 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:19:34,729 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:19:34,729 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:19:34,729 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:19:34,729 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:19:34,729 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:19:35,364 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:19:35,364 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:19:35,374 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:19:35,374 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:19:35,374 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:19:35,420 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:19:35,420 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:46:12,884 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:46:12,884 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:46:12,884 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:46:12,884 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:46:12,884 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:46:12,979 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:46:12,979 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '728157', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.740822ms'}
2022-04-27 17:46:12,982 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：728157
2022-04-27 17:46:12,982 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:46:12,982 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:46:12,983 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:46:12,984 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:46:12,984 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '728157', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:46:13,073 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:46:13,075 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzU3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxNzczfQ.OGfjpb6-dPEutuvFy--9MAF4Rm2yN9olXrG3EGBFaac'}, 'time': '14.815484ms'}
2022-04-27 17:46:13,075 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:46:13,075 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzU3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxNzczfQ.OGfjpb6-dPEutuvFy--9MAF4Rm2yN9olXrG3EGBFaac']
2022-04-27 17:46:13,075 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzU3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxNzczfQ.OGfjpb6-dPEutuvFy--9MAF4Rm2yN9olXrG3EGBFaac,并设置为Data类实例化对象的属性和值。
2022-04-27 17:46:13,078 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:46:13,078 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:46:13,078 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:46:13,078 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:46:13,078 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:46:13,078 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:46:13,078 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzU3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxNzczfQ.OGfjpb6-dPEutuvFy--9MAF4Rm2yN9olXrG3EGBFaac'}
2022-04-27 17:46:13,079 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:46:13,080 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:46:13,145 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:46:13,145 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.248587ms'}
2022-04-27 17:46:13,145 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:46:13,147 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:46:13,147 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:46:13,147 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:46:13,147 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:46:13,147 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:46:13,147 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:46:13,147 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:46:13,147 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:46:13,147 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:46:13,150 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:46:13,150 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:46:13,150 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:46:13,150 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:46:13,150 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:46:13,151 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:46:13,151 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:46:13,151 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:46:13,151 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzU3MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxNzczfQ.OGfjpb6-dPEutuvFy--9MAF4Rm2yN9olXrG3EGBFaac'}
2022-04-27 17:46:13,151 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:46:13,151 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:46:13,212 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:46:13,212 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.803107ms'}
2022-04-27 17:46:13,214 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 17:46:13,214 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:46:13,214 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:46:13,214 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 17:46:13,214 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:46:13,214 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:46:13,214 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 17:46:13,838 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:46:13,839 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:46:13,852 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:46:13,852 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:46:13,854 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:46:13,887 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:46:13,888 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:46:13,888 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 17:47:49,454 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:47:49,455 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:47:49,455 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:47:49,455 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:47:49,456 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:47:49,591 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:47:49,592 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '528811', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.547099ms'}
2022-04-27 17:47:49,592 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：528811
2022-04-27 17:47:49,593 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:47:49,593 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:47:49,593 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:47:49,595 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:47:49,595 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '528811', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:47:49,710 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:47:49,710 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY2OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODY5fQ.U806z2L-G6Hqr8SWVEajya7QLzyPiZO55TO3cECEalY'}, 'time': '14.429435ms'}
2022-04-27 17:47:49,710 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:47:49,710 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY2OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODY5fQ.U806z2L-G6Hqr8SWVEajya7QLzyPiZO55TO3cECEalY']
2022-04-27 17:47:49,710 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY2OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODY5fQ.U806z2L-G6Hqr8SWVEajya7QLzyPiZO55TO3cECEalY,并设置为Data类实例化对象的属性和值。
2022-04-27 17:47:49,717 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:47:49,717 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:47:49,717 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:47:49,718 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:47:49,718 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:47:49,718 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:47:49,718 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:47:49,718 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY2OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODY5fQ.U806z2L-G6Hqr8SWVEajya7QLzyPiZO55TO3cECEalY'}
2022-04-27 17:47:49,719 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:47:49,720 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:47:49,812 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:47:49,812 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.182491ms'}
2022-04-27 17:47:49,812 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:47:49,812 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:47:49,812 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:47:49,814 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:47:49,814 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:47:49,814 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:47:49,814 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:47:49,814 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:47:49,814 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:47:49,814 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:47:49,817 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:47:49,819 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:47:49,819 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:47:49,819 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:47:49,819 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:47:49,819 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:47:49,819 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:47:49,819 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:47:49,819 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:47:49,819 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY2OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODY5fQ.U806z2L-G6Hqr8SWVEajya7QLzyPiZO55TO3cECEalY'}
2022-04-27 17:47:49,820 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:47:49,820 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:47:49,894 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:47:49,895 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.752176ms'}
2022-04-27 17:47:49,895 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 17:47:49,895 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:47:49,896 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:47:49,896 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 17:47:49,896 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:47:49,896 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 17:47:49,897 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 17:47:50,572 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:47:50,572 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:47:50,584 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:47:50,585 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:47:50,585 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:47:50,609 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:47:50,609 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:47:50,611 ARS ERROR test_role.py [61行]: 用例执行失败
2022-04-27 17:48:09,019 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:09,019 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:09,019 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:09,019 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:48:09,019 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:48:09,126 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:09,126 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '288089', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.559069ms'}
2022-04-27 17:48:09,127 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：288089
2022-04-27 17:48:09,127 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:09,127 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:09,127 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:09,128 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:48:09,128 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '288089', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:48:09,226 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:09,226 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODg5fQ.nn98zvl_2kXWYRSZfiF0X2r-5MXjD-cdNHEfMW0EV9k'}, 'time': '14.493848ms'}
2022-04-27 17:48:09,226 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:48:09,226 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODg5fQ.nn98zvl_2kXWYRSZfiF0X2r-5MXjD-cdNHEfMW0EV9k']
2022-04-27 17:48:09,226 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODg5fQ.nn98zvl_2kXWYRSZfiF0X2r-5MXjD-cdNHEfMW0EV9k,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:09,228 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:09,228 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:48:09,228 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:48:09,228 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:48:09,228 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:48:09,228 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:09,228 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:48:09,228 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODg5fQ.nn98zvl_2kXWYRSZfiF0X2r-5MXjD-cdNHEfMW0EV9k'}
2022-04-27 17:48:09,230 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:48:09,230 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:48:09,295 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:09,295 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.075591ms'}
2022-04-27 17:48:09,296 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:48:09,296 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:48:09,296 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:09,296 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:09,296 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:09,296 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:09,297 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:48:09,297 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:48:09,297 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:09,297 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:09,302 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:09,303 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:09,303 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:48:09,303 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:48:09,303 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:09,304 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:09,304 ARS INFO test_role.py [40行]: fdfdsfsdfsadfDELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:09,304 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:09,996 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:09,998 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:09,998 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzY4OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxODg5fQ.nn98zvl_2kXWYRSZfiF0X2r-5MXjD-cdNHEfMW0EV9k'}
2022-04-27 17:48:09,999 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:48:09,999 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:10,099 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:10,099 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.2494ms'}
2022-04-27 17:48:10,099 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:10,100 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:10,100 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:10,100 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:48:10,100 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:48:10,102 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:10,102 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:10,664 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:10,664 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:48:10,678 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:48:10,678 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:48:10,678 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:48:10,720 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:48:10,720 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:48:20,084 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:20,084 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:20,084 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:20,085 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:48:20,085 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:48:20,167 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:20,167 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '563645', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.483692ms'}
2022-04-27 17:48:20,169 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：563645
2022-04-27 17:48:20,169 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:20,171 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:20,171 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:20,171 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:48:20,172 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '563645', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:48:20,249 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:20,249 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzcwMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTAwfQ.aUwGON3MR1WpT2_r2pI7YEPa_uYV0khiS6oeTTmJV68'}, 'time': '13.49959ms'}
2022-04-27 17:48:20,249 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:48:20,249 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzcwMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTAwfQ.aUwGON3MR1WpT2_r2pI7YEPa_uYV0khiS6oeTTmJV68']
2022-04-27 17:48:20,251 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzcwMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTAwfQ.aUwGON3MR1WpT2_r2pI7YEPa_uYV0khiS6oeTTmJV68,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:20,255 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:20,255 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:48:20,255 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:48:20,256 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:48:20,256 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:48:20,256 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:20,256 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:48:20,256 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzcwMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTAwfQ.aUwGON3MR1WpT2_r2pI7YEPa_uYV0khiS6oeTTmJV68'}
2022-04-27 17:48:20,256 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:48:20,256 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:48:20,350 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:20,350 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.224243ms'}
2022-04-27 17:48:20,350 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:48:20,350 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:48:20,350 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:20,351 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:20,351 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:20,351 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:20,351 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:48:20,351 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:48:20,351 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:20,351 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:20,355 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:20,355 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:20,356 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:48:20,356 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:48:20,356 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:20,356 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:20,356 ARS INFO test_role.py [40行]: fdfdsfsdfsadfDELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:20,356 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:20,980 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:20,980 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:20,980 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzcwMCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTAwfQ.aUwGON3MR1WpT2_r2pI7YEPa_uYV0khiS6oeTTmJV68'}
2022-04-27 17:48:20,983 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:48:20,983 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:21,070 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:21,070 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.2093ms'}
2022-04-27 17:48:21,071 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:21,071 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:21,072 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:21,072 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:48:21,072 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:48:21,072 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:21,072 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:21,633 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:21,633 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:48:21,644 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:48:21,644 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:48:21,644 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:48:21,696 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:48:21,696 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:48:54,536 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:54,536 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:54,536 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:54,536 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:48:54,537 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:48:54,600 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:54,601 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '637771', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.748697ms'}
2022-04-27 17:48:54,601 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：637771
2022-04-27 17:48:54,601 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:54,601 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:54,601 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:54,603 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:48:54,603 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '637771', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:48:54,662 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:54,662 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzczNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTM0fQ.X1Gp3_DHFVNrKiyiXQ6DcPRi37pp8u8yalXyoBxCT5k'}, 'time': '14.695686ms'}
2022-04-27 17:48:54,662 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:48:54,662 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzczNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTM0fQ.X1Gp3_DHFVNrKiyiXQ6DcPRi37pp8u8yalXyoBxCT5k']
2022-04-27 17:48:54,662 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzczNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTM0fQ.X1Gp3_DHFVNrKiyiXQ6DcPRi37pp8u8yalXyoBxCT5k,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:54,665 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:54,665 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:48:54,665 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:48:54,665 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:48:54,665 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:48:54,665 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:54,665 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:48:54,667 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzczNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTM0fQ.X1Gp3_DHFVNrKiyiXQ6DcPRi37pp8u8yalXyoBxCT5k'}
2022-04-27 17:48:54,667 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:48:54,667 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:48:54,769 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:54,769 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.19998ms'}
2022-04-27 17:48:54,769 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:48:54,769 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:48:54,769 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:54,769 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:54,769 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:54,769 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:54,769 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:48:54,769 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:48:54,769 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:54,769 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:54,772 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:54,773 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:54,773 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:48:54,773 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:48:54,773 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:54,773 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:54,773 ARS INFO test_role.py [40行]: fdfdsfsdfsadfDELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:54,773 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:55,447 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:55,447 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:55,447 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1NzczNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTM0fQ.X1Gp3_DHFVNrKiyiXQ6DcPRi37pp8u8yalXyoBxCT5k'}
2022-04-27 17:48:55,449 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:48:55,449 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:55,519 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:55,519 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.212835ms'}
2022-04-27 17:48:55,519 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:55,519 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:55,519 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:55,519 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:48:55,519 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:48:55,519 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:55,519 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:56,182 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:56,182 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:48:56,195 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:48:56,195 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:48:56,195 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:48:56,214 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:48:56,215 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:48:59,726 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:59,726 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:59,726 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:59,726 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:48:59,726 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:48:59,800 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:59,801 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '922175', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.848087ms'}
2022-04-27 17:48:59,802 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：922175
2022-04-27 17:48:59,802 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:59,802 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:48:59,802 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:48:59,802 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:48:59,803 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '922175', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:48:59,881 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:59,881 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc0MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTQwfQ.gtnLMhWl7VsmfYmHOZs1726cjCAE0vUwLzjupdr_7sc'}, 'time': '14.459727ms'}
2022-04-27 17:48:59,881 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:48:59,881 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc0MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTQwfQ.gtnLMhWl7VsmfYmHOZs1726cjCAE0vUwLzjupdr_7sc']
2022-04-27 17:48:59,881 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc0MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTQwfQ.gtnLMhWl7VsmfYmHOZs1726cjCAE0vUwLzjupdr_7sc,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:59,883 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:59,883 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:48:59,883 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:48:59,883 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:48:59,883 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:48:59,883 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:48:59,883 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:48:59,884 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc0MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTQwfQ.gtnLMhWl7VsmfYmHOZs1726cjCAE0vUwLzjupdr_7sc'}
2022-04-27 17:48:59,884 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:48:59,884 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:48:59,943 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:48:59,943 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.248654ms'}
2022-04-27 17:48:59,944 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:48:59,944 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:48:59,944 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:48:59,944 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:48:59,944 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:48:59,944 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:59,944 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:48:59,944 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:48:59,944 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:48:59,944 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:48:59,950 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:48:59,950 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:59,950 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:48:59,950 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:48:59,950 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:48:59,950 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:48:59,950 ARS INFO test_role.py [40行]: fdfdsfsdfsadfDELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:48:59,950 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:49:00,633 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:49:00,634 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:49:00,634 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc0MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTQwfQ.gtnLMhWl7VsmfYmHOZs1726cjCAE0vUwLzjupdr_7sc'}
2022-04-27 17:49:00,636 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:49:00,636 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:49:00,724 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:49:00,726 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.189553ms'}
2022-04-27 17:49:00,726 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:49:00,726 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:49:00,726 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:49:00,726 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:49:00,726 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:49:00,726 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:49:00,726 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:49:01,374 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:49:01,375 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:49:01,384 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:49:01,385 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:49:01,385 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:49:01,411 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:49:01,411 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 17:49:40,662 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:49:40,662 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:49:40,662 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:49:40,663 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 17:49:40,664 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 17:49:40,753 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:49:40,753 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '343582', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.788599ms'}
2022-04-27 17:49:40,756 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：343582
2022-04-27 17:49:40,756 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:49:40,756 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:49:40,756 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 17:49:40,758 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 17:49:40,758 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '343582', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 17:49:40,884 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:49:40,884 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTgxfQ.uP0LYOhsIPsJK94zclSSTMFZvR3GzE65D1M9GiiYN2Q'}, 'time': '14.235176ms'}
2022-04-27 17:49:40,886 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 17:49:40,887 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTgxfQ.uP0LYOhsIPsJK94zclSSTMFZvR3GzE65D1M9GiiYN2Q']
2022-04-27 17:49:40,887 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTgxfQ.uP0LYOhsIPsJK94zclSSTMFZvR3GzE65D1M9GiiYN2Q,并设置为Data类实例化对象的属性和值。
2022-04-27 17:49:40,892 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:49:40,894 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 17:49:40,894 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 17:49:40,894 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 17:49:40,894 ARS INFO test_role.py [40行]: fdfdsfsdfsadfNone
2022-04-27 17:49:40,895 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:49:40,895 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 17:49:40,895 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTgxfQ.uP0LYOhsIPsJK94zclSSTMFZvR3GzE65D1M9GiiYN2Q'}
2022-04-27 17:49:40,897 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 17:49:40,899 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 17:49:40,974 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:49:40,974 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.020019ms'}
2022-04-27 17:49:40,974 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 17:49:40,975 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 17:49:40,975 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 17:49:40,975 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:49:40,976 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:49:40,976 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:49:40,976 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 17:49:40,976 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 17:49:40,976 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:49:40,976 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:49:40,982 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 17:49:40,982 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:49:40,982 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 17:49:40,983 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 17:49:40,983 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 17:49:40,983 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:49:40,983 ARS INFO test_role.py [40行]: fdfdsfsdfsadfDELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:49:40,983 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 17:49:41,691 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 17:49:41,691 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 17:49:41,692 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1Nzc4MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUxOTgxfQ.uP0LYOhsIPsJK94zclSSTMFZvR3GzE65D1M9GiiYN2Q'}
2022-04-27 17:49:41,694 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 17:49:41,695 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 17:49:41,774 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 17:49:41,774 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.39163ms'}
2022-04-27 17:49:41,774 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 17:49:41,774 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 17:49:41,775 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:49:41,775 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 17:49:41,775 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 17:49:41,775 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 17:49:41,775 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 17:49:42,411 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 17:49:42,411 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 17:49:42,423 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 17:49:42,424 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 17:49:42,424 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 17:49:42,463 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 17:49:42,463 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:01:40,605 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:01:40,605 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:01:40,605 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:01:40,606 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 18:01:40,606 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 18:01:40,720 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:01:40,721 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '166847', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.065718ms'}
2022-04-27 18:01:40,723 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：166847
2022-04-27 18:01:40,723 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:01:40,724 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:01:40,724 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:01:40,726 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 18:01:40,726 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '166847', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 18:01:40,822 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:01:40,822 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1ODUwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUyNzAxfQ.gPdkxaD6FuP1tC1Gdvu72ipoiznMei6fj3aFv5NWY70'}, 'time': '14.498339ms'}
2022-04-27 18:01:40,822 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 18:01:40,823 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1ODUwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUyNzAxfQ.gPdkxaD6FuP1tC1Gdvu72ipoiznMei6fj3aFv5NWY70']
2022-04-27 18:01:40,823 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1ODUwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUyNzAxfQ.gPdkxaD6FuP1tC1Gdvu72ipoiznMei6fj3aFv5NWY70,并设置为Data类实例化对象的属性和值。
2022-04-27 18:01:40,825 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:01:40,825 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 18:01:40,827 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:01:40,827 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:01:40,827 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:01:40,827 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 18:01:40,827 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1ODUwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUyNzAxfQ.gPdkxaD6FuP1tC1Gdvu72ipoiznMei6fj3aFv5NWY70'}
2022-04-27 18:01:40,828 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 18:01:40,828 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 18:01:40,884 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:01:40,884 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '1.795144ms'}
2022-04-27 18:01:40,884 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 18:01:40,884 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 18:01:40,884 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 18:01:40,884 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:01:40,886 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:01:40,886 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:01:40,886 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 18:01:40,886 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 18:01:40,886 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:01:40,886 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:01:40,889 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:01:40,889 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:01:40,889 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:01:40,891 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:01:40,891 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': None, 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:01:40,891 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:01:40,891 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 18:01:41,560 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:01:41,560 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:01:41,561 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1ODUwMSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDUyNzAxfQ.gPdkxaD6FuP1tC1Gdvu72ipoiznMei6fj3aFv5NWY70'}
2022-04-27 18:01:41,562 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:01:41,563 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:01:41,648 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:01:41,648 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.494187ms'}
2022-04-27 18:01:41,648 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:01:41,648 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:01:41,648 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:01:41,648 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:01:41,648 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:01:41,648 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:01:41,648 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:01:42,292 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 18:01:42,292 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:01:42,303 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:01:42,304 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:01:42,304 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:01:42,336 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:01:42,336 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:25:50,690 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:50,691 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:25:50,691 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:25:50,692 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 18:25:50,692 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 18:25:50,802 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:50,802 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '553654', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.735604ms'}
2022-04-27 18:25:50,806 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：553654
2022-04-27 18:25:50,806 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:50,806 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:25:50,807 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:25:50,808 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 18:25:50,808 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '553654', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 18:25:50,881 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:50,881 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc'}, 'time': '14.126883ms'}
2022-04-27 18:25:50,881 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 18:25:50,883 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc']
2022-04-27 18:25:50,883 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc,并设置为Data类实例化对象的属性和值。
2022-04-27 18:25:50,888 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:25:50,888 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 18:25:50,888 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:25:50,888 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:25:50,888 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:50,888 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 18:25:50,888 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc'}
2022-04-27 18:25:50,888 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 18:25:50,889 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 18:25:50,958 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:50,958 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '1.923847ms'}
2022-04-27 18:25:50,959 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 18:25:50,959 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 18:25:50,959 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 18:25:50,959 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:25:50,959 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:25:50,960 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:50,960 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 18:25:50,960 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 18:25:50,960 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:50,960 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:25:50,963 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:25:50,963 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:25:50,963 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:25:50,963 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:25:50,963 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:25:50,963 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:25:50,963 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 18:25:51,652 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:51,652 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:25:51,654 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc'}
2022-04-27 18:25:51,654 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:25:51,654 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:25:51,743 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:51,743 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.373536ms'}
2022-04-27 18:25:51,743 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:25:51,744 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:25:51,744 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:51,744 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:25:51,745 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:25:51,745 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:51,745 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:25:52,433 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 18:25:52,433 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:25:52,444 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:25:52,446 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:25:52,446 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:25:52,479 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:25:52,479 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:25:52,487 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:25:52,505 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:25:52,506 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:25:52,506 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:25:52,507 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:25:52,507 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:25:52,507 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-27 18:25:53,193 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:53,195 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:25:53,195 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc'}
2022-04-27 18:25:53,196 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:25:53,196 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:25:53,263 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:53,263 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.337212ms'}
2022-04-27 18:25:53,263 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:25:53,263 ARS INFO my_assert.py [29行]: 预期结果为：1
2022-04-27 18:25:53,263 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 18:25:53,263 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:25:53,263 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:25:53,263 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:53,263 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 18:25:53,930 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-27 18:25:53,930 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:25:53,944 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:25:53,944 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:25:53,944 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:25:53,961 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:25:53,961 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:25:53,961 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 18:25:54,688 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:25:54,688 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:25:54,688 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:25:54,688 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:25:54,689 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:25:54,689 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:25:54,689 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-27 18:25:55,348 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:55,348 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:25:55,350 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc'}
2022-04-27 18:25:55,351 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:25:55,351 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:25:55,460 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:55,460 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.338843ms'}
2022-04-27 18:25:55,460 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:25:55,462 ARS INFO my_assert.py [29行]: 预期结果为：1
2022-04-27 18:25:55,462 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 18:25:55,462 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:25:55,462 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:25:55,463 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:55,463 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 18:25:56,089 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-27 18:25:56,089 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:25:56,100 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:25:56,100 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:25:56,102 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:25:56,136 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:25:56,136 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:25:56,136 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 18:25:56,153 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:25:56,153 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:25:56,153 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:25:56,153 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:25:56,154 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:25:56,154 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:25:56,154 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:25:56,154 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:25:56,154 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY1OTk1MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MTUxfQ.dw2LhuqzSnK07utX8mdGf2tvwRwyBrkIlf3-G74SXFc'}
2022-04-27 18:25:56,155 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:25:56,155 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:25:56,241 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:25:56,243 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.771502ms'}
2022-04-27 18:25:56,243 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:25:56,243 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:25:56,243 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:56,243 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 18:25:56,243 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-27 18:25:56,243 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:25:56,244 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:26:52,168 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:52,168 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:26:52,169 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:26:52,169 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 18:26:52,169 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 18:26:52,269 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:52,270 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '156554', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.93674ms'}
2022-04-27 18:26:52,270 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：156554
2022-04-27 18:26:52,270 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:52,270 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:26:52,270 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:26:52,271 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 18:26:52,272 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '156554', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 18:26:52,355 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:52,355 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI'}, 'time': '14.584761ms'}
2022-04-27 18:26:52,355 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 18:26:52,356 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI']
2022-04-27 18:26:52,356 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI,并设置为Data类实例化对象的属性和值。
2022-04-27 18:26:52,360 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:26:52,361 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 18:26:52,361 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:26:52,361 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:26:52,363 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:52,363 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 18:26:52,363 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI'}
2022-04-27 18:26:52,365 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 18:26:52,366 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 18:26:52,436 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:52,436 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.2148ms'}
2022-04-27 18:26:52,436 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 18:26:52,437 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 18:26:52,437 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 18:26:52,437 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:26:52,437 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:26:52,437 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:52,437 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 18:26:52,437 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 18:26:52,437 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:52,438 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:26:52,440 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:26:52,440 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:26:52,440 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:26:52,440 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:26:52,440 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:26:52,441 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:26:52,441 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 18:26:53,244 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:53,244 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:26:53,246 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI'}
2022-04-27 18:26:53,246 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:26:53,247 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:26:53,337 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:53,337 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.353524ms'}
2022-04-27 18:26:53,337 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:26:53,337 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:26:53,338 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:53,338 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:26:53,338 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:26:53,338 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:53,338 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:26:54,003 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 18:26:54,003 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:26:54,019 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:26:54,019 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:26:54,020 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:26:54,035 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:26:54,036 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:26:54,049 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:26:54,049 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:26:54,049 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:26:54,049 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:26:54,051 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:26:54,051 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:26:54,051 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-27 18:26:54,720 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:54,720 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:26:54,720 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI'}
2022-04-27 18:26:54,721 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:26:54,721 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:26:54,825 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:54,827 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.274705ms'}
2022-04-27 18:26:54,827 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:26:54,827 ARS INFO my_assert.py [29行]: 预期结果为：1
2022-04-27 18:26:54,827 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 18:26:54,828 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:26:54,828 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:26:54,828 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:54,828 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 18:26:55,503 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-27 18:26:55,503 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:26:55,516 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:26:55,518 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:26:55,518 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:26:55,536 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:26:55,536 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:26:55,536 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 18:26:56,296 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:26:56,296 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:26:56,296 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:26:56,296 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:26:56,296 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":1,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:26:56,296 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:26:56,296 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-27 18:26:56,977 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:56,979 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:26:56,979 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI'}
2022-04-27 18:26:56,980 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:26:56,980 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:26:57,052 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:57,054 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.341854ms'}
2022-04-27 18:26:57,054 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:26:57,054 ARS INFO my_assert.py [29行]: 预期结果为：1
2022-04-27 18:26:57,054 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-27 18:26:57,054 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:26:57,054 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:26:57,055 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:57,055 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-27 18:26:57,710 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-27 18:26:57,710 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:26:57,720 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:26:57,720 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:26:57,720 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:26:57,747 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:26:57,748 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:26:57,748 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-27 18:26:57,774 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:26:57,774 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:26:57,775 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:26:57,775 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:26:57,775 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:26:57,775 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:26:57,776 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:26:57,776 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:26:57,776 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAxMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjEyfQ.F_P9DNIGNrPrT2b3oAKlkS2wZZ0YXenVLBJvb4x8uRI'}
2022-04-27 18:26:57,776 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:26:57,776 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:26:57,851 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:26:57,851 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.743711ms'}
2022-04-27 18:26:57,851 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:26:57,851 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:26:57,852 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:57,852 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 18:26:57,852 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-27 18:26:57,852 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:26:57,852 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:27:05,720 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:05,720 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:27:05,720 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:27:05,720 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 18:27:05,720 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 18:27:05,789 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:05,789 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '160683', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.549598ms'}
2022-04-27 18:27:05,790 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：160683
2022-04-27 18:27:05,790 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:05,790 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:27:05,790 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:27:05,791 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 18:27:05,791 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '160683', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 18:27:05,851 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:05,851 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg'}, 'time': '15.078702ms'}
2022-04-27 18:27:05,851 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 18:27:05,851 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg']
2022-04-27 18:27:05,852 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg,并设置为Data类实例化对象的属性和值。
2022-04-27 18:27:05,856 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:27:05,856 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 18:27:05,857 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:27:05,857 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:27:05,857 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:05,857 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 18:27:05,857 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg'}
2022-04-27 18:27:05,859 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 18:27:05,859 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 18:27:05,927 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:05,927 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.303172ms'}
2022-04-27 18:27:05,927 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 18:27:05,927 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 18:27:05,927 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 18:27:05,927 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:27:05,927 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:27:05,927 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:05,927 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 18:27:05,927 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 18:27:05,927 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:05,927 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:27:05,930 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:27:05,930 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:27:05,930 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:27:05,930 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:27:05,930 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:27:05,930 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:27:05,931 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 18:27:06,616 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:06,616 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:27:06,617 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg'}
2022-04-27 18:27:06,618 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:27:06,618 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:27:06,707 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:06,707 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.173771ms'}
2022-04-27 18:27:06,707 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:27:06,707 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:27:06,707 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:06,707 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:27:06,707 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:27:06,707 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:06,707 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:27:07,340 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 18:27:07,342 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:27:07,356 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:27:07,356 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:27:07,358 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:27:07,375 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:27:07,375 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:27:07,388 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:27:07,388 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:27:07,388 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:27:07,388 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:27:07,390 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:27:07,390 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:27:07,390 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-27 18:27:08,096 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:08,096 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:27:08,096 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg'}
2022-04-27 18:27:08,097 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:27:08,097 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:27:08,151 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:08,151 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.277862ms'}
2022-04-27 18:27:08,152 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:27:08,152 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:27:08,152 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:08,152 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:27:08,153 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:27:08,153 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:08,153 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:27:08,830 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-27 18:27:08,831 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:27:08,844 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:27:08,844 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:27:08,844 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:27:08,871 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:27:08,871 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:27:08,878 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:27:08,878 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:27:08,878 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:27:08,878 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:27:08,878 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:27:08,878 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:27:08,878 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-27 18:27:09,529 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:09,529 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:27:09,529 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg'}
2022-04-27 18:27:09,532 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:27:09,532 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:27:09,633 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:09,633 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.440848ms'}
2022-04-27 18:27:09,634 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:27:09,634 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:27:09,635 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:09,635 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:27:09,635 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:27:09,636 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:09,636 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:27:10,281 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-27 18:27:10,281 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:27:10,294 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:27:10,295 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:27:10,295 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:27:10,323 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:27:10,323 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:27:10,329 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:27:10,329 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:27:10,329 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:27:10,329 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:27:10,329 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:27:10,329 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:27:10,331 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:27:10,331 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:27:10,331 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDAyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0MjI2fQ.j8q98ojxRRK0mbR9Qk6whDhGXRGTn2NSUn3dmn_9cXg'}
2022-04-27 18:27:10,332 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:27:10,332 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:27:10,387 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:27:10,387 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.723462ms'}
2022-04-27 18:27:10,387 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:27:10,387 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:27:10,388 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:10,388 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 18:27:10,388 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-27 18:27:10,388 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:27:10,388 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:46,628 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:46,630 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:46,630 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:35:46,630 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-27 18:35:46,630 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-27 18:35:46,729 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:46,729 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '562160', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.152614ms'}
2022-04-27 18:35:46,730 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：562160
2022-04-27 18:35:46,730 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:46,730 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:46,730 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-27 18:35:46,732 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-27 18:35:46,732 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '562160', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-27 18:35:46,838 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:46,838 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}, 'time': '55.009102ms'}
2022-04-27 18:35:46,838 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-27 18:35:46,838 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY']
2022-04-27 18:35:46,838 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY,并设置为Data类实例化对象的属性和值。
2022-04-27 18:35:46,844 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:46,844 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-27 18:35:46,845 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:35:46,845 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:35:46,845 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:46,845 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-27 18:35:46,845 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:46,847 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-27 18:35:46,847 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-27 18:35:46,919 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:46,919 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.225697ms'}
2022-04-27 18:35:46,919 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-27 18:35:46,920 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-27 18:35:46,920 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-27 18:35:46,920 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:35:46,921 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:35:46,921 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:46,921 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-27 18:35:46,921 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-27 18:35:46,921 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:46,921 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:46,926 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:46,927 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:35:46,927 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:35:46,927 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:35:46,927 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:35:46,927 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:46,927 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-27 18:35:47,651 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:47,651 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:47,651 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:47,651 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:47,652 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:47,712 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:47,712 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.177075ms'}
2022-04-27 18:35:47,713 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:35:47,713 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:35:47,713 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:47,713 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:35:47,713 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:35:47,713 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:47,713 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:48,332 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-27 18:35:48,332 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:35:48,344 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:35:48,344 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:35:48,345 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:35:48,388 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:35:48,388 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:35:48,395 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:48,395 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:35:48,396 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:35:48,396 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:35:48,396 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:35:48,398 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:35:48,398 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-27 18:35:49,057 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:49,057 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:49,057 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:49,059 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:49,059 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-27 18:35:49,132 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:49,132 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.442573ms'}
2022-04-27 18:35:49,134 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:35:49,134 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:35:49,134 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:49,134 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:35:49,134 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:35:49,134 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:49,134 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:49,744 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-27 18:35:49,744 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:35:49,756 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:35:49,756 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:35:49,756 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:35:49,787 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:35:49,788 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:35:49,793 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:49,795 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:35:49,795 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:35:49,795 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:35:49,796 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-27 18:35:49,796 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:35:49,796 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-27 18:35:50,484 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:50,484 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:50,484 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:50,486 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:50,486 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-27 18:35:50,578 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:50,578 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.268502ms'}
2022-04-27 18:35:50,578 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-27 18:35:50,578 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-27 18:35:50,579 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:50,579 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-27 18:35:50,579 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-27 18:35:50,579 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:50,579 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:51,238 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-27 18:35:51,239 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-27 18:35:51,255 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-27 18:35:51,255 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-27 18:35:51,256 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-27 18:35:51,269 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-27 18:35:51,269 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-27 18:35:51,275 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:51,276 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:51,276 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:35:51,276 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:35:51,276 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:51,276 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:51,276 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:51,276 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:51,276 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:51,279 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:51,279 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:51,348 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:51,348 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.726045ms'}
2022-04-27 18:35:51,350 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:35:51,350 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:35:51,350 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:51,350 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-27 18:35:51,350 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-27 18:35:51,350 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:51,350 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:51,355 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:51,355 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': None, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:51,355 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:35:51,355 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:35:52,088 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:52,088 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': None, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:52,088 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:35:52,088 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:35:52,088 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:52,088 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:52,088 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:52,088 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:52,088 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:52,088 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:52,153 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:52,154 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.320245ms'}
2022-04-27 18:35:52,154 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:35:52,154 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:35:52,154 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:52,154 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-27 18:35:52,154 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-27 18:35:52,154 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:52,154 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:52,158 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:52,158 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:52,158 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-27 18:35:52,158 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-27 18:35:52,159 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:52,159 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:52,159 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:52,159 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:52,159 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:52,160 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:52,160 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:52,235 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:52,236 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.164816ms'}
2022-04-27 18:35:52,236 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:35:52,236 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:35:52,236 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:52,236 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-27 18:35:52,236 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-27 18:35:52,236 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:52,236 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-27 18:35:52,241 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-27 18:35:52,241 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-27 18:35:52,243 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-27 18:35:52,243 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-27 18:35:52,243 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:52,243 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-27 18:35:52,243 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-27 18:35:52,243 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTY2MDU0NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMDU0NzQ3fQ.EOYXhO6FT6OPYrIYcrfCMf9yrTJDnln2kv_aZCTlPdY'}
2022-04-27 18:35:52,244 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-27 18:35:52,244 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-27 18:35:52,302 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-27 18:35:52,302 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.373062ms'}
2022-04-27 18:35:52,302 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-27 18:35:52,302 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-27 18:35:52,302 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:52,302 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-27 18:35:52,302 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-27 18:35:52,302 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-27 18:35:52,302 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:36,827 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:36,836 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:36,836 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 09:54:36,838 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 09:54:36,838 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 09:54:37,156 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:37,158 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '572086', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.747712ms'}
2022-04-28 09:54:37,158 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：572086
2022-04-28 09:54:37,158 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:37,158 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:37,159 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 09:54:37,159 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 09:54:37,159 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '572086', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 09:54:37,240 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:37,240 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}, 'time': '14.488797ms'}
2022-04-28 09:54:37,240 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 09:54:37,240 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY']
2022-04-28 09:54:37,240 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY,并设置为Data类实例化对象的属性和值。
2022-04-28 09:54:37,243 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:37,243 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 09:54:37,243 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 09:54:37,244 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 09:54:37,244 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:37,244 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 09:54:37,244 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:37,246 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 09:54:37,246 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 09:54:37,303 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:37,303 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '1.89948ms'}
2022-04-28 09:54:37,303 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 09:54:37,303 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 09:54:37,303 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 09:54:37,303 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 09:54:37,303 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 09:54:37,303 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:37,304 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 09:54:37,304 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 09:54:37,304 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:37,304 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:37,347 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:37,347 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 09:54:37,347 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 09:54:37,347 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 09:54:37,347 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 09:54:37,348 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:37,348 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 09:54:38,049 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:38,049 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:38,049 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:38,051 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:38,051 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:38,137 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:38,137 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.127165ms'}
2022-04-28 09:54:38,137 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 09:54:38,137 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 09:54:38,139 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:38,139 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 09:54:38,139 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 09:54:38,139 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:38,139 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:38,792 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 09:54:38,792 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 09:54:38,806 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 09:54:38,807 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 09:54:38,807 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 09:54:38,819 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 09:54:38,820 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 09:54:38,832 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:38,833 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 09:54:38,833 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 09:54:38,835 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 09:54:38,835 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 09:54:38,835 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 09:54:38,835 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 09:54:39,535 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:39,535 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:39,535 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:39,536 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:39,536 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 09:54:39,617 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:39,617 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.136608ms'}
2022-04-28 09:54:39,617 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 09:54:39,617 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 09:54:39,617 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:39,618 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 09:54:39,618 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 09:54:39,618 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:39,618 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:40,260 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 09:54:40,262 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 09:54:40,272 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 09:54:40,272 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 09:54:40,272 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 09:54:40,297 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 09:54:40,297 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 09:54:40,307 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:40,307 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 09:54:40,308 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 09:54:40,308 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 09:54:40,308 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 09:54:40,308 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 09:54:40,309 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 09:54:41,016 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:41,016 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:41,017 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:41,019 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:41,019 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 09:54:41,094 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:41,095 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.295568ms'}
2022-04-28 09:54:41,095 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 09:54:41,095 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 09:54:41,095 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:41,095 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 09:54:41,095 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 09:54:41,095 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:41,095 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:41,739 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 09:54:41,739 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 09:54:41,750 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 09:54:41,750 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 09:54:41,750 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 09:54:41,782 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 09:54:41,782 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 09:54:41,789 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:41,790 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:41,790 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 09:54:41,790 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 09:54:41,791 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:41,791 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:41,791 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:41,791 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:41,791 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:41,792 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:41,792 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:41,912 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:41,913 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.837387ms'}
2022-04-28 09:54:41,913 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 09:54:41,913 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 09:54:41,913 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:41,914 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 09:54:41,914 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 09:54:41,914 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:41,914 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:41,920 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:41,920 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:41,920 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 09:54:41,920 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 09:54:42,654 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:42,654 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:42,654 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 09:54:42,654 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 09:54:42,654 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:42,654 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:42,654 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:42,654 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:42,654 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:42,654 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:42,736 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:42,737 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.317424ms'}
2022-04-28 09:54:42,737 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 09:54:42,737 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 09:54:42,737 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:42,739 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 09:54:42,739 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 09:54:42,739 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:42,739 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:42,743 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:42,743 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:42,743 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 09:54:42,743 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 09:54:42,743 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:42,743 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:42,743 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:42,743 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:42,744 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:42,745 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:42,745 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:42,801 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:42,801 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '1.995362ms'}
2022-04-28 09:54:42,802 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 09:54:42,802 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 09:54:42,802 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:42,802 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 09:54:42,802 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 09:54:42,802 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:42,802 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 09:54:42,808 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 09:54:42,809 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 09:54:42,809 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 09:54:42,809 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 09:54:42,809 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:42,809 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 09:54:42,809 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 09:54:42,809 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNTY3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTA5ODc3fQ.cHQ-FbYHC5NSKG9ABeGwzHRijUTAoh7Px_3fsRsk4tY'}
2022-04-28 09:54:42,809 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 09:54:42,809 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 09:54:42,871 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 09:54:42,871 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.035669ms'}
2022-04-28 09:54:42,871 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 09:54:42,871 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 09:54:42,871 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:42,871 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 09:54:42,871 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 09:54:42,871 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 09:54:42,871 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:10:25,730 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:10:25,730 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:10:25,732 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:10:25,732 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:10:25,732 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:10:25,849 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:10:25,849 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '617456', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.459825ms'}
2022-04-28 10:10:25,851 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：617456
2022-04-28 10:10:25,851 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:10:25,851 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:10:25,851 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:10:25,852 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:10:25,852 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '617456', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:10:25,944 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:10:25,944 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEwODI2fQ.CWel_sO_PYMwGJ-XSWNJSuQETCaWIcrpvqyOlGz4IQA'}, 'time': '13.397812ms'}
2022-04-28 10:10:25,944 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:10:25,944 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEwODI2fQ.CWel_sO_PYMwGJ-XSWNJSuQETCaWIcrpvqyOlGz4IQA']
2022-04-28 10:10:25,944 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEwODI2fQ.CWel_sO_PYMwGJ-XSWNJSuQETCaWIcrpvqyOlGz4IQA,并设置为Data类实例化对象的属性和值。
2022-04-28 10:10:25,948 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:25,948 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:10:25,948 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:10:25,948 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:10:25,950 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:10:25,950 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:10:25,950 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEwODI2fQ.CWel_sO_PYMwGJ-XSWNJSuQETCaWIcrpvqyOlGz4IQA'}
2022-04-28 10:10:25,950 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:10:25,950 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:10:26,019 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:10:26,019 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.174027ms'}
2022-04-28 10:10:26,019 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:10:26,019 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:10:26,019 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:10:26,019 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:10:26,019 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:10:26,020 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:10:26,020 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:10:26,020 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:10:26,020 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:10:26,020 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:10:26,023 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,023 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,024 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:10:26,024 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:10:26,796 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,796 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,798 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:10:26,798 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:10:26,817 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,819 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,819 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:10:26,819 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:10:26,836 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,836 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,836 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:10:26,836 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:10:26,855 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,855 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,855 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:10:26,855 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:10:26,870 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,870 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,871 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:10:26,871 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:10:26,871 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:10:26,871 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:10:26,871 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:10:26,871 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEwODI2fQ.CWel_sO_PYMwGJ-XSWNJSuQETCaWIcrpvqyOlGz4IQA'}
2022-04-28 10:10:26,871 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:10:26,871 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:10:26,924 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:10:26,924 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.215285ms'}
2022-04-28 10:10:26,924 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:10:26,924 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:10:26,924 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:10:26,926 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:10:26,926 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:10:26,926 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:10:26,926 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:10:26,927 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,927 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,927 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:10:26,927 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:10:26,947 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:10:26,947 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:10:26,947 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:10:26,947 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:10:26,947 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:10:26,947 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:10:26,947 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:10:26,947 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjYyNiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEwODI2fQ.CWel_sO_PYMwGJ-XSWNJSuQETCaWIcrpvqyOlGz4IQA'}
2022-04-28 10:10:26,947 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:10:26,947 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:10:27,012 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:10:27,012 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.197464ms'}
2022-04-28 10:10:27,012 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:10:27,012 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:10:27,012 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:10:27,013 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:10:27,013 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:10:27,013 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:10:27,013 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:12,863 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:12,863 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:12,863 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:14:12,864 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:14:12,865 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:14:12,996 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:12,996 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '421992', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.653384ms'}
2022-04-28 10:14:12,996 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：421992
2022-04-28 10:14:12,996 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:12,996 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:12,996 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:14:12,996 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:14:12,996 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '421992', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:14:13,056 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:13,056 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}, 'time': '14.286654ms'}
2022-04-28 10:14:13,057 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:14:13,057 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo']
2022-04-28 10:14:13,057 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo,并设置为Data类实例化对象的属性和值。
2022-04-28 10:14:13,059 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:13,059 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:14:13,059 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:14:13,060 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:14:13,060 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:13,060 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:14:13,060 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:13,060 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:14:13,062 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:14:13,115 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:13,116 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.154905ms'}
2022-04-28 10:14:13,116 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:14:13,116 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:14:13,116 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:14:13,116 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:14:13,116 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:14:13,116 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:13,116 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:14:13,118 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:14:13,118 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:13,118 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:13,119 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:13,119 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:14:13,121 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:14:13,121 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:14:13,121 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:14:13,121 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:13,121 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:14:13,891 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:13,891 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:13,891 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:13,891 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:13,892 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:13,952 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:13,952 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.237053ms'}
2022-04-28 10:14:13,953 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:14:13,953 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:14:13,953 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:13,953 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:14:13,953 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:14:13,953 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:13,953 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:14,579 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:14:14,579 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:14:14,591 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:14:14,591 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:14:14,591 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:14:14,619 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:14:14,619 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:14:14,624 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:14,625 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:14:14,625 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:14:14,625 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:14:14,625 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:14:14,625 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:14:14,625 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:14:15,288 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:15,289 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:15,289 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:15,289 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:15,289 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:14:15,364 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:15,364 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.390287ms'}
2022-04-28 10:14:15,364 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:14:15,364 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:14:15,364 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:15,364 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:14:15,365 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:14:15,365 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:15,365 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:16,184 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:14:16,184 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:14:16,195 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:14:16,195 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:14:16,195 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:14:16,222 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:14:16,222 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:14:16,226 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:16,227 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:14:16,227 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:14:16,227 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:14:16,227 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:14:16,227 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:14:16,228 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:14:16,905 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:16,905 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:16,907 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:16,907 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:16,907 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:14:16,998 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:16,999 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.491771ms'}
2022-04-28 10:14:16,999 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:14:16,999 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:14:17,000 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:17,000 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:14:17,000 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:14:17,000 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:17,000 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:17,661 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:14:17,661 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:14:17,668 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:14:17,668 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:14:17,670 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:14:17,704 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:14:17,704 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:14:17,707 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:17,707 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:17,707 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:14:17,707 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:14:17,708 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:17,708 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:17,708 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:17,708 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:17,708 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:17,710 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:17,710 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:17,801 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:17,801 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.679471ms'}
2022-04-28 10:14:17,802 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:14:17,802 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:14:17,802 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:17,802 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:14:17,802 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:14:17,802 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:17,802 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:17,809 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:17,809 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:17,809 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:14:17,809 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:14:18,526 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:18,526 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:18,526 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:14:18,526 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:14:18,526 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:18,526 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:18,526 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:18,526 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:18,526 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:18,528 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:18,607 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:18,608 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.2469ms'}
2022-04-28 10:14:18,608 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:14:18,608 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:14:18,608 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:18,608 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:14:18,608 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:14:18,609 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:18,609 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:18,617 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:18,617 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:18,617 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:14:18,617 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:14:18,618 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:18,618 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:18,618 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:18,618 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:18,618 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:18,619 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:18,619 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:18,700 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:18,700 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.146279ms'}
2022-04-28 10:14:18,700 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:14:18,700 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:14:18,702 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:18,702 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:14:18,702 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:14:18,703 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:18,703 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:14:18,711 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:14:18,711 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:14:18,712 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:14:18,712 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:14:18,713 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:18,713 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:14:18,713 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:14:18,713 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjg1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMDUzfQ.Cu6j3Mgyjl-B6ovhaaibYwVI8BIYWkf8sDHT08F0BDo'}
2022-04-28 10:14:18,716 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:14:18,717 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:14:18,819 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:14:18,819 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.210328ms'}
2022-04-28 10:14:18,819 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:14:18,819 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:14:18,819 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:18,819 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:14:18,819 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:14:18,820 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:14:18,820 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:00,210 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:00,210 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:00,210 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:16:00,211 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:16:00,211 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:16:00,273 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:00,273 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '398708', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.521669ms'}
2022-04-28 10:16:00,275 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：398708
2022-04-28 10:16:00,275 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:00,275 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:00,275 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:16:00,276 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:16:00,276 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '398708', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:16:00,351 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:00,351 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}, 'time': '14.435102ms'}
2022-04-28 10:16:00,351 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:16:00,351 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk']
2022-04-28 10:16:00,352 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk,并设置为Data类实例化对象的属性和值。
2022-04-28 10:16:00,359 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:00,359 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:16:00,360 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:16:00,360 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:16:00,360 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:00,360 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:16:00,361 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:00,364 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:16:00,364 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:16:00,428 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:00,428 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.240728ms'}
2022-04-28 10:16:00,428 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:16:00,430 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:16:00,430 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:16:00,430 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:16:00,430 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:16:00,430 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:00,430 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:16:00,430 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:16:00,430 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:00,430 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:00,432 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:00,432 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:16:00,432 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:16:00,432 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:16:00,433 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:16:00,433 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:00,433 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:16:01,131 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:01,131 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:01,131 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:01,134 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:01,134 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:01,223 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:01,223 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.286637ms'}
2022-04-28 10:16:01,224 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:16:01,224 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:16:01,224 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:01,224 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:16:01,224 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:16:01,224 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:01,224 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:01,937 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:16:01,937 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:16:01,947 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:16:01,947 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:16:01,947 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:16:01,980 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:16:01,980 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:16:01,988 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:01,990 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:16:01,990 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:16:01,990 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:16:01,990 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:16:01,991 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:16:01,991 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:16:02,712 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:02,712 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:02,712 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:02,713 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:02,713 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:16:02,784 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:02,784 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.401181ms'}
2022-04-28 10:16:02,784 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:16:02,784 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:16:02,784 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:02,784 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:16:02,784 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:16:02,784 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:02,784 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:03,438 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:16:03,438 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:16:03,449 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:16:03,449 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:16:03,450 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:16:03,471 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:16:03,471 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:16:03,483 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:03,483 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:16:03,483 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:16:03,483 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:16:03,483 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:16:03,483 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:16:03,483 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:16:04,180 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:04,180 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:04,180 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:04,180 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:04,180 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:16:04,240 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:04,241 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.408807ms'}
2022-04-28 10:16:04,241 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:16:04,241 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:16:04,241 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:04,241 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:16:04,241 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:16:04,241 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:04,241 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:04,878 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:16:04,878 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:16:04,889 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:16:04,889 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:16:04,891 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:16:04,927 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:16:04,927 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:16:04,929 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:04,929 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:04,929 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:16:04,929 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:16:04,930 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:04,930 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:04,930 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:04,930 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:04,930 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:04,931 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:04,931 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:04,992 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:04,992 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.732718ms'}
2022-04-28 10:16:04,992 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:16:04,992 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:16:04,992 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:04,992 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:16:04,993 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:16:04,993 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:04,993 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:04,996 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:04,996 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:04,996 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:16:04,996 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:16:05,723 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:05,723 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:05,723 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:16:05,723 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:16:05,723 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:05,723 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:05,723 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:05,723 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:05,724 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:05,724 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:05,803 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:05,803 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.276011ms'}
2022-04-28 10:16:05,804 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:16:05,804 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:16:05,804 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:05,806 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:16:05,806 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:16:05,806 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:05,806 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:05,809 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:05,811 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:05,811 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:16:05,811 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:16:05,811 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:05,811 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:05,812 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:05,812 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:05,812 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:05,812 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:05,812 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:05,878 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:05,878 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.090759ms'}
2022-04-28 10:16:05,878 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:16:05,878 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:16:05,878 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:05,878 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:16:05,880 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:16:05,880 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:05,880 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:16:05,887 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:16:05,887 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:16:05,887 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:16:05,888 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:16:05,888 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:05,888 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:16:05,888 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:16:05,888 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNjk2MCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMTYwfQ.Uw-KCPWRPaHphpJYwBeRyKBm18SfVavuhMljaLdbkpk'}
2022-04-28 10:16:05,888 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:16:05,888 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:16:05,958 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:16:05,958 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.006958ms'}
2022-04-28 10:16:05,958 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:16:05,959 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:16:05,959 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:05,959 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:16:05,959 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:16:05,959 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:16:05,959 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:03,524 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:03,524 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:03,524 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:17:03,526 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:17:03,526 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:17:03,605 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:03,606 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '052663', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.496966ms'}
2022-04-28 10:17:03,606 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：052663
2022-04-28 10:17:03,606 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:03,606 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:03,607 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:17:03,607 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:17:03,607 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '052663', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:17:03,689 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:03,689 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}, 'time': '13.691136ms'}
2022-04-28 10:17:03,690 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:17:03,691 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8']
2022-04-28 10:17:03,691 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8,并设置为Data类实例化对象的属性和值。
2022-04-28 10:17:03,700 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:03,700 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:17:03,702 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:17:03,702 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:17:03,703 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:03,703 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:17:03,703 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:03,705 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:17:03,705 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:17:03,772 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:03,773 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.350825ms'}
2022-04-28 10:17:03,774 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:17:03,775 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:17:03,775 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:17:03,775 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:17:03,776 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:03,776 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:03,776 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:17:03,776 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:17:03,776 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:03,776 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:03,785 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:03,785 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:03,787 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:03,787 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:03,788 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:03,788 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:03,788 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:17:04,470 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:04,470 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:04,470 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:04,473 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:04,473 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:04,548 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:04,548 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.068403ms'}
2022-04-28 10:17:04,549 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:04,549 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:04,549 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:04,549 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-28 10:17:04,549 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:17:04,549 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:04,549 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 10:17:05,200 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:17:05,200 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:17:05,212 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：0
2022-04-28 10:17:05,212 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:17:05,212 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-28 10:17:05,243 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:17:05,243 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-28 10:17:05,243 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-28 10:17:05,961 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:05,961 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:05,961 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:05,961 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:05,963 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"1","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:05,963 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': '1', 'note': ''}
2022-04-28 10:17:05,963 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:17:06,636 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:06,636 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:06,636 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:06,639 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:06,639 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': '1', 'note': ''}
2022-04-28 10:17:06,697 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:06,697 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.115963ms'}
2022-04-28 10:17:06,699 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:06,699 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:06,699 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:06,699 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-28 10:17:06,699 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:17:06,699 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:06,699 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 10:17:07,355 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:17:07,356 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:17:07,371 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：0
2022-04-28 10:17:07,371 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:17:07,371 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-28 10:17:07,384 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:17:07,384 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-28 10:17:07,385 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-28 10:17:07,406 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:07,407 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:07,407 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:07,407 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:07,407 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"1"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:07,407 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': '1'}
2022-04-28 10:17:07,407 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:17:08,110 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:08,110 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:08,110 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:08,111 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:08,111 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': '1'}
2022-04-28 10:17:08,182 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:08,183 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.231893ms'}
2022-04-28 10:17:08,183 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:08,183 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:08,183 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:08,183 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-28 10:17:08,183 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:17:08,183 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:08,184 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 10:17:08,812 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:17:08,814 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:17:08,822 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：0
2022-04-28 10:17:08,822 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:17:08,822 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>False
2022-04-28 10:17:08,859 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:17:08,859 ARS ERROR my_assert.py [79行]: 部分数据库断言失败，请检查结果是False的断言
2022-04-28 10:17:08,859 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-28 10:17:08,871 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:08,872 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:08,872 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:08,872 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:08,872 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:08,872 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:08,872 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:08,872 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:08,872 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:08,873 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:08,873 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:08,931 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:08,931 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.229454ms'}
2022-04-28 10:17:08,931 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:08,931 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:08,931 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:08,931 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-28 10:17:08,931 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:17:08,931 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:08,932 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 10:17:08,932 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-28 10:17:08,940 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:08,940 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:08,940 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:08,940 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:08,953 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:08,953 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:08,953 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:17:08,953 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:17:08,953 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:08,953 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:08,953 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:08,953 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:08,955 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:08,955 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:09,020 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:09,020 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.071292ms'}
2022-04-28 10:17:09,020 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:09,020 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:09,020 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:09,020 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:17:09,020 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:17:09,020 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:09,022 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:09,023 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:09,023 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:09,023 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:09,023 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:09,023 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"1","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:09,023 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:09,024 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:09,024 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:09,024 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:09,024 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:09,024 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': '1', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:09,089 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:09,089 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '请求参数格式异常', 'data': {}, 'time': '2.165057ms'}
2022-04-28 10:17:09,091 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:09,091 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:09,091 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:09,091 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：请求参数格式异常
2022-04-28 10:17:09,091 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:17:09,091 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 10:17:09,091 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 10:17:09,091 ARS ERROR test_role.py [60行]: 用例执行失败
2022-04-28 10:17:09,100 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:09,100 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:09,100 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:17:09,102 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:17:09,102 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:09,102 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:09,102 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:09,102 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzAyNCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjI0fQ.eCKlevFCH336Kc7Qm5wJR7FA1R02krOpx_XWenWCko8'}
2022-04-28 10:17:09,102 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:09,103 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:09,158 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:09,158 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.283805ms'}
2022-04-28 10:17:09,159 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:09,159 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:09,159 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:09,159 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:17:09,159 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:17:09,159 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:09,159 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:36,011 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:36,011 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:36,011 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:17:36,012 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:17:36,012 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:17:36,068 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:36,069 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '532747', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.012984ms'}
2022-04-28 10:17:36,070 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：532747
2022-04-28 10:17:36,070 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:36,070 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:36,070 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:17:36,071 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:17:36,071 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '532747', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:17:36,147 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:36,148 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}, 'time': '14.062278ms'}
2022-04-28 10:17:36,148 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:17:36,148 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q']
2022-04-28 10:17:36,148 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q,并设置为Data类实例化对象的属性和值。
2022-04-28 10:17:36,151 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:36,151 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:17:36,151 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:17:36,152 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:17:36,152 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:36,152 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:17:36,152 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:36,156 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:17:36,156 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:17:36,220 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:36,220 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.244521ms'}
2022-04-28 10:17:36,220 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:17:36,220 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:17:36,222 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:17:36,222 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:17:36,222 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:36,222 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:36,222 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:17:36,222 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:17:36,222 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:36,223 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:36,224 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:36,224 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:36,224 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:36,224 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:36,224 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:36,225 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:36,225 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:17:36,894 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:36,894 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:36,894 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:36,895 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:36,895 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:36,960 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:36,961 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.244223ms'}
2022-04-28 10:17:36,961 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:17:36,961 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:36,961 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:36,961 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:17:36,961 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:17:36,961 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:36,961 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:37,559 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:17:37,559 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:17:37,572 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:17:37,572 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:17:37,572 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:17:37,606 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:17:37,606 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:17:37,615 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:37,615 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:37,615 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:37,615 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:37,615 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:37,615 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:17:37,616 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:17:38,269 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:38,270 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:38,270 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:38,272 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:38,272 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:17:38,361 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:38,361 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.403598ms'}
2022-04-28 10:17:38,363 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:17:38,363 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:38,363 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:38,363 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:17:38,364 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:17:38,364 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:38,364 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:38,982 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:17:38,982 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:17:38,988 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:17:38,990 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:17:38,990 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:17:39,035 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:17:39,035 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:17:39,041 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:39,041 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:39,041 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:39,041 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:39,042 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:17:39,042 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:17:39,042 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:17:39,867 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:39,867 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:39,867 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:39,868 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:39,868 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:17:39,943 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:39,943 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.374317ms'}
2022-04-28 10:17:39,943 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:17:39,943 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:17:39,943 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:39,943 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:17:39,943 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:17:39,943 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:39,943 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:40,588 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:17:40,590 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:17:40,601 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:17:40,603 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:17:40,603 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:17:40,625 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:17:40,625 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:17:40,631 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:40,631 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:40,632 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:40,632 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:40,633 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:40,633 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:40,634 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:40,634 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:40,634 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:40,636 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:40,636 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:40,719 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:40,720 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.663726ms'}
2022-04-28 10:17:40,720 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:40,720 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:40,720 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:40,720 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:17:40,720 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:17:40,721 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:40,721 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:40,726 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:40,726 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:40,726 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:40,726 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:41,467 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:41,468 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:41,468 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:17:41,468 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:17:41,468 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:41,468 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:41,468 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:41,468 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:41,470 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:41,470 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:41,524 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:41,524 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.289216ms'}
2022-04-28 10:17:41,524 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:41,526 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:41,526 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:41,526 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:17:41,526 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:17:41,526 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:41,526 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:41,528 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:41,528 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:41,528 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:17:41,528 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:17:41,528 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:41,529 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:41,529 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:41,529 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:41,529 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:41,529 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:41,529 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:41,588 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:41,588 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.30385ms'}
2022-04-28 10:17:41,588 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:41,588 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:41,588 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:41,588 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:17:41,588 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:17:41,588 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:41,588 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:17:41,591 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:17:41,591 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:17:41,591 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:17:41,591 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:17:41,591 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:41,591 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:17:41,592 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:17:41,592 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA1NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjU2fQ.JQB516Ae3RffX3HoMt7DtnRvNw4ifQ03S4uPEz9et-Q'}
2022-04-28 10:17:41,592 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:17:41,592 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:17:41,656 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:17:41,656 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.255351ms'}
2022-04-28 10:17:41,656 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:17:41,656 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:17:41,656 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:41,656 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:17:41,656 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:17:41,656 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:17:41,656 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:16,256 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:16,256 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:16,256 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:18:16,257 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:18:16,257 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:18:16,332 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:16,334 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '590099', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.60119ms'}
2022-04-28 10:18:16,334 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：590099
2022-04-28 10:18:16,334 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:16,334 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:16,335 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:18:16,335 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:18:16,335 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '590099', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:18:16,444 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:16,446 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}, 'time': '14.435341ms'}
2022-04-28 10:18:16,446 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:18:16,446 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo']
2022-04-28 10:18:16,446 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo,并设置为Data类实例化对象的属性和值。
2022-04-28 10:18:16,450 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:16,450 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:18:16,450 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:18:16,450 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:18:16,450 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:16,450 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:18:16,450 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:16,451 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:18:16,451 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:18:16,496 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:16,496 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.114381ms'}
2022-04-28 10:18:16,496 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:18:16,497 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:18:16,497 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:18:16,497 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:18:16,497 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:18:16,497 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:16,497 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:18:16,497 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:18:16,497 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:16,497 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:16,500 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:16,500 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:18:16,500 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:18:16,500 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:18:16,500 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:18:16,500 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:16,500 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:18:17,171 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:17,171 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:17,171 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:17,172 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:17,172 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:17,256 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:17,257 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.11633ms'}
2022-04-28 10:18:17,257 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:18:17,257 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:18:17,257 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:17,257 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:18:17,259 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:18:17,259 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:17,259 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:17,905 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:18:17,905 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:18:17,918 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:18:17,919 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:18:17,919 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:18:17,944 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:18:17,944 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:18:17,950 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:17,950 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:18:17,950 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:18:17,950 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:18:17,950 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:18:17,950 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:18:17,950 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:18:18,623 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:18,623 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:18,624 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:18,625 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:18,625 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:18:18,695 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:18,695 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.267236ms'}
2022-04-28 10:18:18,696 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:18:18,696 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:18:18,696 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:18,696 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:18:18,696 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:18:18,696 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:18,696 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:19,360 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:18:19,360 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:18:19,376 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:18:19,377 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:18:19,377 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:18:19,391 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:18:19,392 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:18:19,403 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:19,404 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:18:19,404 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:18:19,404 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:18:19,404 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:18:19,404 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:18:19,404 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:18:20,102 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:20,102 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:20,103 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:20,104 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:20,104 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:18:20,195 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:20,195 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.305841ms'}
2022-04-28 10:18:20,196 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:18:20,196 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:18:20,196 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:20,196 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:18:20,196 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:18:20,196 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:20,197 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:20,868 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:18:20,868 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:18:20,881 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:18:20,881 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:18:20,881 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:18:20,900 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:18:20,900 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:18:20,905 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:20,905 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:20,907 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:18:20,907 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:18:20,907 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:20,907 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:20,907 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:20,907 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:20,907 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:20,907 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:20,907 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:20,966 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:20,966 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.75721ms'}
2022-04-28 10:18:20,966 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:18:20,966 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:18:20,966 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:20,967 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:18:20,967 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:18:20,967 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:20,967 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:20,971 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:20,971 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:20,971 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:18:20,973 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:18:21,705 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:21,705 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:21,705 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:18:21,705 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:18:21,705 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:21,705 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:21,705 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:21,705 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:21,707 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:21,707 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:21,769 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:21,769 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.276194ms'}
2022-04-28 10:18:21,769 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:18:21,769 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:18:21,769 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:21,769 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:18:21,769 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:18:21,769 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:21,769 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:21,773 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:21,773 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:21,773 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:18:21,773 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:18:21,773 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:21,774 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:21,774 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:21,774 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:21,774 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:21,774 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:21,774 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:21,844 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:21,844 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.133196ms'}
2022-04-28 10:18:21,844 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:18:21,844 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:18:21,844 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:21,844 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:18:21,844 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:18:21,845 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:21,845 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:18:21,848 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:18:21,848 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:18:21,849 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:18:21,849 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:18:21,849 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:21,849 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:18:21,849 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:18:21,849 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzA5NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExMjk2fQ.2fc6eS1Pf6-8DHjtN6n2Ga7Q9sD4O4p0EoFp5ZShTXo'}
2022-04-28 10:18:21,851 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:18:21,851 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:18:21,911 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:18:21,911 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.115405ms'}
2022-04-28 10:18:21,912 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:18:21,912 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:18:21,912 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:21,912 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:18:21,912 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:18:21,912 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:18:21,912 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:25:45,615 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:25:45,615 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:25:45,615 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:25:45,615 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:25:45,615 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:25:45,717 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:25:45,717 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '079593', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.654324ms'}
2022-04-28 10:25:45,720 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：079593
2022-04-28 10:25:45,720 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:25:45,720 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:25:45,720 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:25:45,723 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:25:45,723 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '079593', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:25:45,823 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:25:45,823 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU0NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzQ2fQ.NZWNbA2_tTYGybPG8Es_8bDOz92rQK0JDr78QhEje-g'}, 'time': '14.663706ms'}
2022-04-28 10:25:45,823 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:25:45,825 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU0NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzQ2fQ.NZWNbA2_tTYGybPG8Es_8bDOz92rQK0JDr78QhEje-g']
2022-04-28 10:25:45,825 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU0NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzQ2fQ.NZWNbA2_tTYGybPG8Es_8bDOz92rQK0JDr78QhEje-g,并设置为Data类实例化对象的属性和值。
2022-04-28 10:25:45,830 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:45,830 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:25:45,831 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:25:45,831 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:25:45,831 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:25:45,831 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:25:45,832 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU0NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzQ2fQ.NZWNbA2_tTYGybPG8Es_8bDOz92rQK0JDr78QhEje-g'}
2022-04-28 10:25:45,832 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:25:45,832 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:25:45,899 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:25:45,900 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.173652ms'}
2022-04-28 10:25:45,900 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:25:45,900 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:25:45,900 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:25:45,901 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:25:45,901 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:25:45,901 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:25:45,901 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:25:45,901 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:25:45,901 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:25:45,901 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:25:45,907 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:45,907 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:25:45,907 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:25:45,907 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:25:46,651 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,652 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,652 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:25:46,652 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:25:46,671 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,671 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,671 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:25:46,671 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:25:46,688 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,688 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,688 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:25:46,688 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:25:46,707 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,707 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,707 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:25:46,707 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:25:46,726 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,726 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,726 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:25:46,726 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:25:46,726 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:25:46,726 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:25:46,726 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:25:46,726 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU0NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzQ2fQ.NZWNbA2_tTYGybPG8Es_8bDOz92rQK0JDr78QhEje-g'}
2022-04-28 10:25:46,726 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:25:46,727 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:25:46,799 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:25:46,799 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.278845ms'}
2022-04-28 10:25:46,799 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:25:46,799 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:25:46,799 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:25:46,799 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:25:46,799 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:25:46,799 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:25:46,799 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:25:46,801 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,801 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,801 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:25:46,801 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:25:46,819 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:25:46,820 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:25:46,820 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:25:46,820 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:25:46,820 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:25:46,820 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:25:46,820 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:25:46,820 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU0NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzQ2fQ.NZWNbA2_tTYGybPG8Es_8bDOz92rQK0JDr78QhEje-g'}
2022-04-28 10:25:46,822 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:25:46,822 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:25:46,881 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:25:46,881 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.196454ms'}
2022-04-28 10:25:46,881 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:25:46,881 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:25:46,881 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:25:46,881 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:25:46,881 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:25:46,881 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:25:46,881 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:31,967 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:31,967 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:31,967 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:26:31,968 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:26:31,968 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:26:32,078 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:32,078 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '498529', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.536222ms'}
2022-04-28 10:26:32,079 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：498529
2022-04-28 10:26:32,079 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:32,079 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:32,079 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:26:32,080 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:26:32,080 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '498529', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:26:32,144 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:32,144 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}, 'time': '14.210671ms'}
2022-04-28 10:26:32,144 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:26:32,144 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw']
2022-04-28 10:26:32,144 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw,并设置为Data类实例化对象的属性和值。
2022-04-28 10:26:32,145 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:32,145 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:26:32,145 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:26:32,145 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:26:32,145 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:32,145 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:26:32,145 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:32,147 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:26:32,147 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:26:32,208 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:32,208 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.214208ms'}
2022-04-28 10:26:32,209 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:26:32,209 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:26:32,209 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:26:32,209 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:26:32,209 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:26:32,209 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:32,209 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:26:32,209 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:26:32,210 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:32,210 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:32,212 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:32,214 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:26:32,214 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:26:32,214 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:26:32,214 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:26:32,214 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:32,214 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:26:32,876 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:32,876 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:32,878 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:32,878 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:32,878 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:32,948 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:32,948 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.165803ms'}
2022-04-28 10:26:32,950 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:26:32,950 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:26:32,950 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:32,950 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:26:32,950 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:26:32,950 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:32,950 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:33,628 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:26:33,628 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:26:33,641 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:26:33,641 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:26:33,641 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:26:33,661 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:26:33,661 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:26:33,665 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:33,667 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:26:33,667 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:26:33,667 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:26:33,667 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:26:33,667 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:26:33,667 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:26:34,468 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:34,468 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:34,468 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:34,470 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:34,470 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:26:34,536 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:34,536 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.342773ms'}
2022-04-28 10:26:34,537 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:26:34,537 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:26:34,537 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:34,537 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:26:34,537 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:26:34,537 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:34,537 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:35,212 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:26:35,212 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:26:35,226 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:26:35,226 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:26:35,226 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:26:35,236 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:26:35,236 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:26:35,243 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:35,243 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:26:35,243 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:26:35,243 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:26:35,244 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:26:35,244 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:26:35,244 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:26:35,913 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:35,913 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:35,913 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:35,914 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:35,914 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:26:35,976 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:35,976 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.356951ms'}
2022-04-28 10:26:35,976 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:26:35,976 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:26:35,976 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:35,976 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:26:35,976 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:26:35,976 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:35,976 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:36,605 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:26:36,605 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:26:36,615 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:26:36,615 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:26:36,615 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:26:36,648 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:26:36,648 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:26:36,654 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:36,655 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,655 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:26:36,655 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:26:36,655 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,655 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,655 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:36,655 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:36,655 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:36,657 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:36,657 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,710 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:36,710 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.682405ms'}
2022-04-28 10:26:36,710 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:26:36,710 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:26:36,710 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,710 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:26:36,710 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:26:36,710 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,710 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:36,716 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:36,717 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,717 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:26:36,717 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:26:36,717 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": null, "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,717 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,717 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:36,717 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:36,717 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:36,718 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:36,718 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,795 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:36,795 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.061603ms'}
2022-04-28 10:26:36,796 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:26:36,796 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:26:36,796 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,796 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:26:36,796 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:26:36,796 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,796 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:36,801 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:36,802 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,802 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:26:36,802 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:26:36,802 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,802 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:36,802 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:36,802 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:36,804 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:36,804 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,883 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:36,883 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.124449ms'}
2022-04-28 10:26:36,884 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:26:36,884 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:26:36,884 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,884 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:26:36,884 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:26:36,884 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,884 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:36,887 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:36,887 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,887 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:26:36,887 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:26:36,887 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,887 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,887 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:36,887 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:36,887 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:36,888 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:36,888 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,956 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:36,956 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.093404ms'}
2022-04-28 10:26:36,956 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:26:36,956 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:26:36,956 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,956 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:26:36,956 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:26:36,956 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:36,956 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:26:36,959 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:26:36,959 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:26:36,959 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:26:36,959 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:26:36,959 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:36,960 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:26:36,960 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:26:36,960 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxNzU5MiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTExNzkyfQ.0Tyu7WMF063hRwR8keQGnjI1VTrKv3-l1v-kbnwZwKw'}
2022-04-28 10:26:36,960 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:26:36,960 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:26:37,013 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:26:37,013 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.275771ms'}
2022-04-28 10:26:37,013 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:26:37,013 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:26:37,013 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:37,013 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:26:37,014 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:26:37,014 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:26:37,014 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:30,963 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:30,963 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:30,963 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:41:30,963 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:41:30,964 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:41:31,292 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:31,292 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '786544', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.951945ms'}
2022-04-28 10:41:31,294 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：786544
2022-04-28 10:41:31,294 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:31,294 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:31,294 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:41:31,295 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:41:31,295 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '786544', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:41:31,371 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:31,371 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}, 'time': '14.309261ms'}
2022-04-28 10:41:31,371 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:41:31,371 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ']
2022-04-28 10:41:31,371 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ,并设置为Data类实例化对象的属性和值。
2022-04-28 10:41:31,372 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:31,372 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:41:31,372 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:41:31,372 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:41:31,372 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:31,372 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:41:31,372 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:31,374 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:41:31,374 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:41:31,437 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:31,437 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.082998ms'}
2022-04-28 10:41:31,437 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:41:31,437 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:41:31,437 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:41:31,438 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:41:31,438 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:41:31,438 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:31,438 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:41:31,438 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:41:31,438 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:31,438 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:31,448 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:31,448 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:41:31,448 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:41:31,448 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:41:31,448 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:41:31,448 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:31,448 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:41:32,427 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:32,427 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:32,427 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:32,430 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:32,430 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:32,513 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:32,513 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.321817ms'}
2022-04-28 10:41:32,513 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:41:32,513 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:41:32,513 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:32,513 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:41:32,513 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:41:32,513 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:32,513 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:33,158 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:41:33,158 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:41:33,174 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:41:33,174 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:41:33,174 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:41:33,188 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:41:33,190 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:41:33,200 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:33,200 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:41:33,200 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:41:33,201 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:41:33,201 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": ""}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:41:33,201 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:41:33,201 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:41:33,900 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:33,900 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:33,900 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:33,901 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:33,901 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': ''}
2022-04-28 10:41:33,974 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:33,974 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.347621ms'}
2022-04-28 10:41:33,974 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:41:33,974 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:41:33,974 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:33,974 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:41:33,974 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:41:33,974 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:33,974 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:34,628 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:41:34,628 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:41:34,644 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:41:34,646 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:41:34,646 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:41:34,660 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:41:34,660 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:41:34,670 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:34,670 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:41:34,671 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:41:34,671 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:41:34,671 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:41:34,671 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:41:34,671 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:41:35,502 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:35,502 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:35,502 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:35,503 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:35,503 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:41:35,579 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:35,579 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.300762ms'}
2022-04-28 10:41:35,579 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:41:35,580 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:41:35,580 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:35,580 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:41:35,580 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:41:35,580 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:35,580 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:36,217 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:41:36,217 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:41:36,225 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:41:36,226 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:41:36,226 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:41:36,244 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:41:36,244 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:41:36,247 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:36,247 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,248 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:41:36,248 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:41:36,248 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,248 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,248 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:36,248 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:36,248 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:36,249 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:36,249 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,323 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:36,323 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.657892ms'}
2022-04-28 10:41:36,323 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:41:36,323 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:41:36,325 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,325 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:41:36,325 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:41:36,325 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,325 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:36,328 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:36,328 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,328 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:41:36,329 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:41:36,329 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": null, "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,329 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,329 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:36,329 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:36,329 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:36,331 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:36,331 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,408 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:36,408 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.041571ms'}
2022-04-28 10:41:36,408 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:41:36,408 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:41:36,409 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,409 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:41:36,409 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:41:36,409 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,409 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:36,414 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:36,414 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,414 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:41:36,414 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:41:36,415 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,415 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:36,415 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:36,415 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:36,415 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:36,416 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,476 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:36,476 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.019648ms'}
2022-04-28 10:41:36,476 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:41:36,478 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:41:36,478 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,478 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:41:36,478 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:41:36,479 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,479 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:36,487 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:36,488 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,488 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:41:36,489 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:41:36,489 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,491 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,491 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:36,491 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:36,492 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:36,494 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:36,494 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,588 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:36,588 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.32397ms'}
2022-04-28 10:41:36,588 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:41:36,588 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:41:36,588 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,588 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:41:36,588 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:41:36,588 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,588 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:41:36,595 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:41:36,595 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:41:36,595 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:41:36,595 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:41:36,595 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,595 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:41:36,595 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:41:36,595 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODQ5MSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNjkxfQ.x2j7nxMpq739stfpklktMbSNXkF0su6vgDwP6emYeOQ'}
2022-04-28 10:41:36,596 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:41:36,596 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:41:36,659 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:41:36,659 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.327299ms'}
2022-04-28 10:41:36,660 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:41:36,660 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:41:36,660 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,660 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:41:36,660 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:41:36,660 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:41:36,660 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:12,825 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:12,825 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:12,825 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:42:12,825 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 10:42:12,825 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 10:42:12,912 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:12,913 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '029654', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.737781ms'}
2022-04-28 10:42:12,913 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：029654
2022-04-28 10:42:12,914 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:12,914 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:12,914 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 10:42:12,914 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 10:42:12,914 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '029654', 'phone': '18276762767', 'password': 'PFn6fUOYmPrk0le0C8vqSr2mahglMwyTDnCClq8yKmwX243M+Pe4n9052pCs6CyXYYm8QnDJ8mQbC8AN50h8IwA6jiKOzWFLz7/4R0TsW/vDwMXHtTg9UhitdXhR711eD2bqIzAgDOuE2DtGyx/9r+Sgxv1Pg/HGpAaMtQU/G+k1bwX6A6gLHM9mimZjU7hbscrMa+3UQQHnm1K0Y852yyAvtVTWX/0DJgfRLW4b54Pb8QqU9xQ10Fs5SD7SDb5d//rTb/kDabRrIbutreLN6Myg6FP6CLYkhhyyvNuptLfBT9/i0JcyYqB6I3x7Kp28SuG9DqykGgL7KOSC8mJcgpDjvUmk8UAYNpYG/6bQtsx3hm6lG8jZgKqheL9y1K9hkJBT4w1SyJU8GweVA8+SGTVxudgK9AAg5ewGiqC+tJSxLnHQoviVq73sgrVjThSqfkS+xzIc1rLzqicT59rsdhwJHruTY5Urn+KLd4KhYfvvC/pMKF3eLI85q/mMu5YRCPEeWTqV1xH89oX3v2Xu7XNiVjNg7x9XdTfDJDn8L0sXjCiQZKjqxUHYHKcO2mtRCk7i3VDEBDOUMjubp9ySN0F9DmsXctZEgWkITu6l/2MRLzgsuI56U7WvrM64Sn8VvkULPKZTgp9qrFaB8sfmdYgmR0VIW6l6o0IqiuHEPMw='}
2022-04-28 10:42:12,990 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:12,990 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}, 'time': '14.202752ms'}
2022-04-28 10:42:12,991 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 10:42:12,991 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE']
2022-04-28 10:42:12,992 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE,并设置为Data类实例化对象的属性和值。
2022-04-28 10:42:12,996 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:12,996 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 10:42:12,998 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:42:12,998 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:42:12,999 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:12,999 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 10:42:12,999 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:13,001 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 10:42:13,001 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 10:42:13,098 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:13,099 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.120362ms'}
2022-04-28 10:42:13,099 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 10:42:13,099 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 10:42:13,100 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 10:42:13,100 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:42:13,100 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:42:13,102 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:13,102 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 10:42:13,102 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 10:42:13,102 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:13,102 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:13,108 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:13,108 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:42:13,108 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:42:13,108 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:42:13,108 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:42:13,108 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:13,108 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 10:42:13,806 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:13,806 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:13,807 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:13,808 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:13,808 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:13,878 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:13,878 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.155802ms'}
2022-04-28 10:42:13,878 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:42:13,878 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:42:13,878 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:13,878 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:42:13,878 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:42:13,878 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:13,878 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:14,486 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 10:42:14,486 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:42:14,496 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:42:14,496 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:42:14,496 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:42:14,528 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:42:14,528 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:42:14,536 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:14,536 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:42:14,536 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:42:14,536 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:42:14,537 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:42:14,537 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 10:42:14,537 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 10:42:15,240 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:15,240 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:15,240 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:15,240 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:15,240 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 10:42:15,292 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:15,292 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.338329ms'}
2022-04-28 10:42:15,292 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:42:15,294 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:42:15,294 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:15,294 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:42:15,294 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:42:15,295 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:15,295 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:15,963 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 10:42:15,963 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:42:15,975 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:42:15,976 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:42:15,976 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:42:16,000 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:42:16,000 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:42:16,007 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:16,007 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:42:16,007 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:42:16,007 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:42:16,007 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 10:42:16,008 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:42:16,008 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 10:42:16,677 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:16,677 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:16,677 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:16,679 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:16,679 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 10:42:16,747 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:16,748 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.341262ms'}
2022-04-28 10:42:16,748 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 10:42:16,748 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 10:42:16,748 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:16,750 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 10:42:16,750 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 10:42:16,750 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:16,750 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:17,566 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 10:42:17,567 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 10:42:17,577 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 10:42:17,577 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 10:42:17,578 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 10:42:17,606 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 10:42:17,606 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 10:42:17,608 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:17,608 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,608 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:42:17,608 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:42:17,609 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,609 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,609 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:17,609 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:17,609 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:17,611 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:17,611 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,672 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:17,672 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.688561ms'}
2022-04-28 10:42:17,672 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:42:17,672 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:42:17,672 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,673 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 10:42:17,673 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 10:42:17,673 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,673 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:17,676 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:17,676 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,676 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:42:17,676 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:42:17,677 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": null, "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,677 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,677 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:17,677 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:17,677 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:17,677 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:17,678 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,744 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:17,744 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.244479ms'}
2022-04-28 10:42:17,745 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:42:17,745 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:42:17,745 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,745 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:42:17,745 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:42:17,745 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,745 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:17,748 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:17,748 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,748 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:42:17,748 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:42:17,748 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,748 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:17,748 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:17,748 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:17,750 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:17,750 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,817 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:17,817 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.140162ms'}
2022-04-28 10:42:17,817 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:42:17,817 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:42:17,817 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,817 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:42:17,817 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:42:17,817 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,819 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:17,820 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:17,820 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,820 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 10:42:17,820 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 10:42:17,820 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,822 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,822 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:17,822 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:17,822 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:17,822 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:17,822 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,878 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:17,878 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.118093ms'}
2022-04-28 10:42:17,878 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:42:17,878 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:42:17,878 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,878 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 10:42:17,878 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 10:42:17,878 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,878 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 10:42:17,881 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 10:42:17,881 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 10:42:17,881 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 10:42:17,881 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 10:42:17,881 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,883 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 10:42:17,883 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 10:42:17,883 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcxODUzMywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTEyNzMzfQ.RgX5LKKBO63SLr7JeoB3YI7rxS65GgmjMBbIPiPmiEE'}
2022-04-28 10:42:17,883 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 10:42:17,883 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 10:42:17,944 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 10:42:17,944 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.145743ms'}
2022-04-28 10:42:17,944 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 10:42:17,944 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 10:42:17,944 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,944 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 10:42:17,945 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 10:42:17,945 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 10:42:17,945 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:12,985 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:12,985 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:12,985 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:19:12,985 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 11:19:12,986 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 11:19:13,076 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:13,076 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '083511', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.845027ms'}
2022-04-28 11:19:13,078 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：083511
2022-04-28 11:19:13,078 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:13,079 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:13,079 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:19:13,080 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 11:19:13,081 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '083511', 'phone': '18276762767', 'password': 'DaQRQ0TmQehS/DE/NG75z4en9Fee/gkZ8OV4ZlATYCVVk+EA4c1KKR8fggeKlwcF7UVsO8tbji9sxhxbpIMT2iG7gY857qB04gm0CbIxOmIAWg9Fh5U5QFAi0TDOsuxwE3vHzT0WzF5qOKVVeHncycQyn4s4Z2XPcKXzieIPiw16N9ocRKktI5XRqzgcSjR/QAS+pGzgcs/emWHty/UwrnLdQsQoK2MlXe3Ssv7DOtSNwTH17CP3CE6dAjwAXNaoBbcoreG1eCv375qMqwpPowQL/xmUss7z8ED+M6snuiZYlSYVnGvDYjb2UYUUa6Im6YYKd9f2VQvy+8FMkPqquR2XR/hYvhws4bVzHicgeM+SPmhEW7iHKchzq/RZYHcGQkiBGDWudEqtIesVcG69KgmCY6uMXZrtHfpG11lLLlabYByfHprXhr+l+qmyjrDpRmOFzI404o+d1/u0IwljwqYqsj95M92QpjoT4qusrt97m6UWh4DGss+BO6mPbpQux74JBJd/lABoKPLchy08XUi6YrsoH6rYObojtLol1bc3n5Ft8SyUGq5GlU4Ui5NdUwH3Cvb3BXv11Ff0xlDkue91inRIMYCdN2Xmz+ac2bColjsOqt09iBNlqcz0Dmk1Xbj0hYJ9GCUFwKMV8vjSPNmolWuVZNSWncVzIAydGts='}
2022-04-28 11:19:13,182 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:13,182 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}, 'time': '15.008062ms'}
2022-04-28 11:19:13,183 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 11:19:13,183 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE']
2022-04-28 11:19:13,183 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE,并设置为Data类实例化对象的属性和值。
2022-04-28 11:19:13,184 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:13,184 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 11:19:13,184 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:19:13,184 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:19:13,184 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:13,185 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 11:19:13,185 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:13,187 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 11:19:13,187 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 11:19:13,246 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:13,246 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.449761ms'}
2022-04-28 11:19:13,246 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 11:19:13,246 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 11:19:13,246 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 11:19:13,247 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:19:13,247 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:19:13,247 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:13,247 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 11:19:13,247 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 11:19:13,247 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:13,247 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:13,252 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:13,252 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:19:13,252 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:19:13,252 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:19:13,252 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:19:13,253 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:13,253 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 11:19:14,139 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:14,140 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:14,140 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:14,141 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:14,142 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:14,256 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:14,256 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.301996ms'}
2022-04-28 11:19:14,256 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:19:14,256 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:19:14,257 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:14,257 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:19:14,257 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:19:14,259 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:14,259 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:17,950 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 11:19:17,950 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:19:17,963 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:19:17,963 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:19:17,964 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:19:17,983 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:19:17,983 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:19:17,992 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:17,992 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:19:17,993 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:19:17,993 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:19:17,993 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:19:17,993 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:19:17,993 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 11:19:18,788 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:18,788 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:18,789 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:18,790 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:18,791 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:19:18,891 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:18,891 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.26497ms'}
2022-04-28 11:19:18,891 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:19:18,891 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:19:18,891 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:18,891 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:19:18,891 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:19:18,891 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:18,891 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:19,844 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 11:19:19,845 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:19:19,857 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:19:19,857 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:19:19,858 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:19:19,871 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:19:19,871 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:19:19,875 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:19,876 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:19:19,876 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:19:19,876 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:19:19,876 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:19:19,878 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:19:19,878 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 11:19:20,695 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:20,695 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:20,695 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:20,696 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:20,696 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:19:23,787 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:23,787 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '5.393542ms'}
2022-04-28 11:19:23,788 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:19:23,788 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:19:23,788 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:23,788 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:19:23,788 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:19:23,788 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:23,788 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:25,707 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 11:19:25,707 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:19:25,720 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:19:25,720 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:19:25,720 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:19:25,793 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:19:25,795 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:19:25,806 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:25,807 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:25,807 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:19:25,807 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:19:25,808 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:25,808 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:25,809 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:25,809 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:25,809 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:25,811 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:25,812 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:25,907 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:25,907 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.868201ms'}
2022-04-28 11:19:25,907 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:19:25,907 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:19:25,907 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:25,907 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 11:19:25,907 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 11:19:25,907 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:25,907 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:25,910 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:25,911 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:25,911 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:19:25,911 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:19:25,911 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": null, "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:25,911 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:25,911 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:25,911 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:25,911 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:25,911 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:25,911 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:25,967 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:25,967 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.195511ms'}
2022-04-28 11:19:25,967 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:19:25,967 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:19:25,967 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:25,967 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:19:25,967 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:19:25,967 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:25,967 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:25,970 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:25,970 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:25,970 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:19:25,970 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:19:25,971 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:25,971 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:25,971 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:25,971 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:25,971 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:25,971 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:26,032 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:26,032 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.283111ms'}
2022-04-28 11:19:26,032 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:19:26,032 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:19:26,032 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:26,032 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:19:26,032 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:19:26,032 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:26,032 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:26,035 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:26,035 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:26,035 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:19:26,035 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:19:26,035 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:26,035 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:26,035 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:26,036 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:26,036 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:26,036 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:26,036 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:26,134 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:26,135 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.097864ms'}
2022-04-28 11:19:26,135 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:19:26,135 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:19:26,135 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:26,136 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:19:26,136 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:19:26,136 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:26,136 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:19:26,144 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:19:26,144 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:19:26,144 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:19:26,144 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:19:26,144 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:26,144 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:19:26,144 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:19:26,145 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMDc1MywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE0OTUzfQ.q46wUl6x5uu1ws2qUsdFNCsX193IgtbMyOBEwLL56HE'}
2022-04-28 11:19:26,147 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:19:26,147 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:19:26,262 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:19:26,262 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.157975ms'}
2022-04-28 11:19:26,263 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:19:26,263 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:19:26,263 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:26,263 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:19:26,264 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:19:26,264 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:19:26,264 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:16,687 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：NlzI37EoEx4NAXAe8W9VgtA1fuVQyNng1pf8oSre7p2Vum7s0HRLPq/GwVcq8Ti8qjVIyz2DvPwTFsPb4gAEP/LdIf+9zQgw8ch/9stDp2cfUjL5U44x9C6lcCFubC1torjhA0Jz//l0FTQwqWy4a0oFKC7qPuOSjv1Hocv3bNmjED9bj0oHr6xClGQdnwA6h4SUmUm9QdRapz2Wshugw8lrZuSDcCnlPkyh46Cy77ILMZJoOIlBj24bDjeJRjoKFF32K1e4GaoA7j7C9rj37BwaQurxW2+WU1aOL18ChE5+cod3dNm8WqusPbkRnr0BrfMeoq5oAVDu//mw5G26oZPAYxx6iNy1vqw5LrQK3PcrZy8T5mGCQEtifOPhMolBt9UjVLd4ZBXAb3OClQpTVL2/os6hPv/tYYobuE2eJXkMYKSAGD7kPvSyNN6dmIcriQCIBCizEwSvJA7bSyDXWLwDTi4ZGd11fRYN6zuZveMAanoSroyYKXdEXjPS68+nRl6SDd65wl2MbmcSY8wn7HPCyvaOB6ARN2WpkSh8gzV/ckaBG55lq3Ghb8CDUPB2O6mB+LmvNWr/XIdIslNlDrvvB4+vwqmyZ9Q4wIcclX8H1JGjIOQjQDcZ0l7G+IRcjx2zxDjmoOXZQQHrozYijI/IRjie8Iz5sg14WXH7S8k=
2022-04-28 11:26:16,687 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:16,687 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:16,687 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:26:16,688 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 11:26:16,688 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 11:26:16,799 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:16,799 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '657223', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.324573ms'}
2022-04-28 11:26:16,799 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：657223
2022-04-28 11:26:16,800 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:16,800 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:16,800 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:26:16,800 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 11:26:16,800 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '657223', 'phone': '18276762767', 'password': 'NlzI37EoEx4NAXAe8W9VgtA1fuVQyNng1pf8oSre7p2Vum7s0HRLPq/GwVcq8Ti8qjVIyz2DvPwTFsPb4gAEP/LdIf+9zQgw8ch/9stDp2cfUjL5U44x9C6lcCFubC1torjhA0Jz//l0FTQwqWy4a0oFKC7qPuOSjv1Hocv3bNmjED9bj0oHr6xClGQdnwA6h4SUmUm9QdRapz2Wshugw8lrZuSDcCnlPkyh46Cy77ILMZJoOIlBj24bDjeJRjoKFF32K1e4GaoA7j7C9rj37BwaQurxW2+WU1aOL18ChE5+cod3dNm8WqusPbkRnr0BrfMeoq5oAVDu//mw5G26oZPAYxx6iNy1vqw5LrQK3PcrZy8T5mGCQEtifOPhMolBt9UjVLd4ZBXAb3OClQpTVL2/os6hPv/tYYobuE2eJXkMYKSAGD7kPvSyNN6dmIcriQCIBCizEwSvJA7bSyDXWLwDTi4ZGd11fRYN6zuZveMAanoSroyYKXdEXjPS68+nRl6SDd65wl2MbmcSY8wn7HPCyvaOB6ARN2WpkSh8gzV/ckaBG55lq3Ghb8CDUPB2O6mB+LmvNWr/XIdIslNlDrvvB4+vwqmyZ9Q4wIcclX8H1JGjIOQjQDcZ0l7G+IRcjx2zxDjmoOXZQQHrozYijI/IRjie8Iz5sg14WXH7S8k='}
2022-04-28 11:26:16,904 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:16,904 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}, 'time': '14.423013ms'}
2022-04-28 11:26:16,904 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 11:26:16,904 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA']
2022-04-28 11:26:16,904 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA,并设置为Data类实例化对象的属性和值。
2022-04-28 11:26:16,911 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:16,911 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 11:26:16,911 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:26:16,911 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:26:16,911 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:16,911 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 11:26:16,911 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:16,911 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 11:26:16,911 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 11:26:16,971 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:16,973 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.175371ms'}
2022-04-28 11:26:16,973 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 11:26:16,974 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 11:26:16,975 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 11:26:16,976 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:26:16,976 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:26:16,976 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:16,976 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 11:26:16,976 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 11:26:16,976 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:16,976 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:16,984 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:16,984 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:26:16,985 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:26:16,985 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:26:16,985 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:26:16,986 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:16,986 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 11:26:17,678 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:17,678 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:17,679 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:17,680 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:17,680 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:17,763 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:17,763 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.15313ms'}
2022-04-28 11:26:17,763 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:26:17,764 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:26:17,764 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:17,764 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:26:17,764 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:26:17,764 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:17,764 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:18,391 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 11:26:18,391 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:26:18,404 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:26:18,404 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:26:18,404 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:26:18,421 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:26:18,422 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:26:18,430 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:18,430 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":"#client_id#","note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:26:18,430 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:26:18,430 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:26:18,430 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name": "test_role002", "owned_customer": 1, "note": null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:26:18,431 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:26:18,431 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 11:26:19,148 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:19,148 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:19,148 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:19,150 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:19,150 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:26:19,206 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:19,207 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.159089ms'}
2022-04-28 11:26:19,207 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:26:19,207 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:26:19,207 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:19,207 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:26:19,207 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:26:19,207 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:19,207 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:19,887 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 11:26:19,887 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:26:19,900 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:26:19,900 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:26:19,901 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:26:19,927 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:26:19,927 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:26:19,937 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:19,937 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":"#client_id#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:26:19,937 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:26:19,937 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:26:19,937 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name": "test_role003", "owned_customer": 1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:26:19,937 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:26:19,937 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 11:26:20,622 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:20,622 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:20,622 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:20,623 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:20,623 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:26:20,696 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:20,696 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '5.746407ms'}
2022-04-28 11:26:20,696 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:26:20,696 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:26:20,696 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:20,696 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:26:20,697 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:26:20,697 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:20,697 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:21,628 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 11:26:21,628 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:26:21,636 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:26:21,638 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:26:21,638 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:26:21,678 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:26:21,678 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:26:21,683 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:21,683 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,684 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:26:21,684 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:26:21,684 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": "test_role001", "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,684 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,684 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:21,684 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:21,684 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:21,684 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:21,684 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,764 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:21,764 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.778172ms'}
2022-04-28 11:26:21,766 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:26:21,766 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:26:21,766 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:21,766 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 11:26:21,766 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 11:26:21,766 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:21,767 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:21,776 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:21,776 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,776 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:26:21,777 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:26:21,777 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name": null, "owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,779 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,779 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:21,779 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:21,779 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:21,782 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:21,782 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,867 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:21,868 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.154251ms'}
2022-04-28 11:26:21,868 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:26:21,868 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:26:21,868 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:21,868 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:26:21,868 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:26:21,868 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:21,868 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:21,872 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:21,872 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,872 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:26:21,873 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:26:21,873 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,873 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:21,873 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:21,873 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:21,875 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:21,875 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,980 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:21,980 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.068578ms'}
2022-04-28 11:26:21,980 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:26:21,980 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:26:21,982 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:21,982 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:26:21,982 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:26:21,982 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:21,982 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:21,985 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:21,985 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":"#client_id#","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,985 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:26:21,985 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:26:21,985 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer": 1, "note": "\\u897f\\u6e38\\u8bb0\\u3001\\u6c34\\u6d52\\u88c5\\u3001\\u4e09\\u56fd\\u6f14\\u4e49\\u3001\\u7ea2\\u697c\\u68a6"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:21,986 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:21,986 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:21,986 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:21,986 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:21,987 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:21,987 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:22,071 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:22,071 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.178083ms'}
2022-04-28 11:26:22,071 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:26:22,071 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:26:22,072 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:22,072 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:26:22,072 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:26:22,072 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:22,072 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:26:22,075 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:26:22,075 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:26:22,075 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:26:22,075 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:26:22,076 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:22,076 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:26:22,076 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:26:22,076 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMTE3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE1Mzc3fQ.xPWRCfJ9UVVSzMY3mFaQh8XNU27BFvkhqHcKbuSyUbA'}
2022-04-28 11:26:22,078 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:26:22,078 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:26:22,132 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:26:22,132 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '1.902429ms'}
2022-04-28 11:26:22,132 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:26:22,132 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:26:22,132 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:22,132 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:26:22,132 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:26:22,134 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:26:22,134 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:43:29,372 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：klU74Doe0bQZwqDv9NiULWUNznOa7S1PdkTWJtHo/YEORlWOMpcAOS8kcN7lH2GXZUWV7fxLEf2RS8R2uroiytGR53t2Lh+zsN2pyVwAoMgiLukpWIv1l2N2qUfAfosNEpeHe1tCyzgQlFU0ljo7vEjLyKXaH4KhJta0GG6M8nU3NutehyePX3nxYOvrf2MwCqzFExGR088o9bTtqubl1DvOD6rGDS7mlm1968F+OrSCdub3pPThDO4/CAVlweTkYOELEgmGrspKXMkozSkAZrHtvdieiPonKl8AUr8/oB5rtIcDV0TkbSdBa4+FhavYdtqjVSgWsxwMAtfiIGY3l7vpPDN+TpMqT3/gTvu+k+VzPgCvraQbhgiS4nOEG8M+ihY17CDmyzwnJu7zjTrHcwOno1wBRcVScykE96yZm2U4vQpX/KXyw8c117oSCgCS+pq3o7fzsN/lB0xHIUuLBVXc3xNMKz1KlyQOBc683Uz+6Yo7bvsTpz23SqmBuaq6qnAj7wIbH1AilKzYBS0PBjhPHx59HmzhKwrOZZQ4PFABDRVP3/SKI2IIgobsXR7zy0H9TSZ7NEh3Kxpr4CexfeI1vh+37h0f5uWJy8AZ59ZBsi8ambArP1dQZ/zV2HJjU6k5RP8M3RnQkxGDmTaiLXJxCwxmjh/oKyTzfmmgn7s=
2022-04-28 11:43:29,372 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:43:29,372 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:43:29,372 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:43:29,374 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 11:43:29,374 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 11:43:29,515 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:43:29,515 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '246145', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.681717ms'}
2022-04-28 11:43:29,516 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：246145
2022-04-28 11:43:29,516 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:43:29,518 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:43:29,518 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:43:29,519 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 11:43:29,519 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '246145', 'phone': '18276762767', 'password': 'klU74Doe0bQZwqDv9NiULWUNznOa7S1PdkTWJtHo/YEORlWOMpcAOS8kcN7lH2GXZUWV7fxLEf2RS8R2uroiytGR53t2Lh+zsN2pyVwAoMgiLukpWIv1l2N2qUfAfosNEpeHe1tCyzgQlFU0ljo7vEjLyKXaH4KhJta0GG6M8nU3NutehyePX3nxYOvrf2MwCqzFExGR088o9bTtqubl1DvOD6rGDS7mlm1968F+OrSCdub3pPThDO4/CAVlweTkYOELEgmGrspKXMkozSkAZrHtvdieiPonKl8AUr8/oB5rtIcDV0TkbSdBa4+FhavYdtqjVSgWsxwMAtfiIGY3l7vpPDN+TpMqT3/gTvu+k+VzPgCvraQbhgiS4nOEG8M+ihY17CDmyzwnJu7zjTrHcwOno1wBRcVScykE96yZm2U4vQpX/KXyw8c117oSCgCS+pq3o7fzsN/lB0xHIUuLBVXc3xNMKz1KlyQOBc683Uz+6Yo7bvsTpz23SqmBuaq6qnAj7wIbH1AilKzYBS0PBjhPHx59HmzhKwrOZZQ4PFABDRVP3/SKI2IIgobsXR7zy0H9TSZ7NEh3Kxpr4CexfeI1vh+37h0f5uWJy8AZ59ZBsi8ambArP1dQZ/zV2HJjU6k5RP8M3RnQkxGDmTaiLXJxCwxmjh/oKyTzfmmgn7s='}
2022-04-28 11:43:29,644 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:43:29,644 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjIwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2NDA5fQ.pz9oXzH8c5zD6CLGnxNFE0oEe0hmKYp7k7ylAUcNz_g'}, 'time': '14.103532ms'}
2022-04-28 11:43:29,644 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 11:43:29,644 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjIwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2NDA5fQ.pz9oXzH8c5zD6CLGnxNFE0oEe0hmKYp7k7ylAUcNz_g']
2022-04-28 11:43:29,644 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjIwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2NDA5fQ.pz9oXzH8c5zD6CLGnxNFE0oEe0hmKYp7k7ylAUcNz_g,并设置为Data类实例化对象的属性和值。
2022-04-28 11:43:29,648 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:43:29,648 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 11:43:29,649 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:43:29,649 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:43:29,649 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:43:29,649 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 11:43:29,649 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjIwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2NDA5fQ.pz9oXzH8c5zD6CLGnxNFE0oEe0hmKYp7k7ylAUcNz_g'}
2022-04-28 11:43:29,651 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 11:43:29,651 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 11:43:29,734 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:43:29,734 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.311968ms'}
2022-04-28 11:43:29,735 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 11:43:29,735 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 11:43:29,735 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 11:43:29,735 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:43:29,736 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:43:29,736 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:43:29,736 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 11:43:29,736 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 11:43:29,736 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:43:29,736 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:43:29,740 ARS INFO test_role.py [28行]: =========== 新建角色接口测试  ===============
2022-04-28 11:43:29,740 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:43:29,740 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:43:29,740 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:43:29,740 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:43:29,740 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:43:29,740 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 11:43:30,463 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:43:30,463 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:43:30,463 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjIwOSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2NDA5fQ.pz9oXzH8c5zD6CLGnxNFE0oEe0hmKYp7k7ylAUcNz_g'}
2022-04-28 11:43:30,464 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:43:30,465 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:43:30,536 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:43:30,536 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.257143ms'}
2022-04-28 11:43:30,536 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:43:30,536 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:43:30,537 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:43:30,537 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:43:30,537 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:43:30,537 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:43:30,537 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:43:31,180 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 11:43:31,180 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:43:31,195 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:43:31,195 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:43:31,195 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:43:31,211 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:43:31,211 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:49:34,291 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：ekjTcIAXS2dympqsLNYaJBsexwQGsdHxbr+8IWeYW4/ZAtGxvlSIYIIynP5LaRh48L1adp/gFenb4XSWiCjaLHPgU3GrR3OWLVxCqIsHfiJVhbQIx0V5oAvxlgwf6ke70/zw+QCtFo+SuruFdByZyhf4Kv0Owt85JbA72mr19Fy9RDVIJUng9i9sJSj9ehOKI4wmJDvNVf00vX5RdLcbKcudFtfLbS900hk83pBqr2JFrPXuaUpaKL90ze+K19W/OQ5j6nbP1BC0Q0slBDYqw9Ulx9+TmspD+288XvoyFj1uYEvDMQkeyexvIqZdb0hgZtXqjMIYc1gTrfyXPIGoCShlQhxBB6rf4luA87ibiw/x431tOYGOjDt399Buj7smvleryrH7fA3ujutB3hJVVWW1j7SCW2QWA5mK6XyNC4/gNolzPjixIRg3fWdKgFdeXa63rIrjr+GLvSOgLHJv7UD7s0K5vRzmQUtEZ5avzQRfd6f44hR3NidMCQexz3wipOkQIUFGWxO3gIVwXhxTpoXoCfY7nVFB9V/PFiM7REKKgmlveLH0FB0NmOWUv6t5z8Up3Gp+TRqS4BRVis0NS5SHzW9kZyxudqRJlVX1+ijK32+wZvSCBg4VmiTkyQPMFaAWqRdGQmbAkPqjM+4IK1UhcKr5BWqlOTvRbpbq52c=
2022-04-28 11:49:34,291 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:34,291 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:34,292 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:49:34,292 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 11:49:34,292 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 11:49:34,422 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:34,423 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '985682', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.961122ms'}
2022-04-28 11:49:34,424 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：985682
2022-04-28 11:49:34,424 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:34,424 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:34,424 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:49:34,427 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 11:49:34,427 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '985682', 'phone': '18276762767', 'password': 'ekjTcIAXS2dympqsLNYaJBsexwQGsdHxbr+8IWeYW4/ZAtGxvlSIYIIynP5LaRh48L1adp/gFenb4XSWiCjaLHPgU3GrR3OWLVxCqIsHfiJVhbQIx0V5oAvxlgwf6ke70/zw+QCtFo+SuruFdByZyhf4Kv0Owt85JbA72mr19Fy9RDVIJUng9i9sJSj9ehOKI4wmJDvNVf00vX5RdLcbKcudFtfLbS900hk83pBqr2JFrPXuaUpaKL90ze+K19W/OQ5j6nbP1BC0Q0slBDYqw9Ulx9+TmspD+288XvoyFj1uYEvDMQkeyexvIqZdb0hgZtXqjMIYc1gTrfyXPIGoCShlQhxBB6rf4luA87ibiw/x431tOYGOjDt399Buj7smvleryrH7fA3ujutB3hJVVWW1j7SCW2QWA5mK6XyNC4/gNolzPjixIRg3fWdKgFdeXa63rIrjr+GLvSOgLHJv7UD7s0K5vRzmQUtEZ5avzQRfd6f44hR3NidMCQexz3wipOkQIUFGWxO3gIVwXhxTpoXoCfY7nVFB9V/PFiM7REKKgmlveLH0FB0NmOWUv6t5z8Up3Gp+TRqS4BRVis0NS5SHzW9kZyxudqRJlVX1+ijK32+wZvSCBg4VmiTkyQPMFaAWqRdGQmbAkPqjM+4IK1UhcKr5BWqlOTvRbpbq52c='}
2022-04-28 11:49:34,504 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:34,504 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzc0fQ.Q5QpXBqh3mojGLd7yrAgTonwAw0scAHLl1dpoZV3zQQ'}, 'time': '14.612435ms'}
2022-04-28 11:49:34,505 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 11:49:34,505 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzc0fQ.Q5QpXBqh3mojGLd7yrAgTonwAw0scAHLl1dpoZV3zQQ']
2022-04-28 11:49:34,505 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzc0fQ.Q5QpXBqh3mojGLd7yrAgTonwAw0scAHLl1dpoZV3zQQ,并设置为Data类实例化对象的属性和值。
2022-04-28 11:49:34,511 ARS INFO test_003_machineroom.py [29行]: =========== 新建机房接口测试  ===============
2022-04-28 11:49:34,511 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '新建机房', 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"aaaa","machine_site":"aaaaa","domain":"aaaa","note":"aaaa","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"机房已存在","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'aaaa\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'aaaa\'","expected":{"name":"aaaa"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:34,512 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:49:34,512 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:49:34,512 ARS INFO test_003_machineroom.py [35行]: 处理之后的请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-28 11:49:34,512 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:34,512 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:34,513 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU3NCwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzc0fQ.Q5QpXBqh3mojGLd7yrAgTonwAw0scAHLl1dpoZV3zQQ'}
2022-04-28 11:49:34,513 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-28 11:49:34,513 ARS INFO handle_request.py [30行]: 请求数据为：{'machine_name': 'aaaa', 'machine_site': 'aaaaa', 'domain': 'aaaa', 'note': 'aaaa', 'scheduling': True}
2022-04-28 11:49:34,588 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:34,588 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.45064ms'}
2022-04-28 11:49:34,588 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:49:34,588 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:49:34,588 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:34,588 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-28 11:49:34,588 ARS INFO my_assert.py [29行]: 预期结果为：机房已存在
2022-04-28 11:49:34,590 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:34,590 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:35,246 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='aaaa'
2022-04-28 11:49:35,246 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:49:35,256 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:49:35,256 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:49:35,256 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:49:35,256 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='aaaa'
2022-04-28 11:49:35,256 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-28 11:49:35,264 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': 'aaaa'}
2022-04-28 11:49:35,265 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': 'aaaa'}
2022-04-28 11:49:35,265 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': 'aaaa'}
2022-04-28 11:49:35,265 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:49:35,292 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:49:35,292 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:49:45,166 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：cs+xeQFp2yyR8uEQ2HFEFggbJHrQmA5jaG3rTJV1ka5Obr1Y+KaJDFU7n2PeUgcQMK5HIaTu2HVA5nOBn2pgLfYXo8xcrgJelGhzLFGT0EHHfCGD3R5zDWs9zX+2hC1ytQmZSJ1S+ctlMwTlY6/wYrUgqXV6sMtLuNGFMREhJ8lirxZCYjnbWFc2/E3K0yxJVL251WEfJCF6sBk/Vs2INJBcl2rv3sFxt0Y/IlyTUtB203qU/j0smDhLqVXsmRU7+pwL6vxDUz1gTyQU9PAhgGgXiVlIcZqJMeIecIr/hldWsYAn1OjJKnKnlvfeyG4AXmA0RBiXpNR84K3lXkXNYTeKUvM0Hms49YtAjPXSAS7B/qwqhA7vcElSGzg43oRljKeNsELkwuBXA+mdfd8I95icTwr+9/2L06wl0SGzMnZGyZB6rEma6q1YXvcj/ijmFTcsqv7tcIA6PI0onludsXOQWeYyKJ2NWkQPX+o+2SjK+C5rtWR3dLQZvTw8jJEadS6XPpeJtSJcQtvFwmwDCVvCwkpZYms2I4no2GTarYt0AAdnpv4L8x+UIqX7ZdV+4YmZ756fi4M61GyHTY5BYdDgcM9So7GrZ/hSgh1P1pagPMd+Oaxxhdqqc1X39GvrKx3ANDkSPA5VciAs7AVtCbLrONk/Py6Ibo2PqFCap6s=
2022-04-28 11:49:45,166 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:45,166 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:45,166 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:49:45,166 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 11:49:45,167 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 11:49:45,266 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:45,266 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '383411', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.626937ms'}
2022-04-28 11:49:45,270 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：383411
2022-04-28 11:49:45,270 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:45,271 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:45,271 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:49:45,273 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 11:49:45,273 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '383411', 'phone': '18276762767', 'password': 'cs+xeQFp2yyR8uEQ2HFEFggbJHrQmA5jaG3rTJV1ka5Obr1Y+KaJDFU7n2PeUgcQMK5HIaTu2HVA5nOBn2pgLfYXo8xcrgJelGhzLFGT0EHHfCGD3R5zDWs9zX+2hC1ytQmZSJ1S+ctlMwTlY6/wYrUgqXV6sMtLuNGFMREhJ8lirxZCYjnbWFc2/E3K0yxJVL251WEfJCF6sBk/Vs2INJBcl2rv3sFxt0Y/IlyTUtB203qU/j0smDhLqVXsmRU7+pwL6vxDUz1gTyQU9PAhgGgXiVlIcZqJMeIecIr/hldWsYAn1OjJKnKnlvfeyG4AXmA0RBiXpNR84K3lXkXNYTeKUvM0Hms49YtAjPXSAS7B/qwqhA7vcElSGzg43oRljKeNsELkwuBXA+mdfd8I95icTwr+9/2L06wl0SGzMnZGyZB6rEma6q1YXvcj/ijmFTcsqv7tcIA6PI0onludsXOQWeYyKJ2NWkQPX+o+2SjK+C5rtWR3dLQZvTw8jJEadS6XPpeJtSJcQtvFwmwDCVvCwkpZYms2I4no2GTarYt0AAdnpv4L8x+UIqX7ZdV+4YmZ756fi4M61GyHTY5BYdDgcM9So7GrZ/hSgh1P1pagPMd+Oaxxhdqqc1X39GvrKx3ANDkSPA5VciAs7AVtCbLrONk/Py6Ibo2PqFCap6s='}
2022-04-28 11:49:45,371 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:45,371 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}, 'time': '13.780635ms'}
2022-04-28 11:49:45,371 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 11:49:45,371 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA']
2022-04-28 11:49:45,371 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA,并设置为Data类实例化对象的属性和值。
2022-04-28 11:49:45,374 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:45,374 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 11:49:45,374 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:49:45,374 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:49:45,375 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:45,375 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 11:49:45,375 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:45,375 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 11:49:45,375 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 11:49:45,480 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:45,480 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.20247ms'}
2022-04-28 11:49:45,481 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 11:49:45,481 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 11:49:45,483 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 11:49:45,483 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:49:45,483 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:49:45,484 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:45,484 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 11:49:45,484 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 11:49:45,484 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:45,486 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:45,495 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:45,496 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:45,496 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:49:45,496 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:49:45,496 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:45,496 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:45,496 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 11:49:46,168 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:46,168 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:46,168 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:46,169 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:46,169 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:46,270 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:46,270 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.38376ms'}
2022-04-28 11:49:46,271 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:49:46,271 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:49:46,271 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:46,272 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:49:46,272 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:49:46,272 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:46,272 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:46,924 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 11:49:46,924 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:49:46,936 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:49:46,936 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:49:46,937 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:49:46,968 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:49:46,969 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:49:46,979 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:46,980 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":#client_id#,"note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:46,980 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:49:46,980 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:49:46,980 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":1,"note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:46,980 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:49:46,980 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 11:49:47,723 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:47,723 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:47,723 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:47,724 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:47,724 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:49:47,833 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:47,833 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.460485ms'}
2022-04-28 11:49:47,835 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:49:47,835 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:49:47,835 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:47,835 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:49:47,835 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:49:47,835 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:47,835 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:48,486 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 11:49:48,486 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:49:48,507 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:49:48,507 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:49:48,507 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:49:48,512 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:49:48,512 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:49:48,518 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:48,519 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":#client_id#}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:48,519 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:49:48,519 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:49:48,519 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:49:48,519 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:49:48,519 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 11:49:49,215 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:49,216 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:49,216 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:49,217 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:49,217 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:49:49,305 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:49,305 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.330539ms'}
2022-04-28 11:49:49,305 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:49:49,305 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:49:49,305 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:49,307 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:49:49,307 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:49:49,307 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:49,307 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:49,914 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 11:49:49,914 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:49:49,924 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:49:49,924 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:49:49,926 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:49:49,958 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:49:49,958 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:49:49,967 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:49,967 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:49,967 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:49:49,967 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:49:49,967 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:49,967 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:49,967 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:49,967 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:49,967 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:49,968 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:49,968 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,024 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:50,024 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.704062ms'}
2022-04-28 11:49:50,024 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:49:50,024 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:49:50,025 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,025 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 11:49:50,025 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 11:49:50,025 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,025 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:50,031 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:50,031 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:50,031 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:49:50,032 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:49:50,032 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:50,032 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,032 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:50,032 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:50,032 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:50,032 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:50,032 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,088 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:50,088 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.103875ms'}
2022-04-28 11:49:50,088 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:49:50,088 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:49:50,088 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,088 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:49:50,088 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:49:50,088 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,088 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:50,092 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:50,092 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:50,092 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:49:50,092 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:49:50,092 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,092 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:50,092 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:50,092 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:50,094 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:50,094 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,164 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:50,164 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.167849ms'}
2022-04-28 11:49:50,164 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:49:50,164 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:49:50,166 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,166 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:49:50,166 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:49:50,166 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,166 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:50,172 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:50,174 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:50,174 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:49:50,174 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:49:50,176 ARS INFO handle_replace.py [57行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:50,176 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,176 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:50,177 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:50,177 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:50,179 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:50,179 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,289 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:50,291 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.270048ms'}
2022-04-28 11:49:50,291 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:49:50,291 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:49:50,291 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,291 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:49:50,291 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:49:50,292 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,292 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:49:50,296 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:49:50,296 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:49:50,296 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:49:50,296 ARS INFO handle_replace.py [60行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:49:50,296 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,296 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:49:50,296 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:49:50,296 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMjU4NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE2Nzg1fQ.slXvudA1DKNyy6HywuYjB5lkUgAusxo69_Dxfv0hgJA'}
2022-04-28 11:49:50,296 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:49:50,296 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:49:50,363 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:49:50,363 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.647041ms'}
2022-04-28 11:49:50,363 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:49:50,363 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:49:50,363 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,364 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:49:50,364 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:49:50,364 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:49:50,364 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:24,625 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：w5CFmE23JnprcVfWBNR97fJxbbNKFJuQyG3F6KKP5ztKQ+TV8Qy6aF7oHxSvfel7kc1fVZ0rKiGxUVKBJZYwBcvftse7Sk3f17sRHkQxGU2fkF8fbD6DEh5DRWMEpPu6y//wLKvR2aB2lidLM004jukCOdX2Z1MX8hRE3lX5zU83GCOIB1P7KJUbp/NL0g/a/jUNrCCP25Bafb1mvFf0yUoMAFWwLj//c2QkuRfrnx8EvLmbsxKuFF8dOuw0hkBCriwrSay26qjkOeznHfBEWRjCERioqVgNYmxC7mctkAdoMZnlc5CFhBZAr2RDPyg1ChOyZj6+VTA/DarmcDu6SpsdTr2eAO1hTAsrbgt8LJLOL0tl6wRYVQOBDlJ14QGzS+IJSiSvWZm15ELaf6i9G1N6BSkijCA5kbtrmRTw1hD/QPVnnLgKf9mHcP+ktIcjbm/5faYGkQzadenM1v1Q16V/Q0yWGf3sfEIsnNso97dK/DryjVX0aEjOzVYmpW+QQ+zREKLDWmib9/BV0RtebPReDJ9saLJO9jzK1sHkfZLkPRzeqiiRtXUqml9MLxjWhiF1amngowN+HerQ+u2u2624nBLrxOeoLi9qVwKIHDpfhu8twwy1SQJIpNCl+8mJvrDvPlV3Lub2N0oPdcQ6HMhrnN/DM0caHToc1Vs5GsY=
2022-04-28 11:59:24,625 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:24,625 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:24,627 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:59:24,627 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 11:59:24,627 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 11:59:24,740 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:24,740 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '070077', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.682124ms'}
2022-04-28 11:59:24,743 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：070077
2022-04-28 11:59:24,743 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:24,743 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:24,743 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 11:59:24,744 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 11:59:24,744 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '070077', 'phone': '18276762767', 'password': 'w5CFmE23JnprcVfWBNR97fJxbbNKFJuQyG3F6KKP5ztKQ+TV8Qy6aF7oHxSvfel7kc1fVZ0rKiGxUVKBJZYwBcvftse7Sk3f17sRHkQxGU2fkF8fbD6DEh5DRWMEpPu6y//wLKvR2aB2lidLM004jukCOdX2Z1MX8hRE3lX5zU83GCOIB1P7KJUbp/NL0g/a/jUNrCCP25Bafb1mvFf0yUoMAFWwLj//c2QkuRfrnx8EvLmbsxKuFF8dOuw0hkBCriwrSay26qjkOeznHfBEWRjCERioqVgNYmxC7mctkAdoMZnlc5CFhBZAr2RDPyg1ChOyZj6+VTA/DarmcDu6SpsdTr2eAO1hTAsrbgt8LJLOL0tl6wRYVQOBDlJ14QGzS+IJSiSvWZm15ELaf6i9G1N6BSkijCA5kbtrmRTw1hD/QPVnnLgKf9mHcP+ktIcjbm/5faYGkQzadenM1v1Q16V/Q0yWGf3sfEIsnNso97dK/DryjVX0aEjOzVYmpW+QQ+zREKLDWmib9/BV0RtebPReDJ9saLJO9jzK1sHkfZLkPRzeqiiRtXUqml9MLxjWhiF1amngowN+HerQ+u2u2624nBLrxOeoLi9qVwKIHDpfhu8twwy1SQJIpNCl+8mJvrDvPlV3Lub2N0oPdcQ6HMhrnN/DM0caHToc1Vs5GsY='}
2022-04-28 11:59:24,822 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:24,822 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}, 'time': '14.087467ms'}
2022-04-28 11:59:24,822 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 11:59:24,823 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE']
2022-04-28 11:59:24,823 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE,并设置为Data类实例化对象的属性和值。
2022-04-28 11:59:24,828 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:24,828 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 11:59:24,830 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:59:24,830 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:59:24,830 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:24,830 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 11:59:24,830 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:24,832 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 11:59:24,832 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 11:59:24,892 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:24,894 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.081053ms'}
2022-04-28 11:59:24,894 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 11:59:24,894 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 11:59:24,894 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 11:59:24,894 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:59:24,894 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:59:24,894 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:24,894 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 11:59:24,894 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 11:59:24,895 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:24,895 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:24,900 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:24,900 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:59:24,900 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:59:24,900 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:59:24,900 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:59:24,901 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:24,901 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 11:59:25,591 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:25,591 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:25,591 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:25,592 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:25,592 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:26,000 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:26,001 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.350929ms'}
2022-04-28 11:59:26,003 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:59:26,003 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:59:26,003 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:26,003 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:59:26,004 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:59:26,004 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:26,004 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:26,660 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 11:59:26,660 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:59:26,670 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:59:26,670 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:59:26,670 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:59:26,703 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:59:26,703 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:59:26,708 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:26,708 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":#client_id#,"note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:59:26,708 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:59:26,710 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:59:26,710 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":1,"note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:59:26,710 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:59:26,710 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 11:59:27,419 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:27,419 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:27,419 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:27,420 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:27,420 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 11:59:27,513 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:27,513 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.280341ms'}
2022-04-28 11:59:27,513 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:59:27,513 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:59:27,513 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:27,513 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:59:27,513 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:59:27,513 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:27,513 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:28,200 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 11:59:28,200 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:59:28,216 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:59:28,216 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:59:28,217 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:59:28,230 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:59:28,230 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:59:28,239 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:28,240 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":#client_id#}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:59:28,240 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:59:28,240 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:59:28,240 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 11:59:28,241 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:59:28,241 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 11:59:28,930 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:28,931 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:28,931 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:28,934 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:28,934 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 11:59:29,022 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:29,022 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.2547ms'}
2022-04-28 11:59:29,023 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 11:59:29,023 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 11:59:29,023 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,023 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 11:59:29,023 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 11:59:29,023 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,024 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:29,740 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 11:59:29,740 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 11:59:29,756 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 11:59:29,756 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 11:59:29,756 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 11:59:29,787 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 11:59:29,787 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 11:59:29,792 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:29,792 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,792 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:59:29,792 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:59:29,793 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,793 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,793 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:29,793 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:29,793 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:29,796 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:29,796 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,854 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:29,854 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.769843ms'}
2022-04-28 11:59:29,854 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:59:29,854 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:59:29,855 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,855 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 11:59:29,855 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 11:59:29,855 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,855 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:29,856 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:29,856 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,856 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:59:29,857 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:59:29,857 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,857 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,857 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:29,857 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:29,857 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:29,857 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:29,858 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,926 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:29,927 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.101715ms'}
2022-04-28 11:59:29,927 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:59:29,927 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:59:29,927 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,927 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:59:29,927 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:59:29,927 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,927 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:29,932 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:29,932 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,934 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:59:29,934 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:59:29,934 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,934 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:29,934 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:29,934 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:29,935 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:29,935 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,993 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:29,993 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.192797ms'}
2022-04-28 11:59:29,993 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:59:29,993 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:59:29,993 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,993 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:59:29,993 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:59:29,993 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:29,993 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:29,996 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:29,996 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,996 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 11:59:29,996 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 11:59:29,996 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:29,996 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:29,996 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:29,996 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:29,998 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:29,998 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:29,998 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:30,078 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:30,078 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.335205ms'}
2022-04-28 11:59:30,078 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:59:30,078 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:59:30,078 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:30,078 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 11:59:30,078 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 11:59:30,078 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:30,078 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 11:59:30,080 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 11:59:30,080 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 11:59:30,080 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 11:59:30,080 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 11:59:30,081 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:30,081 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 11:59:30,081 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 11:59:30,081 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzE2NSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3MzY1fQ.cLBiDD-4L9JhJ2JzEnk4jaC07cAeXSJVGl7UAD70hUE'}
2022-04-28 11:59:30,081 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 11:59:30,083 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 11:59:30,153 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 11:59:30,154 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.225293ms'}
2022-04-28 11:59:30,154 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 11:59:30,154 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 11:59:30,154 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:30,155 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 11:59:30,155 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 11:59:30,155 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 11:59:30,155 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:00:59,017 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：mzPWaJA0DXFJ7ZBdTWBMHVxOxwqB6AsvXiZmxs9ebmy07eVXMg/BaRjcN6RYfyhlXdf4HVrv44QIhT2TawXnLZXJUmjJbSIhMpSJsnAwZa5k7xxDfTgD1bj8iNalwMBvcT2r/kvlN+KSYGOPAY1vWR8bzYwOCSn+/Oi7PICnxC6hQhrYVVgvlD8yJjx4QQ7qgtM2bnx9L2/xe1JAdZYDUFONQohsu+9xrs0u6Ff+MiWT7glSlArz4UqjwW5WguOabFgzNGAPWkLTjE321RpLvQtvxQ+5WxyGTAODo5rHYwSLhO5MhpIp7aMxxURDujbYP9asVrHXF4TPT0JJY6CGA9AidaWGM3tDavt4e5k8EjUIp+cWex2I7FEjfdyyHZzpRXNAXNmMN7tJj9zq6ryLQgn/L3eBSxIxloVpNAftwmY+0fKksEyQjv6Yc3OBHJs4Db1CsUZAKCbxaRncyNbxxeUfnxuoWAXRYC0334G6K4enWnSFoZUSedQus7c6oLWryH9LCrVoJmxLPwG43F5iPZaeXHsnRak5oZxje/wE1/Q0qM8bV/K0VbD6ToEvOKtphvF152zpRy8PPOIpcbCug0n0aczmQH09yHWjs6IpVgJY/oB1vVI42YaTKiKQtf4OIzrPUKTVlWn4BQkT9flFzoqElagKA0ndHR9AbQCsF/c=
2022-04-28 12:00:59,017 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:00:59,017 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:00:59,019 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 12:00:59,019 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 12:00:59,019 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 12:00:59,160 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:00:59,160 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '749007', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.520376ms'}
2022-04-28 12:00:59,161 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：749007
2022-04-28 12:00:59,161 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:00:59,161 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:00:59,161 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 12:00:59,163 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 12:00:59,163 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '749007', 'phone': '18276762767', 'password': 'mzPWaJA0DXFJ7ZBdTWBMHVxOxwqB6AsvXiZmxs9ebmy07eVXMg/BaRjcN6RYfyhlXdf4HVrv44QIhT2TawXnLZXJUmjJbSIhMpSJsnAwZa5k7xxDfTgD1bj8iNalwMBvcT2r/kvlN+KSYGOPAY1vWR8bzYwOCSn+/Oi7PICnxC6hQhrYVVgvlD8yJjx4QQ7qgtM2bnx9L2/xe1JAdZYDUFONQohsu+9xrs0u6Ff+MiWT7glSlArz4UqjwW5WguOabFgzNGAPWkLTjE321RpLvQtvxQ+5WxyGTAODo5rHYwSLhO5MhpIp7aMxxURDujbYP9asVrHXF4TPT0JJY6CGA9AidaWGM3tDavt4e5k8EjUIp+cWex2I7FEjfdyyHZzpRXNAXNmMN7tJj9zq6ryLQgn/L3eBSxIxloVpNAftwmY+0fKksEyQjv6Yc3OBHJs4Db1CsUZAKCbxaRncyNbxxeUfnxuoWAXRYC0334G6K4enWnSFoZUSedQus7c6oLWryH9LCrVoJmxLPwG43F5iPZaeXHsnRak5oZxje/wE1/Q0qM8bV/K0VbD6ToEvOKtphvF152zpRy8PPOIpcbCug0n0aczmQH09yHWjs6IpVgJY/oB1vVI42YaTKiKQtf4OIzrPUKTVlWn4BQkT9flFzoqElagKA0ndHR9AbQCsF/c='}
2022-04-28 12:00:59,240 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:00:59,240 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}, 'time': '14.47818ms'}
2022-04-28 12:00:59,241 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 12:00:59,241 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk']
2022-04-28 12:00:59,241 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk,并设置为Data类实例化对象的属性和值。
2022-04-28 12:00:59,246 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:00:59,246 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '创建一个客户', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 12:00:59,246 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 12:00:59,246 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 12:00:59,247 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:00:59,247 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 12:00:59,247 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:00:59,248 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 12:00:59,248 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 12:00:59,319 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:00:59,320 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.256151ms'}
2022-04-28 12:00:59,320 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 12:00:59,320 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 12:00:59,320 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 12:00:59,321 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 12:00:59,321 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 12:00:59,321 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:00:59,321 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 12:00:59,321 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 12:00:59,321 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:00:59,322 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:00:59,326 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:00:59,326 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 12:00:59,326 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 12:00:59,326 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 12:00:59,327 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 12:00:59,327 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:00:59,327 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 12:01:00,029 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:00,029 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:00,029 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:00,030 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:00,030 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:00,084 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:00,084 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.081237ms'}
2022-04-28 12:01:00,085 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 12:01:00,085 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 12:01:00,085 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:00,085 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 12:01:00,085 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 12:01:00,085 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:00,085 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:00,743 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 12:01:00,743 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 12:01:00,758 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 12:01:00,758 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 12:01:00,758 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 12:01:00,775 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 12:01:00,775 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 12:01:00,782 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:00,782 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":#client_id#,"note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 12:01:00,782 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 12:01:00,782 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 12:01:00,782 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 2, 'title': '创建角色，备注为空', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role002'", 'url': '/role/create/one', 'req_data': '{"name":"test_role002","owned_customer":1,"note":null}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role002\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 12:01:00,783 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 12:01:00,783 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role002'
2022-04-28 12:01:01,569 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:01,569 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:01,569 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:01,571 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:01,572 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role002', 'owned_customer': 1, 'note': None}
2022-04-28 12:01:01,648 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:01,648 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.34854ms'}
2022-04-28 12:01:01,649 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 12:01:01,649 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 12:01:01,649 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:01,649 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 12:01:01,649 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 12:01:01,649 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:01,649 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:02,332 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role002'
2022-04-28 12:01:02,332 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 12:01:02,347 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 12:01:02,347 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 12:01:02,347 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 12:01:02,361 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 12:01:02,361 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 12:01:02,367 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:02,367 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":#client_id#}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 12:01:02,367 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 12:01:02,367 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 12:01:02,368 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 3, 'title': '缺失note请求参数', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role003'", 'url': '/role/create/one', 'req_data': '{"name":"test_role003","owned_customer":1}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role003\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 12:01:02,368 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 12:01:02,368 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role003'
2022-04-28 12:01:03,054 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:03,055 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:03,055 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:03,056 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:03,056 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role003', 'owned_customer': 1}
2022-04-28 12:01:03,184 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:03,185 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.46281ms'}
2022-04-28 12:01:03,185 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 12:01:03,187 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 12:01:03,187 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:03,187 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 12:01:03,187 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 12:01:03,187 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:03,187 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:03,847 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role003'
2022-04-28 12:01:03,848 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 12:01:03,858 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 12:01:03,858 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 12:01:03,859 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 12:01:03,892 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 12:01:03,892 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 12:01:03,900 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:03,900 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:03,900 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 12:01:03,900 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 12:01:03,901 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 4, 'title': '角色名重复', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色已存在","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:03,901 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:03,901 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:03,901 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:03,901 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:03,902 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:03,903 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:03,963 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:03,963 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色已存在', 'data': {}, 'time': '2.752714ms'}
2022-04-28 12:01:03,963 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 12:01:03,963 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 12:01:03,963 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:03,963 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色已存在
2022-04-28 12:01:03,963 ARS INFO my_assert.py [29行]: 预期结果为：角色已存在
2022-04-28 12:01:03,963 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:03,964 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:03,968 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:03,968 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:03,969 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 12:01:03,969 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 12:01:03,969 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 5, 'title': 'name为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":null,"owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:03,969 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:03,969 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:03,969 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:03,969 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:03,970 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:03,970 ARS INFO handle_request.py [30行]: 请求数据为：{'name': None, 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,019 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:04,019 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '1.951712ms'}
2022-04-28 12:01:04,019 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 12:01:04,019 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 12:01:04,019 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,019 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 12:01:04,019 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 12:01:04,019 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,019 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:04,024 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:04,025 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 6, 'title': 'owned_customer为空', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":null,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:04,025 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 12:01:04,025 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 12:01:04,025 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,025 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:04,025 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:04,025 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:04,026 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:04,026 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': None, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,081 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:04,081 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.138646ms'}
2022-04-28 12:01:04,083 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 12:01:04,083 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 12:01:04,083 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,083 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 12:01:04,083 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 12:01:04,083 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,083 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:04,086 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:04,086 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:04,086 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id']
2022-04-28 12:01:04,086 ARS INFO handle_replace.py [44行]: 将标识符为：#client_id#，替换为：1
2022-04-28 12:01:04,087 ARS INFO handle_replace.py [47行]: 替换之后的测试用例数据为：{'case_id': 7, 'title': '缺失name请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"角色名称为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:04,087 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,087 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:04,087 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:04,087 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:04,088 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:04,088 ARS INFO handle_request.py [30行]: 请求数据为：{'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,187 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:04,187 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '角色名称为必填字段', 'data': {}, 'time': '2.397941ms'}
2022-04-28 12:01:04,187 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 12:01:04,187 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 12:01:04,187 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,188 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：角色名称为必填字段
2022-04-28 12:01:04,188 ARS INFO my_assert.py [29行]: 预期结果为：角色名称为必填字段
2022-04-28 12:01:04,188 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,188 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 12:01:04,195 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 12:01:04,195 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 8, 'title': '缺失owned_customer请求参数', 'method': 'post', 'pre_sql': None, 'url': '/role/create/one', 'req_data': '{"name":"test_role001","note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":-1,"type":"eq"},\n{"expr":"$.msg","expected":"所属客户为必填字段","type":"eq"}]', 'assert_db': None, 'extract': None, 'execute': 'True'}
2022-04-28 12:01:04,195 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 12:01:04,195 ARS INFO handle_replace.py [50行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 12:01:04,196 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,196 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 12:01:04,196 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 12:01:04,196 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTcyMzI1OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTE3NDU5fQ.LfNy-mwbCZpwaH45V2m7s73x9LK1iH39KCeAT4e9Kjk'}
2022-04-28 12:01:04,197 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 12:01:04,198 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 12:01:04,278 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 12:01:04,279 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '所属客户为必填字段', 'data': {}, 'time': '2.227024ms'}
2022-04-28 12:01:04,279 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 12:01:04,279 ARS INFO my_assert.py [29行]: 预期结果为：-1
2022-04-28 12:01:04,279 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,279 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：所属客户为必填字段
2022-04-28 12:01:04,279 ARS INFO my_assert.py [29行]: 预期结果为：所属客户为必填字段
2022-04-28 12:01:04,280 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 12:01:04,280 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:17:11,661 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：UYNsba8wOGnU15Kc+LCIXYzeSSs3Ci2Ip7qGBFOLEJUdmJh7bz1/YJSoAf61tu89oAbs5W4GNnabuQDuCWq3ebb7lJ/nqQzoKTJF2jpYpPDJ5fX5E55jNjQuntujCClLVsOr3QiONRU9c5ZAaG/PpeNfVjRInljj0INgQa7nsbVTv2j0yEirbD6/0Dfh+BUSO6Pw+tR62dmA9PTscAwB2sEkU0vah5FlUodKYl1D9d5SHMoYP5lvmwMcvrrqgiVj5borMdZKbMxOIjletjx/dBRUi3FJZPnkfqrgWM+av6IPEhnon6mut1iRYrHhVJxPcDhCjfnDRrA8WQneAu/0viyL2tDRbWnv8TPAcSBIQXucWZwgduKtVklsJOwIF8mkJ1Q6OrMTNn2PlYGtKVeRYOJHaklgIufenlchlRb5yCVJQmCEFbmoUDEcv9SE5HgaDthsiSmbQqE1JWXfyIo2R3hRGCA7IhMqxyDOEImrTJTYLJ8H94Z5f9rWn+v1iRkPfFxqqeABZ05OgrzZU7Y7cxUUPNnuFmBaKrdeu5OuwrYCg9F6E4CZqwzkeVx3zPVia1WrVIuLYqXtI26Qjcg2LVTPwzWzvBBV4I+yimC6AIh0gnZKWSIwlvtrRJklF6tuhLHyNFnPOrysI/1F9VEHcRsj3YqUMNlO5mpdaZ/7rcQ=
2022-04-28 16:17:11,667 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:17:11,667 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:17:11,667 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:17:11,667 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:17:11,667 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:17:11,849 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:17:11,851 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '030935', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.908867ms'}
2022-04-28 16:17:11,851 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：030935
2022-04-28 16:17:11,852 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:17:11,852 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:17:11,852 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:17:11,854 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:17:11,854 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '030935', 'phone': '18276762767', 'password': 'UYNsba8wOGnU15Kc+LCIXYzeSSs3Ci2Ip7qGBFOLEJUdmJh7bz1/YJSoAf61tu89oAbs5W4GNnabuQDuCWq3ebb7lJ/nqQzoKTJF2jpYpPDJ5fX5E55jNjQuntujCClLVsOr3QiONRU9c5ZAaG/PpeNfVjRInljj0INgQa7nsbVTv2j0yEirbD6/0Dfh+BUSO6Pw+tR62dmA9PTscAwB2sEkU0vah5FlUodKYl1D9d5SHMoYP5lvmwMcvrrqgiVj5borMdZKbMxOIjletjx/dBRUi3FJZPnkfqrgWM+av6IPEhnon6mut1iRYrHhVJxPcDhCjfnDRrA8WQneAu/0viyL2tDRbWnv8TPAcSBIQXucWZwgduKtVklsJOwIF8mkJ1Q6OrMTNn2PlYGtKVeRYOJHaklgIufenlchlRb5yCVJQmCEFbmoUDEcv9SE5HgaDthsiSmbQqE1JWXfyIo2R3hRGCA7IhMqxyDOEImrTJTYLJ8H94Z5f9rWn+v1iRkPfFxqqeABZ05OgrzZU7Y7cxUUPNnuFmBaKrdeu5OuwrYCg9F6E4CZqwzkeVx3zPVia1WrVIuLYqXtI26Qjcg2LVTPwzWzvBBV4I+yimC6AIh0gnZKWSIwlvtrRJklF6tuhLHyNFnPOrysI/1F9VEHcRsj3YqUMNlO5mpdaZ/7rcQ='}
2022-04-28 16:17:11,935 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:17:11,935 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODYzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyODMyfQ.zCDPlZ5OWGkHQL39tP9HE-vg7nDRPZLfOEiAPLjt00M'}, 'time': '14.779258ms'}
2022-04-28 16:17:11,936 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:17:11,936 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODYzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyODMyfQ.zCDPlZ5OWGkHQL39tP9HE-vg7nDRPZLfOEiAPLjt00M']
2022-04-28 16:17:11,936 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODYzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyODMyfQ.zCDPlZ5OWGkHQL39tP9HE-vg7nDRPZLfOEiAPLjt00M,并设置为Data类实例化对象的属性和值。
2022-04-28 16:17:11,940 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:17:11,940 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '获取客户列表', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 16:17:11,942 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 16:17:11,942 ARS INFO handle_replace.py [59行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 16:17:11,942 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:17:11,942 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 16:17:11,942 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODYzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyODMyfQ.zCDPlZ5OWGkHQL39tP9HE-vg7nDRPZLfOEiAPLjt00M'}
2022-04-28 16:17:11,943 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 16:17:11,944 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 16:17:12,041 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:17:12,042 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.372284ms'}
2022-04-28 16:17:12,043 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 16:17:12,043 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 16:17:12,044 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 16:17:12,046 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:17:12,046 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:17:12,046 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:17:12,047 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 16:17:12,047 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 16:17:12,047 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:17:12,048 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:17:12,060 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:17:12,062 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='#role_name#'", 'url': '/role/create/one', 'req_data': '{"name":"#role_name#","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'#role_name#\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:17:12,062 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['role_name', 'role_name', 'client_id', 'role_name']
2022-04-28 16:17:12,062 ARS INFO handle_replace.py [53行]: 将标识符为：#client_id#，替换为：1
2022-04-28 16:17:12,063 ARS INFO handle_replace.py [56行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='先河系统-云南省-563机房'", 'url': '/role/create/one', 'req_data': '{"name":"先河系统-云南省-563机房","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'先河系统-云南省-563机房\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:17:12,063 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': '先河系统-云南省-563机房', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 16:17:12,064 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='先河系统-云南省-563机房'
2022-04-28 16:17:12,940 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:17:12,940 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:17:12,940 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODYzMiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyODMyfQ.zCDPlZ5OWGkHQL39tP9HE-vg7nDRPZLfOEiAPLjt00M'}
2022-04-28 16:17:12,942 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 16:17:12,942 ARS INFO handle_request.py [30行]: 请求数据为：{'name': '先河系统-云南省-563机房', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 16:17:13,015 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:17:13,016 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.281772ms'}
2022-04-28 16:17:13,016 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:17:13,016 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:17:13,016 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:17:13,016 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:17:13,016 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:17:13,016 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:17:13,016 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:17:13,915 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='先河系统-云南省-563机房'
2022-04-28 16:17:13,916 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:17:13,926 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:17:13,926 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:17:13,927 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:17:13,973 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:17:13,973 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:18:45,065 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：azioeV93ieLXmGDe3GMV6bNWZjTt503wSHkX16qx9sbyhtInp/98NwTIJjCR8qyNCqwnhoXSYaurLcfzR9aRVVEtjfriE74mINVdBu//p1SL8Fde5KYC+Mm/GNu40U5qiRSKrhDP2lfhYNgKtXHtkUuGj2P7RyeSl7AIdkw9wTcX6R5xUOborci4Bd2J52yPUeSpUQ7BRauNGIQchbkz4KNo1kj1Q5tBPzwRx59R5DqxJsSarrA8GefD0LRdzUy6TfH6j+m3gugoUSY9b2ooYjHj1sePDWqdSl2OlQckWOkTvXvxSHqWr+HGubD1xRxeGEpzrOOkVhOZ/MPIbwS/pvl95FDLzUz/nrDhnjM38XJtgk2Jgs799b4gGF0Fp4VEl0bsFgdMc48oNVjtoAV8w16TEBnqC/QbuFNd/20D6pB2aHw9JrNp0HlOQq2KLc5ESWqLrwYhvwwaxr93lFHZ5fxGG7C/DH9MErEJ5P4nnZLZYi3caCyTkHAQgo9esE9MbcbS6PNyAAaYfPxOis5OqRYSLTrEwXaQVMmvEuUg06sVkwKv/r0DF+WYJvtg9sh8+i3gQ2Jdww6KYeE+6qOZgmBQNpRgwF4d9yE85Thn4vVBW+Wr0AfuIfqe78t9y7U6NXRXzuVCRG6xEQB6QzJ8e5O4xqB3cRyAih2j9saXhnM=
2022-04-28 16:18:45,065 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:18:45,065 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:18:45,065 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:18:45,067 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:18:45,067 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:18:45,143 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:18:45,143 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '541767', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.552635ms'}
2022-04-28 16:18:45,144 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：541767
2022-04-28 16:18:45,144 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:18:45,144 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:18:45,144 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:18:45,145 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:18:45,145 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '541767', 'phone': '18276762767', 'password': 'azioeV93ieLXmGDe3GMV6bNWZjTt503wSHkX16qx9sbyhtInp/98NwTIJjCR8qyNCqwnhoXSYaurLcfzR9aRVVEtjfriE74mINVdBu//p1SL8Fde5KYC+Mm/GNu40U5qiRSKrhDP2lfhYNgKtXHtkUuGj2P7RyeSl7AIdkw9wTcX6R5xUOborci4Bd2J52yPUeSpUQ7BRauNGIQchbkz4KNo1kj1Q5tBPzwRx59R5DqxJsSarrA8GefD0LRdzUy6TfH6j+m3gugoUSY9b2ooYjHj1sePDWqdSl2OlQckWOkTvXvxSHqWr+HGubD1xRxeGEpzrOOkVhOZ/MPIbwS/pvl95FDLzUz/nrDhnjM38XJtgk2Jgs799b4gGF0Fp4VEl0bsFgdMc48oNVjtoAV8w16TEBnqC/QbuFNd/20D6pB2aHw9JrNp0HlOQq2KLc5ESWqLrwYhvwwaxr93lFHZ5fxGG7C/DH9MErEJ5P4nnZLZYi3caCyTkHAQgo9esE9MbcbS6PNyAAaYfPxOis5OqRYSLTrEwXaQVMmvEuUg06sVkwKv/r0DF+WYJvtg9sh8+i3gQ2Jdww6KYeE+6qOZgmBQNpRgwF4d9yE85Thn4vVBW+Wr0AfuIfqe78t9y7U6NXRXzuVCRG6xEQB6QzJ8e5O4xqB3cRyAih2j9saXhnM='}
2022-04-28 16:18:45,256 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:18:45,256 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODcyNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyOTI1fQ.yVagoJGs7idX7loPEkqgNKcmuvaDrt2sq6Idm8vlwvE'}, 'time': '13.420533ms'}
2022-04-28 16:18:45,256 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:18:45,257 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODcyNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyOTI1fQ.yVagoJGs7idX7loPEkqgNKcmuvaDrt2sq6Idm8vlwvE']
2022-04-28 16:18:45,257 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODcyNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyOTI1fQ.yVagoJGs7idX7loPEkqgNKcmuvaDrt2sq6Idm8vlwvE,并设置为Data类实例化对象的属性和值。
2022-04-28 16:18:45,263 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:18:45,263 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '获取客户列表', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 16:18:45,263 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 16:18:45,263 ARS INFO handle_replace.py [59行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 16:18:45,263 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:18:45,263 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 16:18:45,263 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODcyNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyOTI1fQ.yVagoJGs7idX7loPEkqgNKcmuvaDrt2sq6Idm8vlwvE'}
2022-04-28 16:18:45,264 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 16:18:45,265 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 16:18:45,329 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:18:45,329 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.067226ms'}
2022-04-28 16:18:45,331 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 16:18:45,331 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 16:18:45,331 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 16:18:45,332 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:18:45,332 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:18:45,332 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:18:45,332 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 16:18:45,332 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 16:18:45,332 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:18:45,332 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:18:45,337 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:18:45,337 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='#role_name#'", 'url': '/role/create/one', 'req_data': '{"name":"#role_name#","owned_customer":#client_id#,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'#role_name#\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:18:45,337 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['role_name', 'role_name', 'client_id', 'role_name']
2022-04-28 16:18:45,337 ARS INFO handle_replace.py [53行]: 将标识符为：#client_id#，替换为：1
2022-04-28 16:18:45,338 ARS INFO handle_replace.py [56行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='role-wISjq-446'", 'url': '/role/create/one', 'req_data': '{"name":"role-wISjq-446","owned_customer":1,"note":"西游记、水浒装、三国演义、红楼梦"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'role-wISjq-446\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:18:45,338 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'role-wISjq-446', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 16:18:45,338 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='role-wISjq-446'
2022-04-28 16:18:49,029 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:18:49,030 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:18:49,030 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODcyNSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMyOTI1fQ.yVagoJGs7idX7loPEkqgNKcmuvaDrt2sq6Idm8vlwvE'}
2022-04-28 16:18:49,032 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 16:18:49,032 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'role-wISjq-446', 'owned_customer': 1, 'note': '西游记、水浒装、三国演义、红楼梦'}
2022-04-28 16:18:49,115 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:18:49,115 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.272738ms'}
2022-04-28 16:18:49,115 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:18:49,115 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:18:49,115 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:18:49,115 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:18:49,115 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:18:49,115 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:18:49,115 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:18:49,780 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='role-wISjq-446'
2022-04-28 16:18:49,780 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:18:49,795 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:18:49,795 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:18:49,796 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:18:49,819 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:18:49,819 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:21:19,063 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：KAqyqfI5roSs3SdH2ZsZ86F9uCqK+4ll7YAXfVbb43F91E07+82oP3enRlgK5cqnd/pIoIyrZs9XI/F639lkF4Ao2PKOQrY8ytCSfysnC2rPCExh+6n/Egyihk+OYb4+LeDGScBtHVyVumiqEJsdB/CYCyMg7H2yVKDxYW9naQ50LtPR/GsOcPaQ11aLepvbeVYykrUDhYvatCUobNtCiqfisrq1zq5/wvwuU7qLS3nYr1FBU3UNChnrK0uEzbUGn5Qk1Uca7VL6OoNS/Tpd6C3sLbgmQtXt3GMkFA+e4ShyQ6pRBZuGSR4FSFGz1yYyl954KyvkIdKZjZZKiFox8mFPYABuSlMYaiO6j+giB2ervjQJ9I2JVnIuUuL34SxdO0lOv1tHby9bGg4s932LE6rEsGzcSKV3wjxqpFdmbai/eU5IL4X25PyH7gJNuwLFODMEXCJSSyelT4mNUFWCYOZEZCgT4+pkmhcp34jEMeHAX35u6L89FIYjWj0xJ0EflEukGMmDO5knBiTxvRSKYwy0W4LdZuJw5D67d4zqndY4SNiyO29/yNdtZVGJ34owf1d9BNaBHbds2sKiq6vOMj3nIBAdHtcHzwKnc3wHk8VJXXEPbeaE3xyDkg6VFb75Fz68mOHEEl0+GV78FCloy22aJitKhuL4h9SypWjNqKs=
2022-04-28 16:21:19,064 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:19,064 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:21:19,064 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:21:19,064 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:21:19,064 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:21:19,145 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:19,145 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '227724', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.935272ms'}
2022-04-28 16:21:19,147 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：227724
2022-04-28 16:21:19,147 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:19,147 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:21:19,147 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:21:19,148 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:21:19,148 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '227724', 'phone': '18276762767', 'password': 'KAqyqfI5roSs3SdH2ZsZ86F9uCqK+4ll7YAXfVbb43F91E07+82oP3enRlgK5cqnd/pIoIyrZs9XI/F639lkF4Ao2PKOQrY8ytCSfysnC2rPCExh+6n/Egyihk+OYb4+LeDGScBtHVyVumiqEJsdB/CYCyMg7H2yVKDxYW9naQ50LtPR/GsOcPaQ11aLepvbeVYykrUDhYvatCUobNtCiqfisrq1zq5/wvwuU7qLS3nYr1FBU3UNChnrK0uEzbUGn5Qk1Uca7VL6OoNS/Tpd6C3sLbgmQtXt3GMkFA+e4ShyQ6pRBZuGSR4FSFGz1yYyl954KyvkIdKZjZZKiFox8mFPYABuSlMYaiO6j+giB2ervjQJ9I2JVnIuUuL34SxdO0lOv1tHby9bGg4s932LE6rEsGzcSKV3wjxqpFdmbai/eU5IL4X25PyH7gJNuwLFODMEXCJSSyelT4mNUFWCYOZEZCgT4+pkmhcp34jEMeHAX35u6L89FIYjWj0xJ0EflEukGMmDO5knBiTxvRSKYwy0W4LdZuJw5D67d4zqndY4SNiyO29/yNdtZVGJ34owf1d9BNaBHbds2sKiq6vOMj3nIBAdHtcHzwKnc3wHk8VJXXEPbeaE3xyDkg6VFb75Fz68mOHEEl0+GV78FCloy22aJitKhuL4h9SypWjNqKs='}
2022-04-28 16:21:19,255 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:19,255 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg3OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDc5fQ.9D3ztVPemVLuJzQwIFw3FT007M3lUD-7dkj6T4Vl2aw'}, 'time': '14.273288ms'}
2022-04-28 16:21:19,256 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:21:19,256 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg3OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDc5fQ.9D3ztVPemVLuJzQwIFw3FT007M3lUD-7dkj6T4Vl2aw']
2022-04-28 16:21:19,256 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg3OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDc5fQ.9D3ztVPemVLuJzQwIFw3FT007M3lUD-7dkj6T4Vl2aw,并设置为Data类实例化对象的属性和值。
2022-04-28 16:21:19,262 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:21:19,263 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '获取客户列表', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 16:21:19,263 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 16:21:19,263 ARS INFO handle_replace.py [63行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 16:21:19,264 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:19,264 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 16:21:19,264 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg3OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDc5fQ.9D3ztVPemVLuJzQwIFw3FT007M3lUD-7dkj6T4Vl2aw'}
2022-04-28 16:21:19,267 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 16:21:19,267 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 16:21:19,353 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:19,353 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.114481ms'}
2022-04-28 16:21:19,355 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 16:21:19,355 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 16:21:19,355 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 16:21:19,355 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:21:19,355 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:21:19,355 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:19,355 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 16:21:19,355 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 16:21:19,355 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:19,355 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:21:19,358 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:21:19,358 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='#role_name#'", 'url': '/role/create/one', 'req_data': '{"name":"#role_name#","owned_customer":#client_id#,"note":"#comment#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'#role_name#\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:21:19,358 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['role_name', 'role_name', 'client_id', 'comment', 'role_name']
2022-04-28 16:21:19,358 ARS INFO handle_replace.py [57行]: 将标识符为：#client_id#，替换为：1
2022-04-28 16:21:19,358 ARS INFO handle_replace.py [60行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='role-xqPfy-758'", 'url': '/role/create/one', 'req_data': '{"name":"role-xqPfy-758","owned_customer":1,"note":"由于政府空间网上一个.等级标题发布处理不断内容起来.情况关系他们应用这是."}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'role-xqPfy-758\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:21:19,358 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'role-xqPfy-758', 'owned_customer': 1, 'note': '由于政府空间网上一个.等级标题发布处理不断内容起来.情况关系他们应用这是.'}
2022-04-28 16:21:19,358 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='role-xqPfy-758'
2022-04-28 16:21:20,094 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:20,094 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:21:20,094 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg3OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDc5fQ.9D3ztVPemVLuJzQwIFw3FT007M3lUD-7dkj6T4Vl2aw'}
2022-04-28 16:21:20,095 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 16:21:20,095 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'role-xqPfy-758', 'owned_customer': 1, 'note': '由于政府空间网上一个.等级标题发布处理不断内容起来.情况关系他们应用这是.'}
2022-04-28 16:21:20,176 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:20,176 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.38356ms'}
2022-04-28 16:21:20,176 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:21:20,176 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:21:20,177 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:20,177 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:21:20,177 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:21:20,177 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:20,177 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:21:20,825 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='role-xqPfy-758'
2022-04-28 16:21:20,825 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:21:20,835 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:21:20,835 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:21:20,835 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:21:20,865 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:21:20,865 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:21:38,815 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：Ub/hJjG3I+44ZSz7v7EAHl2BcyFD9TM3uCAK+V0gK4EPxN1TkBxdZXqeuPWFYqsMHdC9ri5/UNFSIVEUQY4r8h5/DHsk87yrQsJd/AVuJAA3UGRAjp4svOnOSw/j11frDJH6a2ZuArpym4x5f1RlDpMqFRmdyxjqf2Jje09DPJZ21+Xlu1zGBPjRT2JWwmfrjcs+zIF/928mK8mqNmKOfwZDHzsYQBpITgASvWLya7bvGoMA8elW9XHIJFvSyt6DiZlb3048/QLkHoq3XRPUHHuWXsH3rKqVeUWkQJAYz0uPN0p0JGgg+D3hpw1ajc5QjPYaSBy4XJCNhWo77sXMJU1PZo1GosQKgupg3QvVaZaeeK84zQJWhFWgvRU0cy6eUkJeA3juBYSY/ryiJVEIJG1VvAhVSWRyjl63+TNgibcEidkXqGtvcL4VGtc1QyysZrhB5qCD90uZzfQ196n96hnNTknV/ZkgrCTkTr5v7gs/G1g487LI6MEGzfusyMePxkYhUd9hHKdxYNQNkpFeDZM72H103VRcBJslYnutbPtPQaWutkHCiQljQgTWIw5m+epDKa1AfCanZaB2I8MBz6HN9yVtG2ucAr+wh828MPHBr6dkK2PDp47C1OLHwruVhkdn0fbUEQUW8KieVpwAtuE7jjZAJRqq3gqdHm0PVbM=
2022-04-28 16:21:38,815 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:38,816 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:21:38,816 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:21:38,816 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:21:38,816 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:21:38,904 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:38,904 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '025224', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.049966ms'}
2022-04-28 16:21:38,904 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：025224
2022-04-28 16:21:38,905 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:38,905 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:21:38,905 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:21:38,905 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:21:38,905 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '025224', 'phone': '18276762767', 'password': 'Ub/hJjG3I+44ZSz7v7EAHl2BcyFD9TM3uCAK+V0gK4EPxN1TkBxdZXqeuPWFYqsMHdC9ri5/UNFSIVEUQY4r8h5/DHsk87yrQsJd/AVuJAA3UGRAjp4svOnOSw/j11frDJH6a2ZuArpym4x5f1RlDpMqFRmdyxjqf2Jje09DPJZ21+Xlu1zGBPjRT2JWwmfrjcs+zIF/928mK8mqNmKOfwZDHzsYQBpITgASvWLya7bvGoMA8elW9XHIJFvSyt6DiZlb3048/QLkHoq3XRPUHHuWXsH3rKqVeUWkQJAYz0uPN0p0JGgg+D3hpw1ajc5QjPYaSBy4XJCNhWo77sXMJU1PZo1GosQKgupg3QvVaZaeeK84zQJWhFWgvRU0cy6eUkJeA3juBYSY/ryiJVEIJG1VvAhVSWRyjl63+TNgibcEidkXqGtvcL4VGtc1QyysZrhB5qCD90uZzfQ196n96hnNTknV/ZkgrCTkTr5v7gs/G1g487LI6MEGzfusyMePxkYhUd9hHKdxYNQNkpFeDZM72H103VRcBJslYnutbPtPQaWutkHCiQljQgTWIw5m+epDKa1AfCanZaB2I8MBz6HN9yVtG2ucAr+wh828MPHBr6dkK2PDp47C1OLHwruVhkdn0fbUEQUW8KieVpwAtuE7jjZAJRqq3gqdHm0PVbM='}
2022-04-28 16:21:38,971 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:38,971 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg5OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDk5fQ.opmFxQ5_9m78pwVedPDa_Ins2VsyJ7ggB2MHDdyQQSw'}, 'time': '14.365388ms'}
2022-04-28 16:21:38,971 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:21:38,973 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg5OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDk5fQ.opmFxQ5_9m78pwVedPDa_Ins2VsyJ7ggB2MHDdyQQSw']
2022-04-28 16:21:38,973 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg5OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDk5fQ.opmFxQ5_9m78pwVedPDa_Ins2VsyJ7ggB2MHDdyQQSw,并设置为Data类实例化对象的属性和值。
2022-04-28 16:21:38,976 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:21:38,976 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '获取客户列表', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 16:21:38,976 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 16:21:38,976 ARS INFO handle_replace.py [63行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 16:21:38,976 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:38,976 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 16:21:38,976 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg5OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDk5fQ.opmFxQ5_9m78pwVedPDa_Ins2VsyJ7ggB2MHDdyQQSw'}
2022-04-28 16:21:38,977 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 16:21:38,977 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 16:21:39,046 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:39,047 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.256117ms'}
2022-04-28 16:21:39,047 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 16:21:39,047 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 16:21:39,047 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 16:21:39,047 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:21:39,047 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:21:39,047 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:39,047 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 16:21:39,047 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 16:21:39,048 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:39,048 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:21:39,049 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:21:39,049 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='#role_name#'", 'url': '/role/create/one', 'req_data': '{"name":"#role_name#","owned_customer":#client_id#,"note":"#comment#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'#role_name#\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:21:39,049 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['role_name', 'role_name', 'client_id', 'comment', 'role_name']
2022-04-28 16:21:39,049 ARS INFO handle_replace.py [57行]: 将标识符为：#client_id#，替换为：1
2022-04-28 16:21:39,049 ARS INFO handle_replace.py [60行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='role-CmKqz-968'", 'url': '/role/create/one', 'req_data': '{"name":"role-CmKqz-968","owned_customer":1,"note":"使用状态世界设计一起地方方面.教育决定大小用户制作名称.很多发表进入."}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'role-CmKqz-968\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:21:39,049 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'role-CmKqz-968', 'owned_customer': 1, 'note': '使用状态世界设计一起地方方面.教育决定大小用户制作名称.很多发表进入.'}
2022-04-28 16:21:39,049 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='role-CmKqz-968'
2022-04-28 16:21:40,036 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:21:40,036 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:21:40,038 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczODg5OSwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzMDk5fQ.opmFxQ5_9m78pwVedPDa_Ins2VsyJ7ggB2MHDdyQQSw'}
2022-04-28 16:21:40,039 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 16:21:40,039 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'role-CmKqz-968', 'owned_customer': 1, 'note': '使用状态世界设计一起地方方面.教育决定大小用户制作名称.很多发表进入.'}
2022-04-28 16:21:40,129 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:21:40,131 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.701547ms'}
2022-04-28 16:21:40,131 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:21:40,131 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:21:40,131 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:40,131 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:21:40,131 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:21:40,131 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:21:40,131 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:21:41,136 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='role-CmKqz-968'
2022-04-28 16:21:41,136 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:21:41,151 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:21:41,151 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:21:41,151 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:21:41,169 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:21:41,171 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:26:57,070 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：RTX8ueXPdWSEk82Gn/OMXveHpCGlW9P1Fu2S9zM1qvQCE8P80Qowm6J6utCxFe1QTTj7IOe1d8LrbopPLtTJOeLUKir+PlacFQRtvhdCdt7tJt9+4bm6b8mDBToL3VDMP3F62FRiZQE2EmEPK09KCJdUYuU0bzwYSer5YQdVsU0XqfgNhB+wZy3dl2jQS3h8iCmzWRrchqCtvkKqlyrSQpFuw0H6WwE+vYFwxq6C8cXF5ykdLDEmPOtyZiWr9qWZ2WP0FL8jTBn0DR+aMGUbg1wZOkL6npYa5aRGtoZSFZOKd80W2a0oEMhSzc1WxpUHBiDd8rc8Qrndu0GLggPi7tlKV3hvGNlny4dy2NR7Ml0pn/lyFNaatmjLe4/SijzmdKsSM1aXFbjuVN7+nl7pbHxjQTP9pITpQToSoAoRSZKLebXJKEeeidwkyyaA6pcZ/juetkYauvtybhAF2n7TzDjQUjaZWAjTV9PF5lUpm2sVhs49u03uytEXniflAKugHhHG+F64XYv47RQt1LFmHkPHjFRqjNe/fXqq9EiZJW5Fj+HQ2isS0XKUimg6NzMi0FBQPfyq2ooYEcVsr7hTJ7kk4zSWygZz+eUWcpOD1kNi5DkkJ85XYokEhdR66RpYr3bhhlhTjxGDzGTTYMOYtIUoYEQPDPkLrL4UOsjzQX4=
2022-04-28 16:26:57,071 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:26:57,071 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:26:57,071 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:26:57,071 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:26:57,071 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:26:57,266 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:26:57,266 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '354966', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.176197ms'}
2022-04-28 16:26:57,269 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：354966
2022-04-28 16:26:57,269 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:26:57,269 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:26:57,269 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:26:57,270 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:26:57,270 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '354966', 'phone': '18276762767', 'password': 'RTX8ueXPdWSEk82Gn/OMXveHpCGlW9P1Fu2S9zM1qvQCE8P80Qowm6J6utCxFe1QTTj7IOe1d8LrbopPLtTJOeLUKir+PlacFQRtvhdCdt7tJt9+4bm6b8mDBToL3VDMP3F62FRiZQE2EmEPK09KCJdUYuU0bzwYSer5YQdVsU0XqfgNhB+wZy3dl2jQS3h8iCmzWRrchqCtvkKqlyrSQpFuw0H6WwE+vYFwxq6C8cXF5ykdLDEmPOtyZiWr9qWZ2WP0FL8jTBn0DR+aMGUbg1wZOkL6npYa5aRGtoZSFZOKd80W2a0oEMhSzc1WxpUHBiDd8rc8Qrndu0GLggPi7tlKV3hvGNlny4dy2NR7Ml0pn/lyFNaatmjLe4/SijzmdKsSM1aXFbjuVN7+nl7pbHxjQTP9pITpQToSoAoRSZKLebXJKEeeidwkyyaA6pcZ/juetkYauvtybhAF2n7TzDjQUjaZWAjTV9PF5lUpm2sVhs49u03uytEXniflAKugHhHG+F64XYv47RQt1LFmHkPHjFRqjNe/fXqq9EiZJW5Fj+HQ2isS0XKUimg6NzMi0FBQPfyq2ooYEcVsr7hTJ7kk4zSWygZz+eUWcpOD1kNi5DkkJ85XYokEhdR66RpYr3bhhlhTjxGDzGTTYMOYtIUoYEQPDPkLrL4UOsjzQX4='}
2022-04-28 16:26:57,355 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:26:57,356 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczOTIxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzNDE3fQ.lvLIMEYYyIMdCmDRtBWMtt36awPYCq0nOgrhdU7pnI4'}, 'time': '14.6276ms'}
2022-04-28 16:26:57,356 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:26:57,356 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczOTIxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzNDE3fQ.lvLIMEYYyIMdCmDRtBWMtt36awPYCq0nOgrhdU7pnI4']
2022-04-28 16:26:57,356 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczOTIxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzNDE3fQ.lvLIMEYYyIMdCmDRtBWMtt36awPYCq0nOgrhdU7pnI4,并设置为Data类实例化对象的属性和值。
2022-04-28 16:26:57,361 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:26:57,361 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 0, 'title': '获取客户列表', 'method': 'get', 'pre_sql': None, 'url': '/client/get/list', 'req_data': None, 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': None, 'extract': '{"client_id":"$..list[0].id"}', 'execute': 'True'}
2022-04-28 16:26:57,363 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：[]
2022-04-28 16:26:57,363 ARS INFO handle_replace.py [63行]: 用例中没有需要替换的标识符,无需进行处理。
2022-04-28 16:26:57,363 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:26:57,363 ARS INFO handle_request.py [21行]: 请求方法为:get
2022-04-28 16:26:57,363 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczOTIxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzNDE3fQ.lvLIMEYYyIMdCmDRtBWMtt36awPYCq0nOgrhdU7pnI4'}
2022-04-28 16:26:57,364 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/client/get/list
2022-04-28 16:26:57,365 ARS INFO handle_request.py [30行]: 请求数据为：None
2022-04-28 16:26:57,444 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:26:57,444 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'page': 1, 'page_size': 20, 'total': 3, 'list': [{'id': 1, 'name': '内部', 'note': ''}, {'id': 104, 'name': 'test001-111', 'note': 'test by terry modify'}, {'id': 106, 'name': '测试客户名称二十个字符一二三四五六七八九', 'note': 'test by terry'}]}, 'time': '2.295903ms'}
2022-04-28 16:26:57,444 ARS INFO handle_extract.py [26行]: 提取的变量名是：client_id，提取的jsonpath表达式是：$..list[0].id
2022-04-28 16:26:57,444 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：[1]
2022-04-28 16:26:57,444 ARS INFO handle_extract.py [33行]: 提取的变量名是：client_id，提取到的值是：1,并设置为Data类实例化对象的属性和值。
2022-04-28 16:26:57,444 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:26:57,444 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:26:57,444 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:26:57,444 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：操作成功
2022-04-28 16:26:57,444 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 16:26:57,446 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:26:57,446 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:26:57,449 ARS INFO test_role.py [28行]: ===========  新建角色接口测试  ===============
2022-04-28 16:26:57,449 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":#client_id#,"note":"#comment#"}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:26:57,449 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['client_id', 'comment']
2022-04-28 16:26:57,449 ARS INFO handle_replace.py [57行]: 将标识符为：#client_id#，替换为：1
2022-04-28 16:26:57,450 ARS INFO handle_replace.py [60行]: 替换之后的测试用例数据为：{'case_id': 1, 'title': '创建角色', 'method': 'post', 'pre_sql': "DELETE FROM t_role WHERE NAME='test_role001'", 'url': '/role/create/one', 'req_data': '{"name":"test_role001","owned_customer":1,"note":"产品还有功能全国.制作不同主要."}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_role WHERE NAME=\'test_role001\'","expected":1,"db_type":"count"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:26:57,450 ARS INFO test_role.py [35行]: 处理之后的请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '产品还有功能全国.制作不同主要.'}
2022-04-28 16:26:57,450 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_role WHERE NAME='test_role001'
2022-04-28 16:26:58,735 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:26:58,735 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:26:58,735 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTczOTIxNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTMzNDE3fQ.lvLIMEYYyIMdCmDRtBWMtt36awPYCq0nOgrhdU7pnI4'}
2022-04-28 16:26:58,736 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/role/create/one
2022-04-28 16:26:58,736 ARS INFO handle_request.py [30行]: 请求数据为：{'name': 'test_role001', 'owned_customer': 1, 'note': '产品还有功能全国.制作不同主要.'}
2022-04-28 16:26:58,822 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:26:58,822 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.321351ms'}
2022-04-28 16:26:58,822 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:26:58,822 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:26:58,822 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:26:58,823 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:26:58,823 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:26:58,823 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:26:58,823 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:26:59,476 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_role WHERE NAME='test_role001'
2022-04-28 16:26:59,476 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:26:59,483 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:26:59,483 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:26:59,483 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:26:59,513 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:26:59,513 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:52:45,888 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：tvDzDzu72+C+92Z/j9CB8ZIdWykQnnmhBB2dqvM6uYkbwYWM7Fr1g2Nr0AcQDyAiV9JtIZLR2BtzCzglBXRQ7+ZClD7eIJYAaVtOVehVfRTXrMudoEhkEs/heqlfAyQ3jmwkNAji0cmqWWJBK3tMlCBu+yyVZALTc+hJ7AVbV4TJ/fdhl77bMazKJZ30VdqZEbGNetQqnT2pJh+J9UJuKd0PollKVFjDs1ifiqiUDIjnMBUhX3E6ux3BgxpY4GqwtTvKd69qgIAXAMAk7QdpsjoLNMBJR8iBVDPdUnRHSd1Cf50fnAuMSj2FTP2OQtQzCzZPEJeyDOp/as/t2NOZZ4LbDP7tJAj2wBNU2l7xuDjSDLUPCL+ouoJA2KvAVHHkC6ekmZDfZUTxuQ+Jdjc9Zqqj1I6ZnS5FnMRgXNi+/qo3pYWR/SnxXs394eHowpBD3FQuCmfIlvcDiyufwfwAu35pVd/6bK2/8xIrDNB9qRoLutnUZ3iUNlcKUIblwrjOH0Gb5dGB0/wEk67FM6ouJ7QFjiQWKaY/pKJGe1ojS55ZkVVlzDcdtizLVNZt7GR9y+gJeMnqYHXOSBHRZHgxq+iHf+6tOOwVxgDaajRcbFVUZUV94Fc57wt6qT15xHjoakQ1CpXX7tBzhXJkHxnQgeCqi/LaxIxobaU5PKPsWVU=
2022-04-28 16:52:45,888 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:52:45,888 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:52:45,889 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:52:45,891 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:52:45,891 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:52:46,011 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:52:46,011 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '273608', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.865562ms'}
2022-04-28 16:52:46,011 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：273608
2022-04-28 16:52:46,012 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:52:46,012 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:52:46,012 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:52:46,012 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:52:46,012 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '273608', 'phone': '18276762767', 'password': 'tvDzDzu72+C+92Z/j9CB8ZIdWykQnnmhBB2dqvM6uYkbwYWM7Fr1g2Nr0AcQDyAiV9JtIZLR2BtzCzglBXRQ7+ZClD7eIJYAaVtOVehVfRTXrMudoEhkEs/heqlfAyQ3jmwkNAji0cmqWWJBK3tMlCBu+yyVZALTc+hJ7AVbV4TJ/fdhl77bMazKJZ30VdqZEbGNetQqnT2pJh+J9UJuKd0PollKVFjDs1ifiqiUDIjnMBUhX3E6ux3BgxpY4GqwtTvKd69qgIAXAMAk7QdpsjoLNMBJR8iBVDPdUnRHSd1Cf50fnAuMSj2FTP2OQtQzCzZPEJeyDOp/as/t2NOZZ4LbDP7tJAj2wBNU2l7xuDjSDLUPCL+ouoJA2KvAVHHkC6ekmZDfZUTxuQ+Jdjc9Zqqj1I6ZnS5FnMRgXNi+/qo3pYWR/SnxXs394eHowpBD3FQuCmfIlvcDiyufwfwAu35pVd/6bK2/8xIrDNB9qRoLutnUZ3iUNlcKUIblwrjOH0Gb5dGB0/wEk67FM6ouJ7QFjiQWKaY/pKJGe1ojS55ZkVVlzDcdtizLVNZt7GR9y+gJeMnqYHXOSBHRZHgxq+iHf+6tOOwVxgDaajRcbFVUZUV94Fc57wt6qT15xHjoakQ1CpXX7tBzhXJkHxnQgeCqi/LaxIxobaU5PKPsWVU='}
2022-04-28 16:52:46,081 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:52:46,083 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDc2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM0OTY2fQ.wU9g13ysaCgO_EfQz7yvUEaHaEVMj1s5RFO1ea9Pwb4'}, 'time': '15.125679ms'}
2022-04-28 16:52:46,083 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:52:46,083 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDc2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM0OTY2fQ.wU9g13ysaCgO_EfQz7yvUEaHaEVMj1s5RFO1ea9Pwb4']
2022-04-28 16:52:46,083 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDc2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM0OTY2fQ.wU9g13ysaCgO_EfQz7yvUEaHaEVMj1s5RFO1ea9Pwb4,并设置为Data类实例化对象的属性和值。
2022-04-28 16:52:46,086 ARS INFO test_003_machineroom.py [29行]: =========== 新建机房接口测试  ===============
2022-04-28 16:52:46,086 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'id': 1, 'title': '新建机房', 'pre_sql': "DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'", 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"先河-aaa机房","machine_site":"#address#","domain":"#domain#","note":"#comment#","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":{"name":"先河-aaa机房"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:52:46,086 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['address', 'domain', 'comment']
2022-04-28 16:52:46,086 ARS INFO handle_replace.py [64行]: 替换之后的测试用例数据为：{'id': 1, 'title': '新建机房', 'pre_sql': "DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'", 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"先河-aaa机房","machine_site":"山东省建县浔阳张街W座 840180","domain":"https://f0559.arsyun.com:32100","note":"学校留言知道相关.同时类别公司国际一个时候或者以上.","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"操作成功","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":{"name":"先河-aaa机房"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:52:46,087 ARS INFO test_003_machineroom.py [35行]: 处理之后的请求数据为：{'machine_name': '先河-aaa机房', 'machine_site': '山东省建县浔阳张街W座 840180', 'domain': 'https://f0559.arsyun.com:32100', 'note': '学校留言知道相关.同时类别公司国际一个时候或者以上.', 'scheduling': True}
2022-04-28 16:52:46,087 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:52:46,087 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:52:46,087 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDc2NiwiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM0OTY2fQ.wU9g13ysaCgO_EfQz7yvUEaHaEVMj1s5RFO1ea9Pwb4'}
2022-04-28 16:52:46,087 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-28 16:52:46,087 ARS INFO handle_request.py [30行]: 请求数据为：{'machine_name': '先河-aaa机房', 'machine_site': '山东省建县浔阳张街W座 840180', 'domain': 'https://f0559.arsyun.com:32100', 'note': '学校留言知道相关.同时类别公司国际一个时候或者以上.', 'scheduling': True}
2022-04-28 16:52:46,139 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:52:46,139 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '4.368026ms'}
2022-04-28 16:52:46,139 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:52:46,139 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:52:46,139 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:52:46,140 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:52:46,140 ARS INFO my_assert.py [29行]: 预期结果为：操作成功
2022-04-28 16:52:46,140 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 16:52:46,140 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 16:52:46,753 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:52:46,755 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:52:46,763 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:52:46,763 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:52:46,763 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:52:46,763 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:52:46,763 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-28 16:52:46,773 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': '先河-aaa机房'}
2022-04-28 16:52:46,773 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': '先河-aaa机房'}
2022-04-28 16:52:46,773 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': '先河-aaa机房'}
2022-04-28 16:52:46,773 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:52:46,804 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:52:46,804 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:52:46,804 ARS ERROR test_003_machineroom.py [58行]: 用例执行失败
2022-04-28 16:53:57,054 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：paemlAiyksI/lYPGQK6H25KTu3CJBYZ07Ak6zR7MjTRFCN495QkDaL3Ume36aTSlCLCMPg6wsFhoVax+O26uMPlbzMKHCB5gbyErZFREq7D2G3vcwyYEsoLhCQTmR4tUg0+ZgSrIuXxHsL6NnuO3R+pY2o5uDXYMFjvnuTxsulM74KhpX8GEK3wtGS9HJAp8lqUGczSzCe/tCS/2nY+n/lA1NdqVREYGQLJY0sptbCkVJOuCH5LawpI31mHMfl45Mprp0dg+KUoW9wBbqKKACkPbCxi8mfQQdM+MP1lWVen3eZ9QYd5fDTxIhl8416CFiJBkJZyYvt/Z3itWlZTUsPyvOWk3mUxzBTg8WEDCFx1X3lTQ9kyn7Lw1AgRO26WrNmbqTwFTOTi63f2HpIdq1ZD8xnQSFzHS14kpGrh3H8UiY4UeorysOCVio9XfCKhNxtqHtnrTiVOfUB2/mlETjJcSJmzN2Gq3PQCejpPx3JfBhbEnstZbh+7uDGvvX/WEkkYSEueE19O7i8tRl9EnebNtbmzSrdsLi4OiOZ/0T4xrazuAuyJiki78joO3Wv3Tvgq5CP5cKUrim4nP2XXzf+EzZiWIAHYmt+L3QdmvO7lZXQnXkd+7KJNvb5+4kllHLqLWiOuYBHM/9Ag51938F6EvYLremqJH6Gvm7LxtcC8=
2022-04-28 16:53:57,054 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:53:57,054 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:53:57,054 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:53:57,055 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:53:57,055 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:53:57,158 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:53:57,158 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '032367', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '2.033678ms'}
2022-04-28 16:53:57,159 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：032367
2022-04-28 16:53:57,159 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:53:57,159 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:53:57,159 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:53:57,160 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:53:57,160 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '032367', 'phone': '18276762767', 'password': 'paemlAiyksI/lYPGQK6H25KTu3CJBYZ07Ak6zR7MjTRFCN495QkDaL3Ume36aTSlCLCMPg6wsFhoVax+O26uMPlbzMKHCB5gbyErZFREq7D2G3vcwyYEsoLhCQTmR4tUg0+ZgSrIuXxHsL6NnuO3R+pY2o5uDXYMFjvnuTxsulM74KhpX8GEK3wtGS9HJAp8lqUGczSzCe/tCS/2nY+n/lA1NdqVREYGQLJY0sptbCkVJOuCH5LawpI31mHMfl45Mprp0dg+KUoW9wBbqKKACkPbCxi8mfQQdM+MP1lWVen3eZ9QYd5fDTxIhl8416CFiJBkJZyYvt/Z3itWlZTUsPyvOWk3mUxzBTg8WEDCFx1X3lTQ9kyn7Lw1AgRO26WrNmbqTwFTOTi63f2HpIdq1ZD8xnQSFzHS14kpGrh3H8UiY4UeorysOCVio9XfCKhNxtqHtnrTiVOfUB2/mlETjJcSJmzN2Gq3PQCejpPx3JfBhbEnstZbh+7uDGvvX/WEkkYSEueE19O7i8tRl9EnebNtbmzSrdsLi4OiOZ/0T4xrazuAuyJiki78joO3Wv3Tvgq5CP5cKUrim4nP2XXzf+EzZiWIAHYmt+L3QdmvO7lZXQnXkd+7KJNvb5+4kllHLqLWiOuYBHM/9Ag51938F6EvYLremqJH6Gvm7LxtcC8='}
2022-04-28 16:53:57,236 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:53:57,236 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDgzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1MDM3fQ.HnrYc-M7HrF8lybJmL2FBZpKRDplzafxR634gGUKHtA'}, 'time': '13.672236ms'}
2022-04-28 16:53:57,236 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:53:57,236 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDgzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1MDM3fQ.HnrYc-M7HrF8lybJmL2FBZpKRDplzafxR634gGUKHtA']
2022-04-28 16:53:57,236 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDgzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1MDM3fQ.HnrYc-M7HrF8lybJmL2FBZpKRDplzafxR634gGUKHtA,并设置为Data类实例化对象的属性和值。
2022-04-28 16:53:57,239 ARS INFO test_003_machineroom.py [29行]: =========== 新建机房接口测试  ===============
2022-04-28 16:53:57,239 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'id': 1, 'title': '新建机房', 'pre_sql': "DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'", 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"先河-aaa机房","machine_site":"#address#","domain":"#domain#","note":"#comment#","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":{"name":"先河-aaa机房"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:53:57,239 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['address', 'domain', 'comment']
2022-04-28 16:53:57,239 ARS INFO handle_replace.py [64行]: 替换之后的测试用例数据为：{'id': 1, 'title': '新建机房', 'pre_sql': "DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'", 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"先河-aaa机房","machine_site":"西藏自治区兴城县合川宗街Q座 933122","domain":"https://f0079.arsyun.com:32100","note":"帮助现在感觉正在手机.企业更新游戏深圳.","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":{"name":"先河-aaa机房"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:53:57,240 ARS INFO test_003_machineroom.py [35行]: 处理之后的请求数据为：{'machine_name': '先河-aaa机房', 'machine_site': '西藏自治区兴城县合川宗街Q座 933122', 'domain': 'https://f0079.arsyun.com:32100', 'note': '帮助现在感觉正在手机.企业更新游戏深圳.', 'scheduling': True}
2022-04-28 16:53:57,240 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:53:57,240 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:53:57,240 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MDgzNywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1MDM3fQ.HnrYc-M7HrF8lybJmL2FBZpKRDplzafxR634gGUKHtA'}
2022-04-28 16:53:57,240 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-28 16:53:57,240 ARS INFO handle_request.py [30行]: 请求数据为：{'machine_name': '先河-aaa机房', 'machine_site': '西藏自治区兴城县合川宗街Q座 933122', 'domain': 'https://f0079.arsyun.com:32100', 'note': '帮助现在感觉正在手机.企业更新游戏深圳.', 'scheduling': True}
2022-04-28 16:53:57,305 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:53:57,305 ARS INFO handle_request.py [36行]: 响应数据为：{'code': -1, 'msg': '机房已存在', 'data': {}, 'time': '2.475647ms'}
2022-04-28 16:53:57,305 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：-1
2022-04-28 16:53:57,305 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:53:57,305 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 16:53:57,305 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：机房已存在
2022-04-28 16:53:57,305 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:53:57,305 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：False
2022-04-28 16:53:57,305 ARS ERROR my_assert.py [41行]: 部分响应结果断言失败，请检查结果是False的断言
2022-04-28 16:53:57,921 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:53:57,923 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:53:57,932 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:53:57,934 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:53:57,934 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:53:57,934 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:53:57,934 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-28 16:53:57,944 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': '先河-aaa机房'}
2022-04-28 16:53:57,944 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': '先河-aaa机房'}
2022-04-28 16:53:57,944 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': '先河-aaa机房'}
2022-04-28 16:53:57,944 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:53:57,966 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:53:57,967 ARS INFO my_assert.py [82行]: 全部数据库断言通过
2022-04-28 16:53:57,967 ARS ERROR test_003_machineroom.py [58行]: 用例执行失败
2022-04-28 16:57:57,358 ARS INFO rsa_encrypt.py [45行]: 数据加密后的结果为：cKXeRwBjr4mtUOm394RtnvNag8zjr34IrMd36KtNc1+ddAp1nYtkm1k3sPSkYgxWPcCbJ1/CJN+92Gvqy1cZgHw1HAoJuPOSIJmI6K2jd8EEjBfkm2znddMtS4sV5EkkzlkUEyX+Jtxxceo/Kxc3Y22UVu9CzdPbmav1bS4MO9Lj1fkzVD7TxQGV89RGy84EMtDDKpzVBomSKPSQIgwo629c/KlBuX1So8L1FeWWKq2J7h1CuswOgV9QhZRRowqwGH4hLh5VZ1GSp+ktLoZzg8GAENAK43gUab2yg5UpqCDJAMkNnSvjvD+mZaypH5zC92/nz4AdDqEOz/81GjLoOJ1gkioIyNUiKaX4og0fYsfAMUtJMDzYurpi6zh2cNZocAZ5SQhpN8zZRpU2Tv9IXLGV8XALB3AjcrIwGCKy9GhWp5WkKIuZW+dzGoz3LwdxZvi1mzUHqmZnnSyKF9SsVTCvvc0fv7hsfI2E3YQ4/FzuIB1ZkzOvVdVYPBsOx95WWA6JSFrPf1H7/YKkaPau8s7nBwLf8+Ym6qaYgT58XOt7zjC98NMV7GeP3A3KP6yHiSl1R64/X9kPa79Vkjd3+sNJR7PAGzkAul5JaP7j0IiyKYYsD+hKKndxuLIboxYQIZtX8AfVW1+6tnliCZhQODhDSqSgbYZ9ODBUFeQq+qM=
2022-04-28 16:57:57,358 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:57:57,358 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:57:57,358 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:57:57,358 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/sms/get
2022-04-28 16:57:57,358 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_type': 'login', 'phone': '18276762767'}
2022-04-28 16:57:57,421 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:57:57,421 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'is_already_send': False, 'sms_code': '107139', 'send_rest_sec': 60, 'expire_sec': 900}, 'time': '1.70853ms'}
2022-04-28 16:57:57,422 ARS INFO handle_sms_code.py [27行]: 生成的验证码为：107139
2022-04-28 16:57:57,422 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:57:57,422 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:57:57,422 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json'}
2022-04-28 16:57:57,423 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/base/login
2022-04-28 16:57:57,423 ARS INFO handle_request.py [30行]: 请求数据为：{'sms_code': '107139', 'phone': '18276762767', 'password': 'cKXeRwBjr4mtUOm394RtnvNag8zjr34IrMd36KtNc1+ddAp1nYtkm1k3sPSkYgxWPcCbJ1/CJN+92Gvqy1cZgHw1HAoJuPOSIJmI6K2jd8EEjBfkm2znddMtS4sV5EkkzlkUEyX+Jtxxceo/Kxc3Y22UVu9CzdPbmav1bS4MO9Lj1fkzVD7TxQGV89RGy84EMtDDKpzVBomSKPSQIgwo629c/KlBuX1So8L1FeWWKq2J7h1CuswOgV9QhZRRowqwGH4hLh5VZ1GSp+ktLoZzg8GAENAK43gUab2yg5UpqCDJAMkNnSvjvD+mZaypH5zC92/nz4AdDqEOz/81GjLoOJ1gkioIyNUiKaX4og0fYsfAMUtJMDzYurpi6zh2cNZocAZ5SQhpN8zZRpU2Tv9IXLGV8XALB3AjcrIwGCKy9GhWp5WkKIuZW+dzGoz3LwdxZvi1mzUHqmZnnSyKF9SsVTCvvc0fv7hsfI2E3YQ4/FzuIB1ZkzOvVdVYPBsOx95WWA6JSFrPf1H7/YKkaPau8s7nBwLf8+Ym6qaYgT58XOt7zjC98NMV7GeP3A3KP6yHiSl1R64/X9kPa79Vkjd3+sNJR7PAGzkAul5JaP7j0IiyKYYsD+hKKndxuLIboxYQIZtX8AfVW1+6tnliCZhQODhDSqSgbYZ9ODBUFeQq+qM='}
2022-04-28 16:57:57,521 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:57:57,521 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': '操作成功', 'data': {'user_id': 6, 'token': 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MTA3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1Mjc3fQ.6NHHT8dvwHyMkU3ZMkRS-kswPNOpGMgf933DsFH7bkU'}, 'time': '15.016482ms'}
2022-04-28 16:57:57,523 ARS INFO handle_extract.py [26行]: 提取的变量名是：token，提取的jsonpath表达式是：$..token
2022-04-28 16:57:57,523 ARS INFO handle_extract.py [28行]: jsonpath提取之后的值为：['eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MTA3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1Mjc3fQ.6NHHT8dvwHyMkU3ZMkRS-kswPNOpGMgf933DsFH7bkU']
2022-04-28 16:57:57,523 ARS INFO handle_extract.py [33行]: 提取的变量名是：token，提取到的值是：eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MTA3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1Mjc3fQ.6NHHT8dvwHyMkU3ZMkRS-kswPNOpGMgf933DsFH7bkU,并设置为Data类实例化对象的属性和值。
2022-04-28 16:57:57,529 ARS INFO test_003_machineroom.py [29行]: =========== 新建机房接口测试  ===============
2022-04-28 16:57:57,529 ARS INFO handle_replace.py [27行]: 测试用例数据为：{'id': 1, 'title': '新建机房', 'pre_sql': "DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'", 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"先河-aaa机房","machine_site":"#address#","domain":"#domain#","note":"#comment#","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":{"name":"先河-aaa机房"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:57:57,529 ARS INFO handle_replace.py [30行]: 查找到需要替换的标记符为：['address', 'domain', 'comment']
2022-04-28 16:57:57,529 ARS INFO handle_replace.py [64行]: 替换之后的测试用例数据为：{'id': 1, 'title': '新建机房', 'pre_sql': "DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'", 'method': 'post', 'url': '/machine/create/one', 'req_data': '{"machine_name":"先河-aaa机房","machine_site":"北京市柳州县新城巢湖街k座 621838","domain":"https://f0122.arsyun.com:32100","note":"来源基本发展最后我们但是关于.规定主要一样责任制作帖子结果.的是事情计划男人部分一定只是.","scheduling":true}', 'assert_response': '[{"expr":"$.code","expected":0,"type":"eq"},\n{"expr":"$.msg","expected":"success","type":"eq"}]', 'assert_db': '[{"sql":"SELECT * FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":1,"db_type":"count"},{"sql":"SELECT name FROM t_machine_room WHERE NAME=\'先河-aaa机房\'","expected":{"name":"先河-aaa机房"},"db_type":"check_value"}]', 'extract': None, 'execute': 'True'}
2022-04-28 16:57:57,529 ARS INFO test_003_machineroom.py [35行]: 处理之后的请求数据为：{'machine_name': '先河-aaa机房', 'machine_site': '北京市柳州县新城巢湖街k座 621838', 'domain': 'https://f0122.arsyun.com:32100', 'note': '来源基本发展最后我们但是关于.规定主要一样责任制作帖子结果.的是事情计划男人部分一定只是.', 'scheduling': True}
2022-04-28 16:57:57,529 ARS INFO handle_request.py [65行]: 执行测试用例pre_sql列的前置条件，执行数据库语句：DELETE FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:57:58,303 ARS INFO handle_request.py [20行]: =======================  发起一次HTTP请求  =======================
2022-04-28 16:57:58,303 ARS INFO handle_request.py [21行]: 请求方法为:post
2022-04-28 16:57:58,303 ARS INFO handle_request.py [24行]: 请求头headers为：{'Content-Type': 'application/json', 'Authorization': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VyX2lkIjo2LCJ1c2VyX25hbWUiOiJ0ZXJyeTEiLCJidWZmZXJfdGltZSI6ODY0MDAsImV4cCI6MTY1MTc0MTA3NywiaXNzIjoiYXJzUHVibGljIiwibmJmIjoxNjUxMTM1Mjc3fQ.6NHHT8dvwHyMkU3ZMkRS-kswPNOpGMgf933DsFH7bkU'}
2022-04-28 16:57:58,304 ARS INFO handle_request.py [27行]: 请求的URL为：https://opstest.arsyun.com/api/v5/public/machine/create/one
2022-04-28 16:57:58,304 ARS INFO handle_request.py [30行]: 请求数据为：{'machine_name': '先河-aaa机房', 'machine_site': '北京市柳州县新城巢湖街k座 621838', 'domain': 'https://f0122.arsyun.com:32100', 'note': '来源基本发展最后我们但是关于.规定主要一样责任制作帖子结果.的是事情计划男人部分一定只是.', 'scheduling': True}
2022-04-28 16:57:58,398 ARS INFO handle_request.py [35行]: 响应状态码：200
2022-04-28 16:57:58,399 ARS INFO handle_request.py [36行]: 响应数据为：{'code': 0, 'msg': 'success', 'data': {}, 'time': '3.909121ms'}
2022-04-28 16:57:58,399 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.code，提取到的实际结果为：0
2022-04-28 16:57:58,399 ARS INFO my_assert.py [29行]: 预期结果为：0
2022-04-28 16:57:58,399 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:57:58,399 ARS INFO my_assert.py [28行]: 通过jsonpath表达式：$.msg，提取到的实际结果为：success
2022-04-28 16:57:58,399 ARS INFO my_assert.py [29行]: 预期结果为：success
2022-04-28 16:57:58,399 ARS INFO my_assert.py [32行]: 断言方式：eq，断言的结果为：True
2022-04-28 16:57:58,399 ARS INFO my_assert.py [44行]: 全部响应结果断言通过
2022-04-28 16:57:59,059 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT * FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:57:59,059 ARS INFO my_assert.py [59行]: 数据库查询方式：count，将进行数据库查询结果条数进行比对
2022-04-28 16:57:59,072 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：1
2022-04-28 16:57:59,072 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：1
2022-04-28 16:57:59,072 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:57:59,072 ARS INFO my_assert.py [56行]: 要对比的sql语句为：SELECT name FROM t_machine_room WHERE NAME='先河-aaa机房'
2022-04-28 16:57:59,072 ARS INFO my_assert.py [63行]: 数据库查询方式check_value，将进行数据库查询结果字典内容进行比对
2022-04-28 16:57:59,084 ARS INFO my_assert.py [65行]: 查询的数据结果为：{'name': '先河-aaa机房'}
2022-04-28 16:57:59,085 ARS INFO my_assert.py [70行]: 数据库查询的实际结果actual：{'name': '先河-aaa机房'}
2022-04-28 16:57:59,085 ARS INFO my_assert.py [71行]: 要对比的预期结果expected：{'name': '先河-aaa机房'}
2022-04-28 16:57:59,085 ARS INFO my_assert.py [73行]: 数据库比对结果为：===========>>>True
2022-04-28 16:57:59,103 ARS INFO my_assert.py [76行]: 关闭数据库连接
2022-04-28 16:57:59,103 ARS INFO my_assert.py [82行]: 全部数据库断言通过
